/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type GetTicketsIdRequest = {
    /**
     * The id of the model
     */
    id: string;
    /**
     * The unique identifier of a Connected Account
     */
    xIntegrationosConnectionKey: string;
};

export enum GetTicketsIdStatusCode {
    TwoHundred = 200,
    FourHundred = 400,
    FiveHundred = 500,
}

export enum GetTicketsIdStatus {
    Open = "open",
    Pending = "pending",
    Closed = "closed",
    OnHold = "onHold",
    Resolved = "resolved",
    Cancelled = "cancelled",
    InProgress = "inProgress",
}

export enum GetTicketsIdPriority {
    Low = "low",
    Medium = "medium",
    High = "high",
    Urgent = "urgent",
}

export enum GetTicketsIdType {
    Question = "question",
    Incident = "incident",
    Problem = "problem",
    Task = "task",
    Bug = "bug",
    FeatureRequest = "featureRequest",
}

export enum GetTicketsIdMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type GetTicketsIdProfilePicture = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: GetTicketsIdMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum GetTicketsIdTicketsMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type GetTicketsIdCoverPhoto = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: GetTicketsIdTicketsMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum GetTicketsIdGender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export enum GetTicketsIdTicketsType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type GetTicketsIdGeoLocation = {};

export type GetTicketsIdTicketsResponse200CustomFields = {};

export type GetTicketsIdAddresses = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: GetTicketsIdTicketsType | undefined;
    geoLocation?: GetTicketsIdGeoLocation | undefined;
    customFields?: Array<GetTicketsIdTicketsResponse200CustomFields> | undefined;
    subdivisionCode?: string | undefined;
};

export enum GetTicketsIdRoles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export enum GetTicketsIdCommunications {
    Email = "Email",
    Sms = "SMS",
    PushNotification = "PushNotification",
}

export type GetTicketsIdPreferences = {
    id?: string | undefined;
    language?: string | undefined;
    currency?: string | undefined;
    timeZone?: string | undefined;
    communications?: GetTicketsIdCommunications | undefined;
};

export enum GetTicketsIdTicketsResponseType {
    Facebook = "facebook",
    Twitter = "twitter",
    Linkedin = "linkedin",
    Instagram = "instagram",
    Tiktok = "tiktok",
    Pinterest = "pinterest",
    Youtube = "youtube",
    Other = "other",
}

export enum GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType {
    String = "String",
    Number = "Number",
    Boolean = "Boolean",
    Date = "Date",
    Json = "Json",
    Array = "Array",
}

export type GetTicketsIdAdditionalInfo = {
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    type?: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    entityId?: string | undefined;
    entityType?: string | undefined;
};

export type GetTicketsIdSocialLinks = {
    type?: GetTicketsIdTicketsResponseType | undefined;
    username?: string | undefined;
    displayName?: string | undefined;
    url?: string | undefined;
    avatarUrl?: string | undefined;
    email?: string | undefined;
    additionalInfo?: GetTicketsIdAdditionalInfo | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum GetTicketsIdTicketsStatus {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export enum GetTicketsIdProvider {
    Google = "Google",
    Facebook = "Facebook",
    Twitter = "Twitter",
    LinkedIn = "LinkedIn",
    Microsoft = "Microsoft",
    Apple = "Apple",
    Other = "Other",
}

export type GetTicketsIdSso = {
    provider?: GetTicketsIdProvider | undefined;
    providerUserId?: string | undefined;
    profileUrl?: string | undefined;
    accessToken?: string | undefined;
    refreshToken?: string | undefined;
    expiresIn?: number | undefined;
    expiryDate?: number | undefined;
    scopes?: Array<string> | undefined;
    tokenType?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum GetTicketsIdTicketsResponse200Type {
    CreditCard = "CreditCard",
    PayPal = "PayPal",
    BankTransfer = "BankTransfer",
    CryptoCurrency = "CryptoCurrency",
}

export type GetTicketsIdPaymentMethods = {
    id?: string | undefined;
    type?: GetTicketsIdTicketsResponse200Type | undefined;
    details?: string | undefined;
    isDefault?: boolean | undefined;
};

export type GetTicketsIdAssignee = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: GetTicketsIdProfilePicture | undefined;
    coverPhoto?: GetTicketsIdCoverPhoto | undefined;
    gender?: GetTicketsIdGender | undefined;
    dateOfBirth?: number | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: number | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    addresses?: Array<GetTicketsIdAddresses> | undefined;
    roles?: Array<GetTicketsIdRoles> | undefined;
    preferences?: GetTicketsIdPreferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialLinks?: GetTicketsIdSocialLinks | undefined;
    status?: GetTicketsIdTicketsStatus | undefined;
    sso?: Array<GetTicketsIdSso> | undefined;
    paymentMethods?: GetTicketsIdPaymentMethods | undefined;
};

export enum GetTicketsIdTicketsResponse200ApplicationJSONType {
    Personal = "personal",
    Business = "business",
    Other = "other",
}

export type GetTicketsIdEmails = {
    email?: string | undefined;
    type?: GetTicketsIdTicketsResponse200ApplicationJSONType | undefined;
};

export enum GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyType {
    Personal = "personal",
    Business = "business",
    Other = "other",
}

export type GetTicketsIdPhones = {
    phone?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyType | undefined;
};

export enum GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type GetTicketsIdTicketsGeoLocation = {
    latitude?: number | undefined;
    longitude?: number | undefined;
    altitude?: number | undefined;
    accuracy?: number | undefined;
    altitudeAccuracy?: number | undefined;
    heading?: number | undefined;
    speed?: number | undefined;
    timestamp?: number | undefined;
};

export enum GetTicketsIdTicketsResponseFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type GetTicketsIdTicketsResponse200ApplicationJSONCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: GetTicketsIdTicketsResponseFieldType | undefined;
};

export type GetTicketsIdAddress = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedType | undefined;
    geoLocation?: GetTicketsIdTicketsGeoLocation | undefined;
    customFields?: Array<GetTicketsIdTicketsResponse200ApplicationJSONCustomFields> | undefined;
    subdivisionCode?: string | undefined;
};

export enum GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type GetTicketsIdTicketsResponseGeoLocation = {};

export type GetTicketsIdTicketsResponseCustomFields = {};

export type GetTicketsIdTicketsAddresses = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType | undefined;
    geoLocation?: GetTicketsIdTicketsResponseGeoLocation | undefined;
    customFields?: Array<GetTicketsIdTicketsResponseCustomFields> | undefined;
    subdivisionCode?: string | undefined;
};

export enum GetTicketsIdTicketsResponsePriority {
    Low = "low",
    Medium = "medium",
    High = "high",
}

export enum GetTicketsIdTicketsResponseMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type GetTicketsIdTicketsProfilePicture = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: GetTicketsIdTicketsResponseMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum GetTicketsIdTicketsResponse200MimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type GetTicketsIdTicketsCoverPhoto = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: GetTicketsIdTicketsResponse200MimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum GetTicketsIdTicketsGender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export enum GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type GetTicketsIdTicketsResponse200GeoLocation = {};

export type GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyCustomFields = {};

export type GetTicketsIdTicketsResponseAddresses = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?:
        | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType
        | undefined;
    geoLocation?: GetTicketsIdTicketsResponse200GeoLocation | undefined;
    customFields?:
        | Array<GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyCustomFields>
        | undefined;
    subdivisionCode?: string | undefined;
};

export enum GetTicketsIdTicketsRoles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export enum GetTicketsIdTicketsCommunications {
    Email = "Email",
    Sms = "SMS",
    PushNotification = "PushNotification",
}

export type GetTicketsIdTicketsPreferences = {
    id?: string | undefined;
    language?: string | undefined;
    currency?: string | undefined;
    timeZone?: string | undefined;
    communications?: GetTicketsIdTicketsCommunications | undefined;
};

export enum GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType {
    Facebook = "facebook",
    Twitter = "twitter",
    Linkedin = "linkedin",
    Instagram = "instagram",
    Tiktok = "tiktok",
    Pinterest = "pinterest",
    Youtube = "youtube",
    Other = "other",
}

export enum GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType {
    String = "String",
    Number = "Number",
    Boolean = "Boolean",
    Date = "Date",
    Json = "Json",
    Array = "Array",
}

export type GetTicketsIdTicketsResponseAdditionalInfo = {
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    type?:
        | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType
        | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    entityId?: string | undefined;
    entityType?: string | undefined;
};

export type GetTicketsIdTicketsSocialLinks = {
    type?:
        | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType
        | undefined;
    username?: string | undefined;
    displayName?: string | undefined;
    url?: string | undefined;
    avatarUrl?: string | undefined;
    email?: string | undefined;
    additionalInfo?: GetTicketsIdTicketsResponseAdditionalInfo | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum GetTicketsIdTicketsResponse200ApplicationJSONStatus {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export enum GetTicketsIdTicketsProvider {
    Google = "Google",
    Facebook = "Facebook",
    Twitter = "Twitter",
    LinkedIn = "LinkedIn",
    Microsoft = "Microsoft",
    Apple = "Apple",
    Other = "Other",
}

export type GetTicketsIdTicketsSso = {
    provider?: GetTicketsIdTicketsProvider | undefined;
    providerUserId?: string | undefined;
    profileUrl?: string | undefined;
    accessToken?: string | undefined;
    refreshToken?: string | undefined;
    expiresIn?: number | undefined;
    expiryDate?: number | undefined;
    scopes?: Array<string> | undefined;
    tokenType?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType {
    CreditCard = "CreditCard",
    PayPal = "PayPal",
    BankTransfer = "BankTransfer",
    CryptoCurrency = "CryptoCurrency",
}

export type GetTicketsIdTicketsPaymentMethods = {
    id?: string | undefined;
    type?:
        | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType
        | undefined;
    details?: string | undefined;
    isDefault?: boolean | undefined;
};

export type GetTicketsIdTicketsResponseAuthor = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: GetTicketsIdTicketsProfilePicture | undefined;
    coverPhoto?: GetTicketsIdTicketsCoverPhoto | undefined;
    gender?: GetTicketsIdTicketsGender | undefined;
    dateOfBirth?: number | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: number | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    addresses?: Array<GetTicketsIdTicketsResponseAddresses> | undefined;
    roles?: Array<GetTicketsIdTicketsRoles> | undefined;
    preferences?: GetTicketsIdTicketsPreferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialLinks?: GetTicketsIdTicketsSocialLinks | undefined;
    status?: GetTicketsIdTicketsResponse200ApplicationJSONStatus | undefined;
    sso?: Array<GetTicketsIdTicketsSso> | undefined;
    paymentMethods?: GetTicketsIdTicketsPaymentMethods | undefined;
};

export type GetTicketsIdTicketsResponseMetadata = {};

export type GetTicketsIdTicketsAssociatedWith = {};

export type GetTicketsIdTicketsPermissions = {};

export type GetTicketsIdTicketsResponseAttachments = {
    id?: string | undefined;
    fileName?: string | undefined;
    fileSize?: number | undefined;
    fileType?: string | undefined;
    url?: string | undefined;
    thumbnailUrl?: string | undefined;
    previewUrl?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    metadata?: GetTicketsIdTicketsResponseMetadata | undefined;
    associatedWith?: GetTicketsIdTicketsAssociatedWith | undefined;
    permissions?: GetTicketsIdTicketsPermissions | undefined;
};

export type GetTicketsIdTicketsResponseProfilePicture = {};

export type GetTicketsIdTicketsResponseCoverPhoto = {};

export enum GetTicketsIdTicketsResponseGender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export type GetTicketsIdTicketsResponse200Addresses = {};

export enum GetTicketsIdTicketsResponseRoles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export type GetTicketsIdTicketsResponsePreferences = {};

export type GetTicketsIdTicketsResponseSocialLinks = {};

export enum GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyStatus {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export type GetTicketsIdTicketsResponseSso = {};

export type GetTicketsIdTicketsResponsePaymentMethods = {};

export type GetTicketsIdTicketsSharedWith = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: GetTicketsIdTicketsResponseProfilePicture | undefined;
    coverPhoto?: GetTicketsIdTicketsResponseCoverPhoto | undefined;
    gender?: GetTicketsIdTicketsResponseGender | undefined;
    dateOfBirth?: number | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: number | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    addresses?: Array<GetTicketsIdTicketsResponse200Addresses> | undefined;
    roles?: Array<GetTicketsIdTicketsResponseRoles> | undefined;
    preferences?: GetTicketsIdTicketsResponsePreferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialLinks?: GetTicketsIdTicketsResponseSocialLinks | undefined;
    status?: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyStatus | undefined;
    sso?: Array<GetTicketsIdTicketsResponseSso> | undefined;
    paymentMethods?: GetTicketsIdTicketsResponsePaymentMethods | undefined;
};

export enum GetTicketsIdTicketsVisibility {
    Private = "private",
    Public = "public",
    Shared = "shared",
}

export enum GetTicketsIdTicketsResponse200Status {
    Active = "active",
    Archived = "archived",
}

export type GetTicketsIdTicketsNotes = {
    id?: string | undefined;
    title?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    lastAccessed?: number | undefined;
    reminder?: number | undefined;
    color?: string | undefined;
    priority?: GetTicketsIdTicketsResponsePriority | undefined;
    author?: GetTicketsIdTicketsResponseAuthor | undefined;
    tags?: Array<string> | undefined;
    attachments?: Array<GetTicketsIdTicketsResponseAttachments> | undefined;
    sharedWith?: Array<GetTicketsIdTicketsSharedWith> | undefined;
    visibility?: GetTicketsIdTicketsVisibility | undefined;
    status?: GetTicketsIdTicketsResponse200Status | undefined;
    metadata?: Array<string> | undefined;
};

export enum GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType {
    Facebook = "facebook",
    Twitter = "twitter",
    Linkedin = "linkedin",
    Instagram = "instagram",
    Tiktok = "tiktok",
    Pinterest = "pinterest",
    Youtube = "youtube",
    Other = "other",
}

export type GetTicketsIdTicketsAdditionalInfo = {};

export type GetTicketsIdSocialProfiles = {
    type?:
        | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType
        | undefined;
    username?: string | undefined;
    displayName?: string | undefined;
    url?: string | undefined;
    avatarUrl?: string | undefined;
    email?: string | undefined;
    additionalInfo?: GetTicketsIdTicketsAdditionalInfo | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum GetTicketsIdTicketsFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type GetTicketsIdTicketsCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: GetTicketsIdTicketsFieldType | undefined;
};

export type GetTicketsIdReporter = {
    id?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    leadId?: string | undefined;
    company?: string | undefined;
    defaultEmail?: string | undefined;
    emails?: Array<GetTicketsIdEmails> | undefined;
    defaultPhone?: string | undefined;
    phones?: Array<GetTicketsIdPhones> | undefined;
    address?: GetTicketsIdAddress | undefined;
    addresses?: Array<GetTicketsIdTicketsAddresses> | undefined;
    birthday?: number | undefined;
    relationship?: string | undefined;
    note?: string | undefined;
    notes?: GetTicketsIdTicketsNotes | undefined;
    tags?: Array<string> | undefined;
    websites?: Array<string> | undefined;
    socialProfiles?: Array<GetTicketsIdSocialProfiles> | undefined;
    isActive?: boolean | undefined;
    customFields?: Array<GetTicketsIdTicketsCustomFields> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
};

export type GetTicketsIdMetadata = {};

export type GetTicketsIdAssociatedWith = {};

export type GetTicketsIdPermissions = {};

export type GetTicketsIdAttachments = {
    id?: string | undefined;
    fileName?: string | undefined;
    fileSize?: number | undefined;
    fileType?: string | undefined;
    url?: string | undefined;
    thumbnailUrl?: string | undefined;
    previewUrl?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    metadata?: GetTicketsIdMetadata | undefined;
    associatedWith?: GetTicketsIdAssociatedWith | undefined;
    permissions?: GetTicketsIdPermissions | undefined;
};

export type GetTicketsIdAuthor = {};

export type GetTicketsIdTicketsMetadata = {};

export type GetTicketsIdComments = {
    commentId?: string | undefined;
    author?: GetTicketsIdAuthor | undefined;
    text?: string | undefined;
    parentId?: string | undefined;
    likes?: number | undefined;
    flagged?: boolean | undefined;
    metadata?: Array<GetTicketsIdTicketsMetadata> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum GetTicketsIdTicketsPriority {
    Low = "low",
    Medium = "medium",
    High = "high",
}

export type GetTicketsIdTicketsAuthor = {};

export type GetTicketsIdTicketsAttachments = {};

export type GetTicketsIdSharedWith = {};

export enum GetTicketsIdVisibility {
    Private = "private",
    Public = "public",
    Shared = "shared",
}

export enum GetTicketsIdTicketsResponseStatus {
    Active = "active",
    Archived = "archived",
}

export type GetTicketsIdNotes = {
    id?: string | undefined;
    title?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    lastAccessed?: number | undefined;
    reminder?: number | undefined;
    color?: string | undefined;
    priority?: GetTicketsIdTicketsPriority | undefined;
    author?: GetTicketsIdTicketsAuthor | undefined;
    tags?: Array<string> | undefined;
    attachments?: Array<GetTicketsIdTicketsAttachments> | undefined;
    sharedWith?: Array<GetTicketsIdSharedWith> | undefined;
    visibility?: GetTicketsIdVisibility | undefined;
    status?: GetTicketsIdTicketsResponseStatus | undefined;
    metadata?: Array<string> | undefined;
};

export enum GetTicketsIdFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type GetTicketsIdCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: GetTicketsIdFieldType | undefined;
};

export type GetTicketsIdUnified = {
    id?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    status?: GetTicketsIdStatus | undefined;
    priority?: GetTicketsIdPriority | undefined;
    type?: GetTicketsIdType | undefined;
    assignee?: GetTicketsIdAssignee | undefined;
    reporter?: GetTicketsIdReporter | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    dueDate?: number | undefined;
    attachments?: Array<GetTicketsIdAttachments> | undefined;
    comments?: Array<GetTicketsIdComments> | undefined;
    notes?: Array<GetTicketsIdNotes> | undefined;
    tags?: Array<string> | undefined;
    customFields?: Array<GetTicketsIdCustomFields> | undefined;
};

export type GetTicketsIdPassthrough = {};

export type GetTicketsIdCache = {
    hit?: boolean | undefined;
    ttl?: number | undefined;
    key?: string | undefined;
};

export type GetTicketsIdMeta = {
    timestamp?: number | undefined;
    latency?: number | undefined;
    platformRateLimitRemaining?: number | undefined;
    rateLimitRemaining?: number | undefined;
    cache?: GetTicketsIdCache | undefined;
    transactionKey?: string | undefined;
    txn?: string | undefined;
    platform?: string | undefined;
    platformVersion?: string | undefined;
    connectionDefinitionKey?: string | undefined;
    action?: string | undefined;
    commonModel?: string | undefined;
    commonModelVersion?: string | undefined;
    connectionKey?: string | undefined;
    hash?: string | undefined;
    heartbeats?: Array<string> | undefined;
    totalTransactions?: number | undefined;
};

/**
 * Successful response
 */
export type GetTicketsIdResponseBody = {
    status?: string | undefined;
    statusCode?: GetTicketsIdStatusCode | undefined;
    unified?: GetTicketsIdUnified | undefined;
    passthrough?: GetTicketsIdPassthrough | undefined;
    meta?: GetTicketsIdMeta | undefined;
};

export type GetTicketsIdResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Successful response
     */
    object?: GetTicketsIdResponseBody | undefined;
};

/** @internal */
export namespace GetTicketsIdRequest$ {
    export type Inbound = {
        id: string;
        "X-INTEGRATIONOS-CONNECTION-KEY": string;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdRequest, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string(),
            "X-INTEGRATIONOS-CONNECTION-KEY": z.string(),
        })
        .transform((v) => {
            return {
                id: v.id,
                xIntegrationosConnectionKey: v["X-INTEGRATIONOS-CONNECTION-KEY"],
            };
        });

    export type Outbound = {
        id: string;
        "X-INTEGRATIONOS-CONNECTION-KEY": string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdRequest> = z
        .object({
            id: z.string(),
            xIntegrationosConnectionKey: z.string(),
        })
        .transform((v) => {
            return {
                id: v.id,
                "X-INTEGRATIONOS-CONNECTION-KEY": v.xIntegrationosConnectionKey,
            };
        });
}

/** @internal */
export const GetTicketsIdStatusCode$ = z.nativeEnum(GetTicketsIdStatusCode);

/** @internal */
export const GetTicketsIdStatus$ = z.nativeEnum(GetTicketsIdStatus);

/** @internal */
export const GetTicketsIdPriority$ = z.nativeEnum(GetTicketsIdPriority);

/** @internal */
export const GetTicketsIdType$ = z.nativeEnum(GetTicketsIdType);

/** @internal */
export const GetTicketsIdMimeType$ = z.nativeEnum(GetTicketsIdMimeType);

/** @internal */
export namespace GetTicketsIdProfilePicture$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: GetTicketsIdMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdProfilePicture, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: GetTicketsIdMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: GetTicketsIdMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdProfilePicture> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: GetTicketsIdMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsMimeType$ = z.nativeEnum(GetTicketsIdTicketsMimeType);

/** @internal */
export namespace GetTicketsIdCoverPhoto$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: GetTicketsIdTicketsMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdCoverPhoto, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: GetTicketsIdTicketsMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: GetTicketsIdTicketsMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdCoverPhoto> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: GetTicketsIdTicketsMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const GetTicketsIdGender$ = z.nativeEnum(GetTicketsIdGender);

/** @internal */
export const GetTicketsIdTicketsType$ = z.nativeEnum(GetTicketsIdTicketsType);

/** @internal */
export namespace GetTicketsIdGeoLocation$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdGeoLocation, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdGeoLocation> =
        z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsResponse200CustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponse200CustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponse200CustomFields
    > = z.object({});
}

/** @internal */
export namespace GetTicketsIdAddresses$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: GetTicketsIdTicketsType | undefined;
        geoLocation?: GetTicketsIdGeoLocation$.Inbound | undefined;
        customFields?: Array<GetTicketsIdTicketsResponse200CustomFields$.Inbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdAddresses, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: GetTicketsIdTicketsType$.optional(),
            geoLocation: z.lazy(() => GetTicketsIdGeoLocation$.inboundSchema).optional(),
            customFields: z
                .array(z.lazy(() => GetTicketsIdTicketsResponse200CustomFields$.inboundSchema))
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: GetTicketsIdTicketsType | undefined;
        geoLocation?: GetTicketsIdGeoLocation$.Outbound | undefined;
        customFields?: Array<GetTicketsIdTicketsResponse200CustomFields$.Outbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdAddresses> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: GetTicketsIdTicketsType$.optional(),
            geoLocation: z.lazy(() => GetTicketsIdGeoLocation$.outboundSchema).optional(),
            customFields: z
                .array(z.lazy(() => GetTicketsIdTicketsResponse200CustomFields$.outboundSchema))
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const GetTicketsIdRoles$ = z.nativeEnum(GetTicketsIdRoles);

/** @internal */
export const GetTicketsIdCommunications$ = z.nativeEnum(GetTicketsIdCommunications);

/** @internal */
export namespace GetTicketsIdPreferences$ {
    export type Inbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: GetTicketsIdCommunications | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdPreferences, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: GetTicketsIdCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: GetTicketsIdCommunications | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdPreferences> = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: GetTicketsIdCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsResponseType$ = z.nativeEnum(GetTicketsIdTicketsResponseType);

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType$ =
    z.nativeEnum(GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType);

/** @internal */
export namespace GetTicketsIdAdditionalInfo$ {
    export type Inbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdAdditionalInfo, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdAdditionalInfo> = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdSocialLinks$ {
    export type Inbound = {
        type?: GetTicketsIdTicketsResponseType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: GetTicketsIdAdditionalInfo$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdSocialLinks, z.ZodTypeDef, Inbound> = z
        .object({
            type: GetTicketsIdTicketsResponseType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z.lazy(() => GetTicketsIdAdditionalInfo$.inboundSchema).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        type?: GetTicketsIdTicketsResponseType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: GetTicketsIdAdditionalInfo$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdSocialLinks> = z
        .object({
            type: GetTicketsIdTicketsResponseType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z.lazy(() => GetTicketsIdAdditionalInfo$.outboundSchema).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsStatus$ = z.nativeEnum(GetTicketsIdTicketsStatus);

/** @internal */
export const GetTicketsIdProvider$ = z.nativeEnum(GetTicketsIdProvider);

/** @internal */
export namespace GetTicketsIdSso$ {
    export type Inbound = {
        provider?: GetTicketsIdProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdSso, z.ZodTypeDef, Inbound> = z
        .object({
            provider: GetTicketsIdProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        provider?: GetTicketsIdProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdSso> = z
        .object({
            provider: GetTicketsIdProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsResponse200Type$ = z.nativeEnum(GetTicketsIdTicketsResponse200Type);

/** @internal */
export namespace GetTicketsIdPaymentMethods$ {
    export type Inbound = {
        id?: string | undefined;
        type?: GetTicketsIdTicketsResponse200Type | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdPaymentMethods, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            type: GetTicketsIdTicketsResponse200Type$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        type?: GetTicketsIdTicketsResponse200Type | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdPaymentMethods> = z
        .object({
            id: z.string().optional(),
            type: GetTicketsIdTicketsResponse200Type$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdAssignee$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: GetTicketsIdProfilePicture$.Inbound | undefined;
        coverPhoto?: GetTicketsIdCoverPhoto$.Inbound | undefined;
        gender?: GetTicketsIdGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<GetTicketsIdAddresses$.Inbound> | undefined;
        roles?: Array<GetTicketsIdRoles> | undefined;
        preferences?: GetTicketsIdPreferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: GetTicketsIdSocialLinks$.Inbound | undefined;
        status?: GetTicketsIdTicketsStatus | undefined;
        sso?: Array<GetTicketsIdSso$.Inbound> | undefined;
        paymentMethods?: GetTicketsIdPaymentMethods$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdAssignee, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z.lazy(() => GetTicketsIdProfilePicture$.inboundSchema).optional(),
            coverPhoto: z.lazy(() => GetTicketsIdCoverPhoto$.inboundSchema).optional(),
            gender: GetTicketsIdGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z.array(z.lazy(() => GetTicketsIdAddresses$.inboundSchema)).optional(),
            roles: z.array(GetTicketsIdRoles$).optional(),
            preferences: z.lazy(() => GetTicketsIdPreferences$.inboundSchema).optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z.lazy(() => GetTicketsIdSocialLinks$.inboundSchema).optional(),
            status: GetTicketsIdTicketsStatus$.optional(),
            sso: z.array(z.lazy(() => GetTicketsIdSso$.inboundSchema)).optional(),
            paymentMethods: z.lazy(() => GetTicketsIdPaymentMethods$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: GetTicketsIdProfilePicture$.Outbound | undefined;
        coverPhoto?: GetTicketsIdCoverPhoto$.Outbound | undefined;
        gender?: GetTicketsIdGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<GetTicketsIdAddresses$.Outbound> | undefined;
        roles?: Array<GetTicketsIdRoles> | undefined;
        preferences?: GetTicketsIdPreferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: GetTicketsIdSocialLinks$.Outbound | undefined;
        status?: GetTicketsIdTicketsStatus | undefined;
        sso?: Array<GetTicketsIdSso$.Outbound> | undefined;
        paymentMethods?: GetTicketsIdPaymentMethods$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdAssignee> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z.lazy(() => GetTicketsIdProfilePicture$.outboundSchema).optional(),
            coverPhoto: z.lazy(() => GetTicketsIdCoverPhoto$.outboundSchema).optional(),
            gender: GetTicketsIdGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z.array(z.lazy(() => GetTicketsIdAddresses$.outboundSchema)).optional(),
            roles: z.array(GetTicketsIdRoles$).optional(),
            preferences: z.lazy(() => GetTicketsIdPreferences$.outboundSchema).optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z.lazy(() => GetTicketsIdSocialLinks$.outboundSchema).optional(),
            status: GetTicketsIdTicketsStatus$.optional(),
            sso: z.array(z.lazy(() => GetTicketsIdSso$.outboundSchema)).optional(),
            paymentMethods: z.lazy(() => GetTicketsIdPaymentMethods$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONType$ = z.nativeEnum(
    GetTicketsIdTicketsResponse200ApplicationJSONType
);

/** @internal */
export namespace GetTicketsIdEmails$ {
    export type Inbound = {
        email?: string | undefined;
        type?: GetTicketsIdTicketsResponse200ApplicationJSONType | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdEmails, z.ZodTypeDef, Inbound> = z
        .object({
            email: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        email?: string | undefined;
        type?: GetTicketsIdTicketsResponse200ApplicationJSONType | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdEmails> = z
        .object({
            email: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyType$ = z.nativeEnum(
    GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyType
);

/** @internal */
export namespace GetTicketsIdPhones$ {
    export type Inbound = {
        phone?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyType | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdPhones, z.ZodTypeDef, Inbound> = z
        .object({
            phone: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        phone?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyType | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdPhones> = z
        .object({
            phone: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedType$ = z.nativeEnum(
    GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedType
);

/** @internal */
export namespace GetTicketsIdTicketsGeoLocation$ {
    export type Inbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsGeoLocation, z.ZodTypeDef, Inbound> = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });

    export type Outbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsGeoLocation> =
        z
            .object({
                latitude: z.number().optional(),
                longitude: z.number().optional(),
                altitude: z.number().optional(),
                accuracy: z.number().optional(),
                altitudeAccuracy: z.number().optional(),
                heading: z.number().optional(),
                speed: z.number().optional(),
                timestamp: z.number().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                    ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                    ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                    ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                    ...(v.altitudeAccuracy === undefined
                        ? null
                        : { altitudeAccuracy: v.altitudeAccuracy }),
                    ...(v.heading === undefined ? null : { heading: v.heading }),
                    ...(v.speed === undefined ? null : { speed: v.speed }),
                    ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
                };
            });
}

/** @internal */
export const GetTicketsIdTicketsResponseFieldType$ = z.nativeEnum(
    GetTicketsIdTicketsResponseFieldType
);

/** @internal */
export namespace GetTicketsIdTicketsResponse200ApplicationJSONCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: GetTicketsIdTicketsResponseFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponse200ApplicationJSONCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: GetTicketsIdTicketsResponseFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: GetTicketsIdTicketsResponseFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponse200ApplicationJSONCustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: GetTicketsIdTicketsResponseFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdAddress$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedType | undefined;
        geoLocation?: GetTicketsIdTicketsGeoLocation$.Inbound | undefined;
        customFields?:
            | Array<GetTicketsIdTicketsResponse200ApplicationJSONCustomFields$.Inbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdAddress, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedType$.optional(),
            geoLocation: z.lazy(() => GetTicketsIdTicketsGeoLocation$.inboundSchema).optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            GetTicketsIdTicketsResponse200ApplicationJSONCustomFields$.inboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedType | undefined;
        geoLocation?: GetTicketsIdTicketsGeoLocation$.Outbound | undefined;
        customFields?:
            | Array<GetTicketsIdTicketsResponse200ApplicationJSONCustomFields$.Outbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdAddress> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedType$.optional(),
            geoLocation: z.lazy(() => GetTicketsIdTicketsGeoLocation$.outboundSchema).optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            GetTicketsIdTicketsResponse200ApplicationJSONCustomFields$.outboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType$ =
    z.nativeEnum(GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType);

/** @internal */
export namespace GetTicketsIdTicketsResponseGeoLocation$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponseGeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponseGeoLocation
    > = z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsResponseCustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponseCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponseCustomFields
    > = z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsAddresses$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType
            | undefined;
        geoLocation?: GetTicketsIdTicketsResponseGeoLocation$.Inbound | undefined;
        customFields?: Array<GetTicketsIdTicketsResponseCustomFields$.Inbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsAddresses, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType$.optional(),
            geoLocation: z
                .lazy(() => GetTicketsIdTicketsResponseGeoLocation$.inboundSchema)
                .optional(),
            customFields: z
                .array(z.lazy(() => GetTicketsIdTicketsResponseCustomFields$.inboundSchema))
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType
            | undefined;
        geoLocation?: GetTicketsIdTicketsResponseGeoLocation$.Outbound | undefined;
        customFields?: Array<GetTicketsIdTicketsResponseCustomFields$.Outbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsAddresses> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType$.optional(),
            geoLocation: z
                .lazy(() => GetTicketsIdTicketsResponseGeoLocation$.outboundSchema)
                .optional(),
            customFields: z
                .array(z.lazy(() => GetTicketsIdTicketsResponseCustomFields$.outboundSchema))
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsResponsePriority$ = z.nativeEnum(
    GetTicketsIdTicketsResponsePriority
);

/** @internal */
export const GetTicketsIdTicketsResponseMimeType$ = z.nativeEnum(
    GetTicketsIdTicketsResponseMimeType
);

/** @internal */
export namespace GetTicketsIdTicketsProfilePicture$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: GetTicketsIdTicketsResponseMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsProfilePicture,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: GetTicketsIdTicketsResponseMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: GetTicketsIdTicketsResponseMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsProfilePicture
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: GetTicketsIdTicketsResponseMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsResponse200MimeType$ = z.nativeEnum(
    GetTicketsIdTicketsResponse200MimeType
);

/** @internal */
export namespace GetTicketsIdTicketsCoverPhoto$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: GetTicketsIdTicketsResponse200MimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsCoverPhoto, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: GetTicketsIdTicketsResponse200MimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: GetTicketsIdTicketsResponse200MimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsCoverPhoto> =
        z
            .object({
                id: z.string().optional(),
                src: z.string().optional(),
                altText: z.string().optional(),
                width: z.number().optional(),
                height: z.number().optional(),
                thumbnailSrc: z.string().optional(),
                caption: z.string().optional(),
                title: z.string().optional(),
                mimeType: GetTicketsIdTicketsResponse200MimeType$.optional(),
                tags: z.array(z.string()).optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                active: z.boolean().optional(),
                deleted: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.src === undefined ? null : { src: v.src }),
                    ...(v.altText === undefined ? null : { altText: v.altText }),
                    ...(v.width === undefined ? null : { width: v.width }),
                    ...(v.height === undefined ? null : { height: v.height }),
                    ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                    ...(v.caption === undefined ? null : { caption: v.caption }),
                    ...(v.title === undefined ? null : { title: v.title }),
                    ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                    ...(v.tags === undefined ? null : { tags: v.tags }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.active === undefined ? null : { active: v.active }),
                    ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                };
            });
}

/** @internal */
export const GetTicketsIdTicketsGender$ = z.nativeEnum(GetTicketsIdTicketsGender);

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType$ =
    z.nativeEnum(GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType);

/** @internal */
export namespace GetTicketsIdTicketsResponse200GeoLocation$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponse200GeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponse200GeoLocation
    > = z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyCustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyCustomFields
    > = z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsResponseAddresses$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType
            | undefined;
        geoLocation?: GetTicketsIdTicketsResponse200GeoLocation$.Inbound | undefined;
        customFields?:
            | Array<GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyCustomFields$.Inbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponseAddresses,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType$.optional(),
            geoLocation: z
                .lazy(() => GetTicketsIdTicketsResponse200GeoLocation$.inboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyCustomFields$.inboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType
            | undefined;
        geoLocation?: GetTicketsIdTicketsResponse200GeoLocation$.Outbound | undefined;
        customFields?:
            | Array<GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyCustomFields$.Outbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponseAddresses
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType$.optional(),
            geoLocation: z
                .lazy(() => GetTicketsIdTicketsResponse200GeoLocation$.outboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyCustomFields$.outboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsRoles$ = z.nativeEnum(GetTicketsIdTicketsRoles);

/** @internal */
export const GetTicketsIdTicketsCommunications$ = z.nativeEnum(GetTicketsIdTicketsCommunications);

/** @internal */
export namespace GetTicketsIdTicketsPreferences$ {
    export type Inbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: GetTicketsIdTicketsCommunications | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsPreferences, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: GetTicketsIdTicketsCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: GetTicketsIdTicketsCommunications | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsPreferences> =
        z
            .object({
                id: z.string().optional(),
                language: z.string().optional(),
                currency: z.string().optional(),
                timeZone: z.string().optional(),
                communications: GetTicketsIdTicketsCommunications$.optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.language === undefined ? null : { language: v.language }),
                    ...(v.currency === undefined ? null : { currency: v.currency }),
                    ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                    ...(v.communications === undefined
                        ? null
                        : { communications: v.communications }),
                };
            });
}

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType$ =
    z.nativeEnum(
        GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType
    );

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType$ =
    z.nativeEnum(
        GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType
    );

/** @internal */
export namespace GetTicketsIdTicketsResponseAdditionalInfo$ {
    export type Inbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponseAdditionalInfo,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponseAdditionalInfo
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdTicketsSocialLinks$ {
    export type Inbound = {
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType
            | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: GetTicketsIdTicketsResponseAdditionalInfo$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsSocialLinks, z.ZodTypeDef, Inbound> = z
        .object({
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => GetTicketsIdTicketsResponseAdditionalInfo$.inboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType
            | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: GetTicketsIdTicketsResponseAdditionalInfo$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsSocialLinks> =
        z
            .object({
                type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType$.optional(),
                username: z.string().optional(),
                displayName: z.string().optional(),
                url: z.string().optional(),
                avatarUrl: z.string().optional(),
                email: z.string().optional(),
                additionalInfo: z
                    .lazy(() => GetTicketsIdTicketsResponseAdditionalInfo$.outboundSchema)
                    .optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                active: z.boolean().optional(),
                deleted: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.type === undefined ? null : { type: v.type }),
                    ...(v.username === undefined ? null : { username: v.username }),
                    ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                    ...(v.url === undefined ? null : { url: v.url }),
                    ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                    ...(v.email === undefined ? null : { email: v.email }),
                    ...(v.additionalInfo === undefined
                        ? null
                        : { additionalInfo: v.additionalInfo }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.active === undefined ? null : { active: v.active }),
                    ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                };
            });
}

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONStatus$ = z.nativeEnum(
    GetTicketsIdTicketsResponse200ApplicationJSONStatus
);

/** @internal */
export const GetTicketsIdTicketsProvider$ = z.nativeEnum(GetTicketsIdTicketsProvider);

/** @internal */
export namespace GetTicketsIdTicketsSso$ {
    export type Inbound = {
        provider?: GetTicketsIdTicketsProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsSso, z.ZodTypeDef, Inbound> = z
        .object({
            provider: GetTicketsIdTicketsProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        provider?: GetTicketsIdTicketsProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsSso> = z
        .object({
            provider: GetTicketsIdTicketsProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType$ =
    z.nativeEnum(
        GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType
    );

/** @internal */
export namespace GetTicketsIdTicketsPaymentMethods$ {
    export type Inbound = {
        id?: string | undefined;
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType
            | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsPaymentMethods,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType
            | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsPaymentMethods
    > = z
        .object({
            id: z.string().optional(),
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdTicketsResponseAuthor$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: GetTicketsIdTicketsProfilePicture$.Inbound | undefined;
        coverPhoto?: GetTicketsIdTicketsCoverPhoto$.Inbound | undefined;
        gender?: GetTicketsIdTicketsGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<GetTicketsIdTicketsResponseAddresses$.Inbound> | undefined;
        roles?: Array<GetTicketsIdTicketsRoles> | undefined;
        preferences?: GetTicketsIdTicketsPreferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: GetTicketsIdTicketsSocialLinks$.Inbound | undefined;
        status?: GetTicketsIdTicketsResponse200ApplicationJSONStatus | undefined;
        sso?: Array<GetTicketsIdTicketsSso$.Inbound> | undefined;
        paymentMethods?: GetTicketsIdTicketsPaymentMethods$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponseAuthor,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => GetTicketsIdTicketsProfilePicture$.inboundSchema)
                .optional(),
            coverPhoto: z.lazy(() => GetTicketsIdTicketsCoverPhoto$.inboundSchema).optional(),
            gender: GetTicketsIdTicketsGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(z.lazy(() => GetTicketsIdTicketsResponseAddresses$.inboundSchema))
                .optional(),
            roles: z.array(GetTicketsIdTicketsRoles$).optional(),
            preferences: z.lazy(() => GetTicketsIdTicketsPreferences$.inboundSchema).optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z.lazy(() => GetTicketsIdTicketsSocialLinks$.inboundSchema).optional(),
            status: GetTicketsIdTicketsResponse200ApplicationJSONStatus$.optional(),
            sso: z.array(z.lazy(() => GetTicketsIdTicketsSso$.inboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => GetTicketsIdTicketsPaymentMethods$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: GetTicketsIdTicketsProfilePicture$.Outbound | undefined;
        coverPhoto?: GetTicketsIdTicketsCoverPhoto$.Outbound | undefined;
        gender?: GetTicketsIdTicketsGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<GetTicketsIdTicketsResponseAddresses$.Outbound> | undefined;
        roles?: Array<GetTicketsIdTicketsRoles> | undefined;
        preferences?: GetTicketsIdTicketsPreferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: GetTicketsIdTicketsSocialLinks$.Outbound | undefined;
        status?: GetTicketsIdTicketsResponse200ApplicationJSONStatus | undefined;
        sso?: Array<GetTicketsIdTicketsSso$.Outbound> | undefined;
        paymentMethods?: GetTicketsIdTicketsPaymentMethods$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponseAuthor
    > = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => GetTicketsIdTicketsProfilePicture$.outboundSchema)
                .optional(),
            coverPhoto: z.lazy(() => GetTicketsIdTicketsCoverPhoto$.outboundSchema).optional(),
            gender: GetTicketsIdTicketsGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(z.lazy(() => GetTicketsIdTicketsResponseAddresses$.outboundSchema))
                .optional(),
            roles: z.array(GetTicketsIdTicketsRoles$).optional(),
            preferences: z.lazy(() => GetTicketsIdTicketsPreferences$.outboundSchema).optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z.lazy(() => GetTicketsIdTicketsSocialLinks$.outboundSchema).optional(),
            status: GetTicketsIdTicketsResponse200ApplicationJSONStatus$.optional(),
            sso: z.array(z.lazy(() => GetTicketsIdTicketsSso$.outboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => GetTicketsIdTicketsPaymentMethods$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdTicketsResponseMetadata$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponseMetadata,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponseMetadata
    > = z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsAssociatedWith$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsAssociatedWith,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsAssociatedWith
    > = z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsPermissions$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsPermissions, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsPermissions> =
        z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsResponseAttachments$ {
    export type Inbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: GetTicketsIdTicketsResponseMetadata$.Inbound | undefined;
        associatedWith?: GetTicketsIdTicketsAssociatedWith$.Inbound | undefined;
        permissions?: GetTicketsIdTicketsPermissions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponseAttachments,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z.lazy(() => GetTicketsIdTicketsResponseMetadata$.inboundSchema).optional(),
            associatedWith: z
                .lazy(() => GetTicketsIdTicketsAssociatedWith$.inboundSchema)
                .optional(),
            permissions: z.lazy(() => GetTicketsIdTicketsPermissions$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: GetTicketsIdTicketsResponseMetadata$.Outbound | undefined;
        associatedWith?: GetTicketsIdTicketsAssociatedWith$.Outbound | undefined;
        permissions?: GetTicketsIdTicketsPermissions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponseAttachments
    > = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z.lazy(() => GetTicketsIdTicketsResponseMetadata$.outboundSchema).optional(),
            associatedWith: z
                .lazy(() => GetTicketsIdTicketsAssociatedWith$.outboundSchema)
                .optional(),
            permissions: z.lazy(() => GetTicketsIdTicketsPermissions$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdTicketsResponseProfilePicture$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponseProfilePicture,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponseProfilePicture
    > = z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsResponseCoverPhoto$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponseCoverPhoto,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponseCoverPhoto
    > = z.object({});
}

/** @internal */
export const GetTicketsIdTicketsResponseGender$ = z.nativeEnum(GetTicketsIdTicketsResponseGender);

/** @internal */
export namespace GetTicketsIdTicketsResponse200Addresses$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponse200Addresses,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponse200Addresses
    > = z.object({});
}

/** @internal */
export const GetTicketsIdTicketsResponseRoles$ = z.nativeEnum(GetTicketsIdTicketsResponseRoles);

/** @internal */
export namespace GetTicketsIdTicketsResponsePreferences$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponsePreferences,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponsePreferences
    > = z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsResponseSocialLinks$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponseSocialLinks,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponseSocialLinks
    > = z.object({});
}

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyStatus$ = z.nativeEnum(
    GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyStatus
);

/** @internal */
export namespace GetTicketsIdTicketsResponseSso$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsResponseSso, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsResponseSso> =
        z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsResponsePaymentMethods$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsResponsePaymentMethods,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsResponsePaymentMethods
    > = z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsSharedWith$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: GetTicketsIdTicketsResponseProfilePicture$.Inbound | undefined;
        coverPhoto?: GetTicketsIdTicketsResponseCoverPhoto$.Inbound | undefined;
        gender?: GetTicketsIdTicketsResponseGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<GetTicketsIdTicketsResponse200Addresses$.Inbound> | undefined;
        roles?: Array<GetTicketsIdTicketsResponseRoles> | undefined;
        preferences?: GetTicketsIdTicketsResponsePreferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: GetTicketsIdTicketsResponseSocialLinks$.Inbound | undefined;
        status?: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyStatus | undefined;
        sso?: Array<GetTicketsIdTicketsResponseSso$.Inbound> | undefined;
        paymentMethods?: GetTicketsIdTicketsResponsePaymentMethods$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsSharedWith, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => GetTicketsIdTicketsResponseProfilePicture$.inboundSchema)
                .optional(),
            coverPhoto: z
                .lazy(() => GetTicketsIdTicketsResponseCoverPhoto$.inboundSchema)
                .optional(),
            gender: GetTicketsIdTicketsResponseGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(z.lazy(() => GetTicketsIdTicketsResponse200Addresses$.inboundSchema))
                .optional(),
            roles: z.array(GetTicketsIdTicketsResponseRoles$).optional(),
            preferences: z
                .lazy(() => GetTicketsIdTicketsResponsePreferences$.inboundSchema)
                .optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z
                .lazy(() => GetTicketsIdTicketsResponseSocialLinks$.inboundSchema)
                .optional(),
            status: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyStatus$.optional(),
            sso: z.array(z.lazy(() => GetTicketsIdTicketsResponseSso$.inboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => GetTicketsIdTicketsResponsePaymentMethods$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: GetTicketsIdTicketsResponseProfilePicture$.Outbound | undefined;
        coverPhoto?: GetTicketsIdTicketsResponseCoverPhoto$.Outbound | undefined;
        gender?: GetTicketsIdTicketsResponseGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<GetTicketsIdTicketsResponse200Addresses$.Outbound> | undefined;
        roles?: Array<GetTicketsIdTicketsResponseRoles> | undefined;
        preferences?: GetTicketsIdTicketsResponsePreferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: GetTicketsIdTicketsResponseSocialLinks$.Outbound | undefined;
        status?: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyStatus | undefined;
        sso?: Array<GetTicketsIdTicketsResponseSso$.Outbound> | undefined;
        paymentMethods?: GetTicketsIdTicketsResponsePaymentMethods$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsSharedWith> =
        z
            .object({
                id: z.string().optional(),
                firstName: z.string().optional(),
                middleName: z.string().optional(),
                lastName: z.string().optional(),
                email: z.string().optional(),
                username: z.string().optional(),
                password: z.string().optional(),
                profilePicture: z
                    .lazy(() => GetTicketsIdTicketsResponseProfilePicture$.outboundSchema)
                    .optional(),
                coverPhoto: z
                    .lazy(() => GetTicketsIdTicketsResponseCoverPhoto$.outboundSchema)
                    .optional(),
                gender: GetTicketsIdTicketsResponseGender$.optional(),
                dateOfBirth: z.number().optional(),
                phoneNumber: z.string().optional(),
                isActive: z.boolean().optional(),
                lastLogin: z.number().optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                addresses: z
                    .array(z.lazy(() => GetTicketsIdTicketsResponse200Addresses$.outboundSchema))
                    .optional(),
                roles: z.array(GetTicketsIdTicketsResponseRoles$).optional(),
                preferences: z
                    .lazy(() => GetTicketsIdTicketsResponsePreferences$.outboundSchema)
                    .optional(),
                bio: z.string().optional(),
                website: z.string().optional(),
                socialLinks: z
                    .lazy(() => GetTicketsIdTicketsResponseSocialLinks$.outboundSchema)
                    .optional(),
                status: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyStatus$.optional(),
                sso: z
                    .array(z.lazy(() => GetTicketsIdTicketsResponseSso$.outboundSchema))
                    .optional(),
                paymentMethods: z
                    .lazy(() => GetTicketsIdTicketsResponsePaymentMethods$.outboundSchema)
                    .optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                    ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                    ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                    ...(v.email === undefined ? null : { email: v.email }),
                    ...(v.username === undefined ? null : { username: v.username }),
                    ...(v.password === undefined ? null : { password: v.password }),
                    ...(v.profilePicture === undefined
                        ? null
                        : { profilePicture: v.profilePicture }),
                    ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                    ...(v.gender === undefined ? null : { gender: v.gender }),
                    ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                    ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                    ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                    ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                    ...(v.roles === undefined ? null : { roles: v.roles }),
                    ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                    ...(v.bio === undefined ? null : { bio: v.bio }),
                    ...(v.website === undefined ? null : { website: v.website }),
                    ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                    ...(v.status === undefined ? null : { status: v.status }),
                    ...(v.sso === undefined ? null : { sso: v.sso }),
                    ...(v.paymentMethods === undefined
                        ? null
                        : { paymentMethods: v.paymentMethods }),
                };
            });
}

/** @internal */
export const GetTicketsIdTicketsVisibility$ = z.nativeEnum(GetTicketsIdTicketsVisibility);

/** @internal */
export const GetTicketsIdTicketsResponse200Status$ = z.nativeEnum(
    GetTicketsIdTicketsResponse200Status
);

/** @internal */
export namespace GetTicketsIdTicketsNotes$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: GetTicketsIdTicketsResponsePriority | undefined;
        author?: GetTicketsIdTicketsResponseAuthor$.Inbound | undefined;
        tags?: Array<string> | undefined;
        attachments?: Array<GetTicketsIdTicketsResponseAttachments$.Inbound> | undefined;
        sharedWith?: Array<GetTicketsIdTicketsSharedWith$.Inbound> | undefined;
        visibility?: GetTicketsIdTicketsVisibility | undefined;
        status?: GetTicketsIdTicketsResponse200Status | undefined;
        metadata?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsNotes, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            lastAccessed: z.number().optional(),
            reminder: z.number().optional(),
            color: z.string().optional(),
            priority: GetTicketsIdTicketsResponsePriority$.optional(),
            author: z.lazy(() => GetTicketsIdTicketsResponseAuthor$.inboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            attachments: z
                .array(z.lazy(() => GetTicketsIdTicketsResponseAttachments$.inboundSchema))
                .optional(),
            sharedWith: z
                .array(z.lazy(() => GetTicketsIdTicketsSharedWith$.inboundSchema))
                .optional(),
            visibility: GetTicketsIdTicketsVisibility$.optional(),
            status: GetTicketsIdTicketsResponse200Status$.optional(),
            metadata: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: GetTicketsIdTicketsResponsePriority | undefined;
        author?: GetTicketsIdTicketsResponseAuthor$.Outbound | undefined;
        tags?: Array<string> | undefined;
        attachments?: Array<GetTicketsIdTicketsResponseAttachments$.Outbound> | undefined;
        sharedWith?: Array<GetTicketsIdTicketsSharedWith$.Outbound> | undefined;
        visibility?: GetTicketsIdTicketsVisibility | undefined;
        status?: GetTicketsIdTicketsResponse200Status | undefined;
        metadata?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsNotes> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            lastAccessed: z.number().optional(),
            reminder: z.number().optional(),
            color: z.string().optional(),
            priority: GetTicketsIdTicketsResponsePriority$.optional(),
            author: z.lazy(() => GetTicketsIdTicketsResponseAuthor$.outboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            attachments: z
                .array(z.lazy(() => GetTicketsIdTicketsResponseAttachments$.outboundSchema))
                .optional(),
            sharedWith: z
                .array(z.lazy(() => GetTicketsIdTicketsSharedWith$.outboundSchema))
                .optional(),
            visibility: GetTicketsIdTicketsVisibility$.optional(),
            status: GetTicketsIdTicketsResponse200Status$.optional(),
            metadata: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType$ =
    z.nativeEnum(
        GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType
    );

/** @internal */
export namespace GetTicketsIdTicketsAdditionalInfo$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        GetTicketsIdTicketsAdditionalInfo,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsAdditionalInfo
    > = z.object({});
}

/** @internal */
export namespace GetTicketsIdSocialProfiles$ {
    export type Inbound = {
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType
            | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: GetTicketsIdTicketsAdditionalInfo$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdSocialProfiles, z.ZodTypeDef, Inbound> = z
        .object({
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => GetTicketsIdTicketsAdditionalInfo$.inboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        type?:
            | GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType
            | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: GetTicketsIdTicketsAdditionalInfo$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdSocialProfiles> = z
        .object({
            type: GetTicketsIdTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => GetTicketsIdTicketsAdditionalInfo$.outboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsFieldType$ = z.nativeEnum(GetTicketsIdTicketsFieldType);

/** @internal */
export namespace GetTicketsIdTicketsCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: GetTicketsIdTicketsFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsCustomFields, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.string().optional(),
                fieldName: z.string().optional(),
                fieldValue: z.string().optional(),
                fieldType: GetTicketsIdTicketsFieldType$.optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                    ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                    ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
                };
            });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: GetTicketsIdTicketsFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetTicketsIdTicketsCustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: GetTicketsIdTicketsFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdReporter$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        leadId?: string | undefined;
        company?: string | undefined;
        defaultEmail?: string | undefined;
        emails?: Array<GetTicketsIdEmails$.Inbound> | undefined;
        defaultPhone?: string | undefined;
        phones?: Array<GetTicketsIdPhones$.Inbound> | undefined;
        address?: GetTicketsIdAddress$.Inbound | undefined;
        addresses?: Array<GetTicketsIdTicketsAddresses$.Inbound> | undefined;
        birthday?: number | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: GetTicketsIdTicketsNotes$.Inbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<GetTicketsIdSocialProfiles$.Inbound> | undefined;
        isActive?: boolean | undefined;
        customFields?: Array<GetTicketsIdTicketsCustomFields$.Inbound> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdReporter, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            leadId: z.string().optional(),
            company: z.string().optional(),
            defaultEmail: z.string().optional(),
            emails: z.array(z.lazy(() => GetTicketsIdEmails$.inboundSchema)).optional(),
            defaultPhone: z.string().optional(),
            phones: z.array(z.lazy(() => GetTicketsIdPhones$.inboundSchema)).optional(),
            address: z.lazy(() => GetTicketsIdAddress$.inboundSchema).optional(),
            addresses: z
                .array(z.lazy(() => GetTicketsIdTicketsAddresses$.inboundSchema))
                .optional(),
            birthday: z.number().optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: z.lazy(() => GetTicketsIdTicketsNotes$.inboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z
                .array(z.lazy(() => GetTicketsIdSocialProfiles$.inboundSchema))
                .optional(),
            isActive: z.boolean().optional(),
            customFields: z
                .array(z.lazy(() => GetTicketsIdTicketsCustomFields$.inboundSchema))
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.leadId === undefined ? null : { leadId: v.leadId }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.defaultEmail === undefined ? null : { defaultEmail: v.defaultEmail }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.defaultPhone === undefined ? null : { defaultPhone: v.defaultPhone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        leadId?: string | undefined;
        company?: string | undefined;
        defaultEmail?: string | undefined;
        emails?: Array<GetTicketsIdEmails$.Outbound> | undefined;
        defaultPhone?: string | undefined;
        phones?: Array<GetTicketsIdPhones$.Outbound> | undefined;
        address?: GetTicketsIdAddress$.Outbound | undefined;
        addresses?: Array<GetTicketsIdTicketsAddresses$.Outbound> | undefined;
        birthday?: number | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: GetTicketsIdTicketsNotes$.Outbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<GetTicketsIdSocialProfiles$.Outbound> | undefined;
        isActive?: boolean | undefined;
        customFields?: Array<GetTicketsIdTicketsCustomFields$.Outbound> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdReporter> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            leadId: z.string().optional(),
            company: z.string().optional(),
            defaultEmail: z.string().optional(),
            emails: z.array(z.lazy(() => GetTicketsIdEmails$.outboundSchema)).optional(),
            defaultPhone: z.string().optional(),
            phones: z.array(z.lazy(() => GetTicketsIdPhones$.outboundSchema)).optional(),
            address: z.lazy(() => GetTicketsIdAddress$.outboundSchema).optional(),
            addresses: z
                .array(z.lazy(() => GetTicketsIdTicketsAddresses$.outboundSchema))
                .optional(),
            birthday: z.number().optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: z.lazy(() => GetTicketsIdTicketsNotes$.outboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z
                .array(z.lazy(() => GetTicketsIdSocialProfiles$.outboundSchema))
                .optional(),
            isActive: z.boolean().optional(),
            customFields: z
                .array(z.lazy(() => GetTicketsIdTicketsCustomFields$.outboundSchema))
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.leadId === undefined ? null : { leadId: v.leadId }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.defaultEmail === undefined ? null : { defaultEmail: v.defaultEmail }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.defaultPhone === undefined ? null : { defaultPhone: v.defaultPhone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdMetadata$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdMetadata, z.ZodTypeDef, Inbound> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdMetadata> = z.object(
        {}
    );
}

/** @internal */
export namespace GetTicketsIdAssociatedWith$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdAssociatedWith, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdAssociatedWith> =
        z.object({});
}

/** @internal */
export namespace GetTicketsIdPermissions$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdPermissions, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdPermissions> =
        z.object({});
}

/** @internal */
export namespace GetTicketsIdAttachments$ {
    export type Inbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: GetTicketsIdMetadata$.Inbound | undefined;
        associatedWith?: GetTicketsIdAssociatedWith$.Inbound | undefined;
        permissions?: GetTicketsIdPermissions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdAttachments, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z.lazy(() => GetTicketsIdMetadata$.inboundSchema).optional(),
            associatedWith: z.lazy(() => GetTicketsIdAssociatedWith$.inboundSchema).optional(),
            permissions: z.lazy(() => GetTicketsIdPermissions$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: GetTicketsIdMetadata$.Outbound | undefined;
        associatedWith?: GetTicketsIdAssociatedWith$.Outbound | undefined;
        permissions?: GetTicketsIdPermissions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdAttachments> = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z.lazy(() => GetTicketsIdMetadata$.outboundSchema).optional(),
            associatedWith: z.lazy(() => GetTicketsIdAssociatedWith$.outboundSchema).optional(),
            permissions: z.lazy(() => GetTicketsIdPermissions$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdAuthor$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdAuthor, z.ZodTypeDef, Inbound> = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdAuthor> = z.object(
        {}
    );
}

/** @internal */
export namespace GetTicketsIdTicketsMetadata$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsMetadata, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsMetadata> =
        z.object({});
}

/** @internal */
export namespace GetTicketsIdComments$ {
    export type Inbound = {
        commentId?: string | undefined;
        author?: GetTicketsIdAuthor$.Inbound | undefined;
        text?: string | undefined;
        parentId?: string | undefined;
        likes?: number | undefined;
        flagged?: boolean | undefined;
        metadata?: Array<GetTicketsIdTicketsMetadata$.Inbound> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdComments, z.ZodTypeDef, Inbound> = z
        .object({
            commentId: z.string().optional(),
            author: z.lazy(() => GetTicketsIdAuthor$.inboundSchema).optional(),
            text: z.string().optional(),
            parentId: z.string().optional(),
            likes: z.number().optional(),
            flagged: z.boolean().optional(),
            metadata: z.array(z.lazy(() => GetTicketsIdTicketsMetadata$.inboundSchema)).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.commentId === undefined ? null : { commentId: v.commentId }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.text === undefined ? null : { text: v.text }),
                ...(v.parentId === undefined ? null : { parentId: v.parentId }),
                ...(v.likes === undefined ? null : { likes: v.likes }),
                ...(v.flagged === undefined ? null : { flagged: v.flagged }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        commentId?: string | undefined;
        author?: GetTicketsIdAuthor$.Outbound | undefined;
        text?: string | undefined;
        parentId?: string | undefined;
        likes?: number | undefined;
        flagged?: boolean | undefined;
        metadata?: Array<GetTicketsIdTicketsMetadata$.Outbound> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdComments> = z
        .object({
            commentId: z.string().optional(),
            author: z.lazy(() => GetTicketsIdAuthor$.outboundSchema).optional(),
            text: z.string().optional(),
            parentId: z.string().optional(),
            likes: z.number().optional(),
            flagged: z.boolean().optional(),
            metadata: z.array(z.lazy(() => GetTicketsIdTicketsMetadata$.outboundSchema)).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.commentId === undefined ? null : { commentId: v.commentId }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.text === undefined ? null : { text: v.text }),
                ...(v.parentId === undefined ? null : { parentId: v.parentId }),
                ...(v.likes === undefined ? null : { likes: v.likes }),
                ...(v.flagged === undefined ? null : { flagged: v.flagged }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const GetTicketsIdTicketsPriority$ = z.nativeEnum(GetTicketsIdTicketsPriority);

/** @internal */
export namespace GetTicketsIdTicketsAuthor$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsAuthor, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsAuthor> =
        z.object({});
}

/** @internal */
export namespace GetTicketsIdTicketsAttachments$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdTicketsAttachments, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdTicketsAttachments> =
        z.object({});
}

/** @internal */
export namespace GetTicketsIdSharedWith$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdSharedWith, z.ZodTypeDef, Inbound> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdSharedWith> =
        z.object({});
}

/** @internal */
export const GetTicketsIdVisibility$ = z.nativeEnum(GetTicketsIdVisibility);

/** @internal */
export const GetTicketsIdTicketsResponseStatus$ = z.nativeEnum(GetTicketsIdTicketsResponseStatus);

/** @internal */
export namespace GetTicketsIdNotes$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: GetTicketsIdTicketsPriority | undefined;
        author?: GetTicketsIdTicketsAuthor$.Inbound | undefined;
        tags?: Array<string> | undefined;
        attachments?: Array<GetTicketsIdTicketsAttachments$.Inbound> | undefined;
        sharedWith?: Array<GetTicketsIdSharedWith$.Inbound> | undefined;
        visibility?: GetTicketsIdVisibility | undefined;
        status?: GetTicketsIdTicketsResponseStatus | undefined;
        metadata?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdNotes, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            lastAccessed: z.number().optional(),
            reminder: z.number().optional(),
            color: z.string().optional(),
            priority: GetTicketsIdTicketsPriority$.optional(),
            author: z.lazy(() => GetTicketsIdTicketsAuthor$.inboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            attachments: z
                .array(z.lazy(() => GetTicketsIdTicketsAttachments$.inboundSchema))
                .optional(),
            sharedWith: z.array(z.lazy(() => GetTicketsIdSharedWith$.inboundSchema)).optional(),
            visibility: GetTicketsIdVisibility$.optional(),
            status: GetTicketsIdTicketsResponseStatus$.optional(),
            metadata: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: GetTicketsIdTicketsPriority | undefined;
        author?: GetTicketsIdTicketsAuthor$.Outbound | undefined;
        tags?: Array<string> | undefined;
        attachments?: Array<GetTicketsIdTicketsAttachments$.Outbound> | undefined;
        sharedWith?: Array<GetTicketsIdSharedWith$.Outbound> | undefined;
        visibility?: GetTicketsIdVisibility | undefined;
        status?: GetTicketsIdTicketsResponseStatus | undefined;
        metadata?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdNotes> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            lastAccessed: z.number().optional(),
            reminder: z.number().optional(),
            color: z.string().optional(),
            priority: GetTicketsIdTicketsPriority$.optional(),
            author: z.lazy(() => GetTicketsIdTicketsAuthor$.outboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            attachments: z
                .array(z.lazy(() => GetTicketsIdTicketsAttachments$.outboundSchema))
                .optional(),
            sharedWith: z.array(z.lazy(() => GetTicketsIdSharedWith$.outboundSchema)).optional(),
            visibility: GetTicketsIdVisibility$.optional(),
            status: GetTicketsIdTicketsResponseStatus$.optional(),
            metadata: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });
}

/** @internal */
export const GetTicketsIdFieldType$ = z.nativeEnum(GetTicketsIdFieldType);

/** @internal */
export namespace GetTicketsIdCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: GetTicketsIdFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdCustomFields, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: GetTicketsIdFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: GetTicketsIdFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdCustomFields> = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: GetTicketsIdFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdUnified$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        status?: GetTicketsIdStatus | undefined;
        priority?: GetTicketsIdPriority | undefined;
        type?: GetTicketsIdType | undefined;
        assignee?: GetTicketsIdAssignee$.Inbound | undefined;
        reporter?: GetTicketsIdReporter$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        dueDate?: number | undefined;
        attachments?: Array<GetTicketsIdAttachments$.Inbound> | undefined;
        comments?: Array<GetTicketsIdComments$.Inbound> | undefined;
        notes?: Array<GetTicketsIdNotes$.Inbound> | undefined;
        tags?: Array<string> | undefined;
        customFields?: Array<GetTicketsIdCustomFields$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdUnified, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            status: GetTicketsIdStatus$.optional(),
            priority: GetTicketsIdPriority$.optional(),
            type: GetTicketsIdType$.optional(),
            assignee: z.lazy(() => GetTicketsIdAssignee$.inboundSchema).optional(),
            reporter: z.lazy(() => GetTicketsIdReporter$.inboundSchema).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            dueDate: z.number().optional(),
            attachments: z.array(z.lazy(() => GetTicketsIdAttachments$.inboundSchema)).optional(),
            comments: z.array(z.lazy(() => GetTicketsIdComments$.inboundSchema)).optional(),
            notes: z.array(z.lazy(() => GetTicketsIdNotes$.inboundSchema)).optional(),
            tags: z.array(z.string()).optional(),
            customFields: z.array(z.lazy(() => GetTicketsIdCustomFields$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.assignee === undefined ? null : { assignee: v.assignee }),
                ...(v.reporter === undefined ? null : { reporter: v.reporter }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.comments === undefined ? null : { comments: v.comments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        status?: GetTicketsIdStatus | undefined;
        priority?: GetTicketsIdPriority | undefined;
        type?: GetTicketsIdType | undefined;
        assignee?: GetTicketsIdAssignee$.Outbound | undefined;
        reporter?: GetTicketsIdReporter$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        dueDate?: number | undefined;
        attachments?: Array<GetTicketsIdAttachments$.Outbound> | undefined;
        comments?: Array<GetTicketsIdComments$.Outbound> | undefined;
        notes?: Array<GetTicketsIdNotes$.Outbound> | undefined;
        tags?: Array<string> | undefined;
        customFields?: Array<GetTicketsIdCustomFields$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdUnified> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            status: GetTicketsIdStatus$.optional(),
            priority: GetTicketsIdPriority$.optional(),
            type: GetTicketsIdType$.optional(),
            assignee: z.lazy(() => GetTicketsIdAssignee$.outboundSchema).optional(),
            reporter: z.lazy(() => GetTicketsIdReporter$.outboundSchema).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            dueDate: z.number().optional(),
            attachments: z.array(z.lazy(() => GetTicketsIdAttachments$.outboundSchema)).optional(),
            comments: z.array(z.lazy(() => GetTicketsIdComments$.outboundSchema)).optional(),
            notes: z.array(z.lazy(() => GetTicketsIdNotes$.outboundSchema)).optional(),
            tags: z.array(z.string()).optional(),
            customFields: z
                .array(z.lazy(() => GetTicketsIdCustomFields$.outboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.assignee === undefined ? null : { assignee: v.assignee }),
                ...(v.reporter === undefined ? null : { reporter: v.reporter }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.comments === undefined ? null : { comments: v.comments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdPassthrough$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<GetTicketsIdPassthrough, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdPassthrough> =
        z.object({});
}

/** @internal */
export namespace GetTicketsIdCache$ {
    export type Inbound = {
        hit?: boolean | undefined;
        ttl?: number | undefined;
        key?: string | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdCache, z.ZodTypeDef, Inbound> = z
        .object({
            hit: z.boolean().optional(),
            ttl: z.number().int().optional(),
            key: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.hit === undefined ? null : { hit: v.hit }),
                ...(v.ttl === undefined ? null : { ttl: v.ttl }),
                ...(v.key === undefined ? null : { key: v.key }),
            };
        });

    export type Outbound = {
        hit?: boolean | undefined;
        ttl?: number | undefined;
        key?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdCache> = z
        .object({
            hit: z.boolean().optional(),
            ttl: z.number().int().optional(),
            key: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.hit === undefined ? null : { hit: v.hit }),
                ...(v.ttl === undefined ? null : { ttl: v.ttl }),
                ...(v.key === undefined ? null : { key: v.key }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdMeta$ {
    export type Inbound = {
        timestamp?: number | undefined;
        latency?: number | undefined;
        platformRateLimitRemaining?: number | undefined;
        rateLimitRemaining?: number | undefined;
        cache?: GetTicketsIdCache$.Inbound | undefined;
        transactionKey?: string | undefined;
        txn?: string | undefined;
        platform?: string | undefined;
        platformVersion?: string | undefined;
        connectionDefinitionKey?: string | undefined;
        action?: string | undefined;
        commonModel?: string | undefined;
        commonModelVersion?: string | undefined;
        connectionKey?: string | undefined;
        hash?: string | undefined;
        heartbeats?: Array<string> | undefined;
        totalTransactions?: number | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdMeta, z.ZodTypeDef, Inbound> = z
        .object({
            timestamp: z.number().int().optional(),
            latency: z.number().int().optional(),
            platformRateLimitRemaining: z.number().int().optional(),
            rateLimitRemaining: z.number().int().optional(),
            cache: z.lazy(() => GetTicketsIdCache$.inboundSchema).optional(),
            transactionKey: z.string().optional(),
            txn: z.string().optional(),
            platform: z.string().optional(),
            platformVersion: z.string().optional(),
            connectionDefinitionKey: z.string().optional(),
            action: z.string().optional(),
            commonModel: z.string().optional(),
            commonModelVersion: z.string().optional(),
            connectionKey: z.string().optional(),
            hash: z.string().optional(),
            heartbeats: z.array(z.string()).optional(),
            totalTransactions: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
                ...(v.latency === undefined ? null : { latency: v.latency }),
                ...(v.platformRateLimitRemaining === undefined
                    ? null
                    : { platformRateLimitRemaining: v.platformRateLimitRemaining }),
                ...(v.rateLimitRemaining === undefined
                    ? null
                    : { rateLimitRemaining: v.rateLimitRemaining }),
                ...(v.cache === undefined ? null : { cache: v.cache }),
                ...(v.transactionKey === undefined ? null : { transactionKey: v.transactionKey }),
                ...(v.txn === undefined ? null : { txn: v.txn }),
                ...(v.platform === undefined ? null : { platform: v.platform }),
                ...(v.platformVersion === undefined
                    ? null
                    : { platformVersion: v.platformVersion }),
                ...(v.connectionDefinitionKey === undefined
                    ? null
                    : { connectionDefinitionKey: v.connectionDefinitionKey }),
                ...(v.action === undefined ? null : { action: v.action }),
                ...(v.commonModel === undefined ? null : { commonModel: v.commonModel }),
                ...(v.commonModelVersion === undefined
                    ? null
                    : { commonModelVersion: v.commonModelVersion }),
                ...(v.connectionKey === undefined ? null : { connectionKey: v.connectionKey }),
                ...(v.hash === undefined ? null : { hash: v.hash }),
                ...(v.heartbeats === undefined ? null : { heartbeats: v.heartbeats }),
                ...(v.totalTransactions === undefined
                    ? null
                    : { totalTransactions: v.totalTransactions }),
            };
        });

    export type Outbound = {
        timestamp?: number | undefined;
        latency?: number | undefined;
        platformRateLimitRemaining?: number | undefined;
        rateLimitRemaining?: number | undefined;
        cache?: GetTicketsIdCache$.Outbound | undefined;
        transactionKey?: string | undefined;
        txn?: string | undefined;
        platform?: string | undefined;
        platformVersion?: string | undefined;
        connectionDefinitionKey?: string | undefined;
        action?: string | undefined;
        commonModel?: string | undefined;
        commonModelVersion?: string | undefined;
        connectionKey?: string | undefined;
        hash?: string | undefined;
        heartbeats?: Array<string> | undefined;
        totalTransactions?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdMeta> = z
        .object({
            timestamp: z.number().int().optional(),
            latency: z.number().int().optional(),
            platformRateLimitRemaining: z.number().int().optional(),
            rateLimitRemaining: z.number().int().optional(),
            cache: z.lazy(() => GetTicketsIdCache$.outboundSchema).optional(),
            transactionKey: z.string().optional(),
            txn: z.string().optional(),
            platform: z.string().optional(),
            platformVersion: z.string().optional(),
            connectionDefinitionKey: z.string().optional(),
            action: z.string().optional(),
            commonModel: z.string().optional(),
            commonModelVersion: z.string().optional(),
            connectionKey: z.string().optional(),
            hash: z.string().optional(),
            heartbeats: z.array(z.string()).optional(),
            totalTransactions: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
                ...(v.latency === undefined ? null : { latency: v.latency }),
                ...(v.platformRateLimitRemaining === undefined
                    ? null
                    : { platformRateLimitRemaining: v.platformRateLimitRemaining }),
                ...(v.rateLimitRemaining === undefined
                    ? null
                    : { rateLimitRemaining: v.rateLimitRemaining }),
                ...(v.cache === undefined ? null : { cache: v.cache }),
                ...(v.transactionKey === undefined ? null : { transactionKey: v.transactionKey }),
                ...(v.txn === undefined ? null : { txn: v.txn }),
                ...(v.platform === undefined ? null : { platform: v.platform }),
                ...(v.platformVersion === undefined
                    ? null
                    : { platformVersion: v.platformVersion }),
                ...(v.connectionDefinitionKey === undefined
                    ? null
                    : { connectionDefinitionKey: v.connectionDefinitionKey }),
                ...(v.action === undefined ? null : { action: v.action }),
                ...(v.commonModel === undefined ? null : { commonModel: v.commonModel }),
                ...(v.commonModelVersion === undefined
                    ? null
                    : { commonModelVersion: v.commonModelVersion }),
                ...(v.connectionKey === undefined ? null : { connectionKey: v.connectionKey }),
                ...(v.hash === undefined ? null : { hash: v.hash }),
                ...(v.heartbeats === undefined ? null : { heartbeats: v.heartbeats }),
                ...(v.totalTransactions === undefined
                    ? null
                    : { totalTransactions: v.totalTransactions }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdResponseBody$ {
    export type Inbound = {
        status?: string | undefined;
        statusCode?: GetTicketsIdStatusCode | undefined;
        unified?: GetTicketsIdUnified$.Inbound | undefined;
        passthrough?: GetTicketsIdPassthrough$.Inbound | undefined;
        meta?: GetTicketsIdMeta$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdResponseBody, z.ZodTypeDef, Inbound> = z
        .object({
            status: z.string().optional(),
            statusCode: GetTicketsIdStatusCode$.optional(),
            unified: z.lazy(() => GetTicketsIdUnified$.inboundSchema).optional(),
            passthrough: z.lazy(() => GetTicketsIdPassthrough$.inboundSchema).optional(),
            meta: z.lazy(() => GetTicketsIdMeta$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.statusCode === undefined ? null : { statusCode: v.statusCode }),
                ...(v.unified === undefined ? null : { unified: v.unified }),
                ...(v.passthrough === undefined ? null : { passthrough: v.passthrough }),
                ...(v.meta === undefined ? null : { meta: v.meta }),
            };
        });

    export type Outbound = {
        status?: string | undefined;
        statusCode?: GetTicketsIdStatusCode | undefined;
        unified?: GetTicketsIdUnified$.Outbound | undefined;
        passthrough?: GetTicketsIdPassthrough$.Outbound | undefined;
        meta?: GetTicketsIdMeta$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdResponseBody> = z
        .object({
            status: z.string().optional(),
            statusCode: GetTicketsIdStatusCode$.optional(),
            unified: z.lazy(() => GetTicketsIdUnified$.outboundSchema).optional(),
            passthrough: z.lazy(() => GetTicketsIdPassthrough$.outboundSchema).optional(),
            meta: z.lazy(() => GetTicketsIdMeta$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.statusCode === undefined ? null : { statusCode: v.statusCode }),
                ...(v.unified === undefined ? null : { unified: v.unified }),
                ...(v.passthrough === undefined ? null : { passthrough: v.passthrough }),
                ...(v.meta === undefined ? null : { meta: v.meta }),
            };
        });
}

/** @internal */
export namespace GetTicketsIdResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        object?: GetTicketsIdResponseBody$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetTicketsIdResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            object: z.lazy(() => GetTicketsIdResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        object?: GetTicketsIdResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetTicketsIdResponse> = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            object: z.lazy(() => GetTicketsIdResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });
}
