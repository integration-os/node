/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum PostOpportunitiesType {
    Email = "Email",
    SocialMedia = "Social Media",
    SearchEngine = "Search Engine",
    Display = "Display",
    Other = "Other",
}

export enum PostOpportunitiesStatus {
    Planned = "Planned",
    Active = "Active",
    Paused = "Paused",
    Completed = "Completed",
    Cancelled = "Cancelled",
}

export type PostOpportunitiesPerformanceMetrics = {
    impressions?: number | undefined;
    clicks?: number | undefined;
    conversions?: number | undefined;
    spend?: number | undefined;
    returnOnInvestment?: number | undefined;
    costPerClick?: number | undefined;
    costPerConversion?: number | undefined;
    conversionRate?: number | undefined;
};

export enum PostOpportunitiesOpportunitiesType {
    String = "String",
    Number = "Number",
    Boolean = "Boolean",
    Date = "Date",
    Json = "Json",
    Array = "Array",
}

export type PostOpportunitiesMetadata = {
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    type?: PostOpportunitiesOpportunitiesType | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    entityId?: string | undefined;
    entityType?: string | undefined;
};

export enum PostOpportunitiesEntityType {
    User = "User",
    Project = "Project",
    Message = "Message",
    Other = "Other",
}

export type PostOpportunitiesAssociatedWith = {
    entityId?: string | undefined;
    entityType?: PostOpportunitiesEntityType | undefined;
    attributes?: Array<string> | undefined;
};

export enum PostOpportunitiesAccessControlType {
    Rbac = "RBAC",
    Abac = "ABAC",
    Custom = "Custom",
    None = "None",
}

export enum PostOpportunitiesOpportunitiesRequestType {
    User = "User",
    Group = "Group",
}

export type PostOpportunitiesAssigneeDetails = {
    identifier?: string | undefined;
    displayName?: string | undefined;
    type?: PostOpportunitiesOpportunitiesRequestType | undefined;
};

export enum PostOpportunitiesIdentifierType {
    String = "String",
    Number = "Number",
}

export type PostOpportunitiesPermissions = {
    canView?: Array<string> | undefined;
    canEdit?: Array<string> | undefined;
    canDelete?: Array<string> | undefined;
    roles?: Array<string> | undefined;
    accessControlType?: PostOpportunitiesAccessControlType | undefined;
    assigneeDetails?: PostOpportunitiesAssigneeDetails | undefined;
    identifierType?: PostOpportunitiesIdentifierType | undefined;
};

export type PostOpportunitiesCreativeAssets = {
    id?: string | undefined;
    fileName?: string | undefined;
    fileSize?: number | undefined;
    fileType?: string | undefined;
    url?: string | undefined;
    thumbnailUrl?: string | undefined;
    previewUrl?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    metadata?: PostOpportunitiesMetadata | undefined;
    associatedWith?: PostOpportunitiesAssociatedWith | undefined;
    permissions?: PostOpportunitiesPermissions | undefined;
};

export type PostOpportunitiesCampaign = {
    id?: string | undefined;
    name?: string | undefined;
    type?: PostOpportunitiesType | undefined;
    status?: PostOpportunitiesStatus | undefined;
    startDate?: number | undefined;
    endDate?: number | undefined;
    budget?: number | undefined;
    targetAudience?: string | undefined;
    channels?: Array<string> | undefined;
    performanceMetrics?: PostOpportunitiesPerformanceMetrics | undefined;
    creativeAssets?: PostOpportunitiesCreativeAssets | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostOpportunitiesAccountType {
    Customer = "Customer",
    Partner = "Partner",
    Competitor = "Competitor",
    Investor = "Investor",
    Vendor = "Vendor",
    Other = "Other",
}

export enum PostOpportunitiesRating {
    Hot = "Hot",
    Warm = "Warm",
    Cold = "Cold",
}

export enum PostOpportunitiesOpportunitiesRequestRequestBodyType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostOpportunitiesGeoLocation = {
    latitude?: number | undefined;
    longitude?: number | undefined;
    altitude?: number | undefined;
    accuracy?: number | undefined;
    altitudeAccuracy?: number | undefined;
    heading?: number | undefined;
    speed?: number | undefined;
    timestamp?: number | undefined;
};

export enum PostOpportunitiesFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostOpportunitiesCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostOpportunitiesFieldType | undefined;
};

export type PostOpportunitiesBillingAddress = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostOpportunitiesOpportunitiesRequestRequestBodyType | undefined;
    geoLocation?: PostOpportunitiesGeoLocation | undefined;
    customFields?: Array<PostOpportunitiesCustomFields> | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostOpportunitiesOpportunitiesRequestRequestBodyAccountType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostOpportunitiesOpportunitiesGeoLocation = {
    latitude?: number | undefined;
    longitude?: number | undefined;
    altitude?: number | undefined;
    accuracy?: number | undefined;
    altitudeAccuracy?: number | undefined;
    heading?: number | undefined;
    speed?: number | undefined;
    timestamp?: number | undefined;
};

export enum PostOpportunitiesOpportunitiesFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostOpportunitiesOpportunitiesCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostOpportunitiesOpportunitiesFieldType | undefined;
};

export type PostOpportunitiesShippingAddress = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostOpportunitiesOpportunitiesRequestRequestBodyAccountType | undefined;
    geoLocation?: PostOpportunitiesOpportunitiesGeoLocation | undefined;
    customFields?: Array<PostOpportunitiesOpportunitiesCustomFields> | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostOpportunitiesOpportunitiesStatus {
    Active = "Active",
    Inactive = "Inactive",
    Pending = "Pending",
    Closed = "Closed",
}

export enum PostOpportunitiesOpportunitiesRequestFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostOpportunitiesOpportunitiesRequestCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostOpportunitiesOpportunitiesRequestFieldType | undefined;
};

export type PostOpportunitiesAccount = {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    accountType?: PostOpportunitiesAccountType | undefined;
    rating?: PostOpportunitiesRating | undefined;
    phone?: string | undefined;
    email?: string | undefined;
    website?: string | undefined;
    billingAddress?: PostOpportunitiesBillingAddress | undefined;
    shippingAddress?: PostOpportunitiesShippingAddress | undefined;
    numberOfEmployees?: number | undefined;
    annualRevenue?: number | undefined;
    createdDate?: number | undefined;
    lastModifiedDate?: number | undefined;
    status?: PostOpportunitiesOpportunitiesStatus | undefined;
    ownerId?: string | undefined;
    customFields?: Array<PostOpportunitiesOpportunitiesRequestCustomFields> | undefined;
    tags?: Array<string> | undefined;
};

export type PostOpportunitiesAddress = {};

export type PostOpportunitiesAddresses = {};

export type PostOpportunitiesNotes = {};

export type PostOpportunitiesSocialProfiles = {};

export type PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields = {};

export type PostOpportunitiesContacts = {
    id?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    company?: string | undefined;
    email?: string | undefined;
    emails?: Array<string> | undefined;
    phone?: string | undefined;
    phones?: Array<string> | undefined;
    address?: PostOpportunitiesAddress | undefined;
    addresses?: Array<PostOpportunitiesAddresses> | undefined;
    birthday?: number | undefined;
    relationship?: string | undefined;
    note?: string | undefined;
    notes?: PostOpportunitiesNotes | undefined;
    tags?: Array<string> | undefined;
    websites?: Array<string> | undefined;
    socialProfiles?: Array<PostOpportunitiesSocialProfiles> | undefined;
    customFields?: Array<PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields> | undefined;
};

export enum PostOpportunitiesMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostOpportunitiesProfilePicture = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostOpportunitiesMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostOpportunitiesOpportunitiesMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostOpportunitiesCoverPhoto = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostOpportunitiesOpportunitiesMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostOpportunitiesGender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export enum PostOpportunitiesOpportunitiesRequestRequestBodyOwnerType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostOpportunitiesOpportunitiesRequestGeoLocation = {};

export type PostOpportunitiesOpportunitiesRequestRequestBodyOwnerCustomFields = {};

export type PostOpportunitiesOpportunitiesAddresses = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerType | undefined;
    geoLocation?: PostOpportunitiesOpportunitiesRequestGeoLocation | undefined;
    customFields?:
        | Array<PostOpportunitiesOpportunitiesRequestRequestBodyOwnerCustomFields>
        | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostOpportunitiesRoles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export enum PostOpportunitiesCommunications {
    Email = "Email",
    Sms = "SMS",
    PushNotification = "PushNotification",
}

export type PostOpportunitiesPreferences = {
    id?: string | undefined;
    language?: string | undefined;
    currency?: string | undefined;
    timeZone?: string | undefined;
    communications?: PostOpportunitiesCommunications | undefined;
};

export enum PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksType {
    Facebook = "facebook",
    Twitter = "twitter",
    Linkedin = "linkedin",
    Instagram = "instagram",
    Tiktok = "tiktok",
    Pinterest = "pinterest",
    Youtube = "youtube",
    Other = "other",
}

export enum PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksAdditionalInfoType {
    String = "String",
    Number = "Number",
    Boolean = "Boolean",
    Date = "Date",
    Json = "Json",
    Array = "Array",
}

export type PostOpportunitiesAdditionalInfo = {
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    type?:
        | PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksAdditionalInfoType
        | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    entityId?: string | undefined;
    entityType?: string | undefined;
};

export type PostOpportunitiesSocialLinks = {
    type?: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksType | undefined;
    username?: string | undefined;
    displayName?: string | undefined;
    url?: string | undefined;
    avatarUrl?: string | undefined;
    email?: string | undefined;
    additionalInfo?: PostOpportunitiesAdditionalInfo | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostOpportunitiesOpportunitiesRequestStatus {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export enum PostOpportunitiesProvider {
    Google = "Google",
    Facebook = "Facebook",
    Twitter = "Twitter",
    LinkedIn = "LinkedIn",
    Microsoft = "Microsoft",
    Apple = "Apple",
    Other = "Other",
}

export type PostOpportunitiesSso = {
    provider?: PostOpportunitiesProvider | undefined;
    providerUserId?: string | undefined;
    profileUrl?: string | undefined;
    accessToken?: string | undefined;
    refreshToken?: string | undefined;
    expiresIn?: number | undefined;
    expiryDate?: number | undefined;
    scopes?: Array<string> | undefined;
    tokenType?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostOpportunitiesOpportunitiesRequestRequestBodyOwnerPaymentMethodsType {
    CreditCard = "CreditCard",
    PayPal = "PayPal",
    BankTransfer = "BankTransfer",
    CryptoCurrency = "CryptoCurrency",
}

export type PostOpportunitiesPaymentMethods = {
    id?: string | undefined;
    type?: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerPaymentMethodsType | undefined;
    details?: string | undefined;
    isDefault?: boolean | undefined;
};

export type PostOpportunitiesOwner = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: PostOpportunitiesProfilePicture | undefined;
    coverPhoto?: PostOpportunitiesCoverPhoto | undefined;
    gender?: PostOpportunitiesGender | undefined;
    dateOfBirth?: number | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: number | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    addresses?: Array<PostOpportunitiesOpportunitiesAddresses> | undefined;
    roles?: Array<PostOpportunitiesRoles> | undefined;
    preferences?: PostOpportunitiesPreferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialLinks?: PostOpportunitiesSocialLinks | undefined;
    status?: PostOpportunitiesOpportunitiesRequestStatus | undefined;
    sso?: Array<PostOpportunitiesSso> | undefined;
    paymentMethods?: PostOpportunitiesPaymentMethods | undefined;
};

export type PostOpportunitiesOpportunitiesMetadata = {};

export type PostOpportunitiesOpportunitiesAssociatedWith = {};

export type PostOpportunitiesOpportunitiesPermissions = {};

export type PostOpportunitiesAttachments = {
    id?: string | undefined;
    fileName?: string | undefined;
    fileSize?: number | undefined;
    fileType?: string | undefined;
    url?: string | undefined;
    thumbnailUrl?: string | undefined;
    previewUrl?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    metadata?: PostOpportunitiesOpportunitiesMetadata | undefined;
    associatedWith?: PostOpportunitiesOpportunitiesAssociatedWith | undefined;
    permissions?: PostOpportunitiesOpportunitiesPermissions | undefined;
};

export enum PostOpportunitiesOpportunitiesRequestRequestBodyFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields1 = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostOpportunitiesOpportunitiesRequestRequestBodyFieldType | undefined;
};

export type PostOpportunitiesRequestBody = {
    id?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    amount?: number | undefined;
    currency?: string | undefined;
    stage?: string | undefined;
    probability?: number | undefined;
    closeDate?: number | undefined;
    type?: string | undefined;
    nextStep?: string | undefined;
    leadSource?: string | undefined;
    isClosed?: boolean | undefined;
    isWon?: boolean | undefined;
    createdDate?: number | undefined;
    lastModifiedDate?: number | undefined;
    lostReason?: string | undefined;
    campaign?: PostOpportunitiesCampaign | undefined;
    account?: PostOpportunitiesAccount | undefined;
    contacts?: Array<PostOpportunitiesContacts> | undefined;
    owner?: PostOpportunitiesOwner | undefined;
    attachments?: Array<PostOpportunitiesAttachments> | undefined;
    notes?: Array<string> | undefined;
    customFields?: Array<PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields1> | undefined;
};

export type PostOpportunitiesRequest = {
    /**
     * IntegrationOS API key
     */
    xIntegrationosSecret: string;
    /**
     * The unique identifier of a Connected Account
     */
    xIntegrationosConnectionKey: string;
    requestBody: PostOpportunitiesRequestBody;
};

export enum PostOpportunitiesStatusCode {
    TwoHundred = 200,
    FourHundred = 400,
    FiveHundred = 500,
}

export enum PostOpportunitiesOpportunitiesResponseType {
    Email = "Email",
    SocialMedia = "Social Media",
    SearchEngine = "Search Engine",
    Display = "Display",
    Other = "Other",
}

export enum PostOpportunitiesOpportunitiesResponseStatus {
    Planned = "Planned",
    Active = "Active",
    Paused = "Paused",
    Completed = "Completed",
    Cancelled = "Cancelled",
}

export type PostOpportunitiesOpportunitiesPerformanceMetrics = {
    impressions?: number | undefined;
    clicks?: number | undefined;
    conversions?: number | undefined;
    spend?: number | undefined;
    returnOnInvestment?: number | undefined;
    costPerClick?: number | undefined;
    costPerConversion?: number | undefined;
    conversionRate?: number | undefined;
};

export enum PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignType {
    String = "String",
    Number = "Number",
    Boolean = "Boolean",
    Date = "Date",
    Json = "Json",
    Array = "Array",
}

export type PostOpportunitiesOpportunitiesResponse200Metadata = {
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    type?:
        | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignType
        | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    entityId?: string | undefined;
    entityType?: string | undefined;
};

export enum PostOpportunitiesOpportunitiesEntityType {
    User = "User",
    Project = "Project",
    Message = "Message",
    Other = "Other",
}

export type PostOpportunitiesOpportunitiesResponse200AssociatedWith = {
    entityId?: string | undefined;
    entityType?: PostOpportunitiesOpportunitiesEntityType | undefined;
    attributes?: Array<string> | undefined;
};

export enum PostOpportunitiesOpportunitiesAccessControlType {
    Rbac = "RBAC",
    Abac = "ABAC",
    Custom = "Custom",
    None = "None",
}

export enum PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignCreativeAssetsType {
    User = "User",
    Group = "Group",
}

export type PostOpportunitiesOpportunitiesAssigneeDetails = {
    identifier?: string | undefined;
    displayName?: string | undefined;
    type?:
        | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignCreativeAssetsType
        | undefined;
};

export enum PostOpportunitiesOpportunitiesIdentifierType {
    String = "String",
    Number = "Number",
}

export type PostOpportunitiesOpportunitiesResponse200Permissions = {
    canView?: Array<string> | undefined;
    canEdit?: Array<string> | undefined;
    canDelete?: Array<string> | undefined;
    roles?: Array<string> | undefined;
    accessControlType?: PostOpportunitiesOpportunitiesAccessControlType | undefined;
    assigneeDetails?: PostOpportunitiesOpportunitiesAssigneeDetails | undefined;
    identifierType?: PostOpportunitiesOpportunitiesIdentifierType | undefined;
};

export type PostOpportunitiesOpportunitiesCreativeAssets = {
    id?: string | undefined;
    fileName?: string | undefined;
    fileSize?: number | undefined;
    fileType?: string | undefined;
    url?: string | undefined;
    thumbnailUrl?: string | undefined;
    previewUrl?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    metadata?: PostOpportunitiesOpportunitiesResponse200Metadata | undefined;
    associatedWith?: PostOpportunitiesOpportunitiesResponse200AssociatedWith | undefined;
    permissions?: PostOpportunitiesOpportunitiesResponse200Permissions | undefined;
};

export type PostOpportunitiesOpportunitiesCampaign = {
    id?: string | undefined;
    name?: string | undefined;
    type?: PostOpportunitiesOpportunitiesResponseType | undefined;
    status?: PostOpportunitiesOpportunitiesResponseStatus | undefined;
    startDate?: number | undefined;
    endDate?: number | undefined;
    budget?: number | undefined;
    targetAudience?: string | undefined;
    channels?: Array<string> | undefined;
    performanceMetrics?: PostOpportunitiesOpportunitiesPerformanceMetrics | undefined;
    creativeAssets?: PostOpportunitiesOpportunitiesCreativeAssets | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostOpportunitiesOpportunitiesAccountType {
    Customer = "Customer",
    Partner = "Partner",
    Competitor = "Competitor",
    Investor = "Investor",
    Vendor = "Vendor",
    Other = "Other",
}

export enum PostOpportunitiesOpportunitiesRating {
    Hot = "Hot",
    Warm = "Warm",
    Cold = "Cold",
}

export enum PostOpportunitiesOpportunitiesResponse200Type {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostOpportunitiesOpportunitiesResponseGeoLocation = {
    latitude?: number | undefined;
    longitude?: number | undefined;
    altitude?: number | undefined;
    accuracy?: number | undefined;
    altitudeAccuracy?: number | undefined;
    heading?: number | undefined;
    speed?: number | undefined;
    timestamp?: number | undefined;
};

export enum PostOpportunitiesOpportunitiesResponse200ApplicationJSONFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedAccountCustomFields =
    {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONFieldType | undefined;
    };

export type PostOpportunitiesOpportunitiesBillingAddress = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostOpportunitiesOpportunitiesResponse200Type | undefined;
    geoLocation?: PostOpportunitiesOpportunitiesResponseGeoLocation | undefined;
    customFields?:
        | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedAccountCustomFields>
        | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostOpportunitiesOpportunitiesResponse200ApplicationJSONType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostOpportunitiesOpportunitiesResponse200GeoLocation = {
    latitude?: number | undefined;
    longitude?: number | undefined;
    altitude?: number | undefined;
    accuracy?: number | undefined;
    altitudeAccuracy?: number | undefined;
    heading?: number | undefined;
    speed?: number | undefined;
    timestamp?: number | undefined;
};

export enum PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?:
        | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyFieldType
        | undefined;
};

export type PostOpportunitiesOpportunitiesShippingAddress = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONType | undefined;
    geoLocation?: PostOpportunitiesOpportunitiesResponse200GeoLocation | undefined;
    customFields?:
        | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyCustomFields>
        | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostOpportunitiesOpportunitiesResponse200Status {
    Active = "Active",
    Inactive = "Inactive",
    Pending = "Pending",
    Closed = "Closed",
}

export enum PostOpportunitiesOpportunitiesResponse200FieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostOpportunitiesOpportunitiesResponse200ApplicationJSONCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostOpportunitiesOpportunitiesResponse200FieldType | undefined;
};

export type PostOpportunitiesOpportunitiesAccount = {
    id?: string | undefined;
    name?: string | undefined;
    industry?: string | undefined;
    accountType?: PostOpportunitiesOpportunitiesAccountType | undefined;
    rating?: PostOpportunitiesOpportunitiesRating | undefined;
    phone?: string | undefined;
    email?: string | undefined;
    website?: string | undefined;
    billingAddress?: PostOpportunitiesOpportunitiesBillingAddress | undefined;
    shippingAddress?: PostOpportunitiesOpportunitiesShippingAddress | undefined;
    numberOfEmployees?: number | undefined;
    annualRevenue?: number | undefined;
    createdDate?: number | undefined;
    lastModifiedDate?: number | undefined;
    status?: PostOpportunitiesOpportunitiesResponse200Status | undefined;
    ownerId?: string | undefined;
    customFields?:
        | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONCustomFields>
        | undefined;
    tags?: Array<string> | undefined;
};

export type PostOpportunitiesOpportunitiesAddress = {};

export type PostOpportunitiesOpportunitiesResponseAddresses = {};

export type PostOpportunitiesOpportunitiesNotes = {};

export type PostOpportunitiesOpportunitiesSocialProfiles = {};

export type PostOpportunitiesOpportunitiesResponse200CustomFields = {};

export type PostOpportunitiesOpportunitiesContacts = {
    id?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    company?: string | undefined;
    email?: string | undefined;
    emails?: Array<string> | undefined;
    phone?: string | undefined;
    phones?: Array<string> | undefined;
    address?: PostOpportunitiesOpportunitiesAddress | undefined;
    addresses?: Array<PostOpportunitiesOpportunitiesResponseAddresses> | undefined;
    birthday?: number | undefined;
    relationship?: string | undefined;
    note?: string | undefined;
    notes?: PostOpportunitiesOpportunitiesNotes | undefined;
    tags?: Array<string> | undefined;
    websites?: Array<string> | undefined;
    socialProfiles?: Array<PostOpportunitiesOpportunitiesSocialProfiles> | undefined;
    customFields?: Array<PostOpportunitiesOpportunitiesResponse200CustomFields> | undefined;
};

export enum PostOpportunitiesOpportunitiesResponseMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostOpportunitiesOpportunitiesProfilePicture = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostOpportunitiesOpportunitiesResponseMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostOpportunitiesOpportunitiesResponse200MimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostOpportunitiesOpportunitiesCoverPhoto = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostOpportunitiesOpportunitiesResponse200MimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostOpportunitiesOpportunitiesGender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export enum PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostOpportunitiesOpportunitiesResponse200ApplicationJSONGeoLocation = {};

export type PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCustomFields =
    {};

export type PostOpportunitiesOpportunitiesResponse200Addresses = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyType | undefined;
    geoLocation?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONGeoLocation | undefined;
    customFields?:
        | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCustomFields>
        | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostOpportunitiesOpportunitiesRoles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export enum PostOpportunitiesOpportunitiesCommunications {
    Email = "Email",
    Sms = "SMS",
    PushNotification = "PushNotification",
}

export type PostOpportunitiesOpportunitiesPreferences = {
    id?: string | undefined;
    language?: string | undefined;
    currency?: string | undefined;
    timeZone?: string | undefined;
    communications?: PostOpportunitiesOpportunitiesCommunications | undefined;
};

export enum PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedType {
    Facebook = "facebook",
    Twitter = "twitter",
    Linkedin = "linkedin",
    Instagram = "instagram",
    Tiktok = "tiktok",
    Pinterest = "pinterest",
    Youtube = "youtube",
    Other = "other",
}

export enum PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerSocialLinksType {
    String = "String",
    Number = "Number",
    Boolean = "Boolean",
    Date = "Date",
    Json = "Json",
    Array = "Array",
}

export type PostOpportunitiesOpportunitiesAdditionalInfo = {
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    type?:
        | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerSocialLinksType
        | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    entityId?: string | undefined;
    entityType?: string | undefined;
};

export type PostOpportunitiesOpportunitiesSocialLinks = {
    type?:
        | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedType
        | undefined;
    username?: string | undefined;
    displayName?: string | undefined;
    url?: string | undefined;
    avatarUrl?: string | undefined;
    email?: string | undefined;
    additionalInfo?: PostOpportunitiesOpportunitiesAdditionalInfo | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostOpportunitiesOpportunitiesResponse200ApplicationJSONStatus {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export enum PostOpportunitiesOpportunitiesProvider {
    Google = "Google",
    Facebook = "Facebook",
    Twitter = "Twitter",
    LinkedIn = "LinkedIn",
    Microsoft = "Microsoft",
    Apple = "Apple",
    Other = "Other",
}

export type PostOpportunitiesOpportunitiesSso = {
    provider?: PostOpportunitiesOpportunitiesProvider | undefined;
    providerUserId?: string | undefined;
    profileUrl?: string | undefined;
    accessToken?: string | undefined;
    refreshToken?: string | undefined;
    expiresIn?: number | undefined;
    expiryDate?: number | undefined;
    scopes?: Array<string> | undefined;
    tokenType?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerType {
    CreditCard = "CreditCard",
    PayPal = "PayPal",
    BankTransfer = "BankTransfer",
    CryptoCurrency = "CryptoCurrency",
}

export type PostOpportunitiesOpportunitiesPaymentMethods = {
    id?: string | undefined;
    type?:
        | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerType
        | undefined;
    details?: string | undefined;
    isDefault?: boolean | undefined;
};

export type PostOpportunitiesOpportunitiesOwner = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: PostOpportunitiesOpportunitiesProfilePicture | undefined;
    coverPhoto?: PostOpportunitiesOpportunitiesCoverPhoto | undefined;
    gender?: PostOpportunitiesOpportunitiesGender | undefined;
    dateOfBirth?: number | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: number | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    addresses?: Array<PostOpportunitiesOpportunitiesResponse200Addresses> | undefined;
    roles?: Array<PostOpportunitiesOpportunitiesRoles> | undefined;
    preferences?: PostOpportunitiesOpportunitiesPreferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialLinks?: PostOpportunitiesOpportunitiesSocialLinks | undefined;
    status?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONStatus | undefined;
    sso?: Array<PostOpportunitiesOpportunitiesSso> | undefined;
    paymentMethods?: PostOpportunitiesOpportunitiesPaymentMethods | undefined;
};

export type PostOpportunitiesOpportunitiesResponseMetadata = {};

export type PostOpportunitiesOpportunitiesResponseAssociatedWith = {};

export type PostOpportunitiesOpportunitiesResponsePermissions = {};

export type PostOpportunitiesOpportunitiesAttachments = {
    id?: string | undefined;
    fileName?: string | undefined;
    fileSize?: number | undefined;
    fileType?: string | undefined;
    url?: string | undefined;
    thumbnailUrl?: string | undefined;
    previewUrl?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    metadata?: PostOpportunitiesOpportunitiesResponseMetadata | undefined;
    associatedWith?: PostOpportunitiesOpportunitiesResponseAssociatedWith | undefined;
    permissions?: PostOpportunitiesOpportunitiesResponsePermissions | undefined;
};

export enum PostOpportunitiesOpportunitiesResponseFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostOpportunitiesOpportunitiesResponseCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostOpportunitiesOpportunitiesResponseFieldType | undefined;
};

export type PostOpportunitiesUnified = {
    id?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    amount?: number | undefined;
    currency?: string | undefined;
    stage?: string | undefined;
    probability?: number | undefined;
    closeDate?: number | undefined;
    type?: string | undefined;
    nextStep?: string | undefined;
    leadSource?: string | undefined;
    isClosed?: boolean | undefined;
    isWon?: boolean | undefined;
    createdDate?: number | undefined;
    lastModifiedDate?: number | undefined;
    lostReason?: string | undefined;
    campaign?: PostOpportunitiesOpportunitiesCampaign | undefined;
    account?: PostOpportunitiesOpportunitiesAccount | undefined;
    contacts?: Array<PostOpportunitiesOpportunitiesContacts> | undefined;
    owner?: PostOpportunitiesOpportunitiesOwner | undefined;
    attachments?: Array<PostOpportunitiesOpportunitiesAttachments> | undefined;
    notes?: Array<string> | undefined;
    customFields?: Array<PostOpportunitiesOpportunitiesResponseCustomFields> | undefined;
};

export type PostOpportunitiesPassthrough = {};

export type PostOpportunitiesCache = {
    hit?: boolean | undefined;
    ttl?: number | undefined;
    key?: string | undefined;
};

export type PostOpportunitiesMeta = {
    timestamp?: number | undefined;
    latency?: number | undefined;
    platformRateLimitRemaining?: number | undefined;
    rateLimitRemaining?: number | undefined;
    cache?: PostOpportunitiesCache | undefined;
    transactionKey?: string | undefined;
    txn?: string | undefined;
    platform?: string | undefined;
    platformVersion?: string | undefined;
    connectionDefinitionKey?: string | undefined;
    action?: string | undefined;
    commonModel?: string | undefined;
    commonModelVersion?: string | undefined;
    connectionKey?: string | undefined;
    hash?: string | undefined;
    heartbeats?: Array<string> | undefined;
    totalTransactions?: number | undefined;
};

/**
 * Successful response
 */
export type PostOpportunitiesResponseBody = {
    status?: string | undefined;
    statusCode?: PostOpportunitiesStatusCode | undefined;
    unified?: PostOpportunitiesUnified | undefined;
    passthrough?: PostOpportunitiesPassthrough | undefined;
    meta?: PostOpportunitiesMeta | undefined;
};

export type PostOpportunitiesResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Successful response
     */
    object?: PostOpportunitiesResponseBody | undefined;
};

/** @internal */
export const PostOpportunitiesType$ = z.nativeEnum(PostOpportunitiesType);

/** @internal */
export const PostOpportunitiesStatus$ = z.nativeEnum(PostOpportunitiesStatus);

/** @internal */
export namespace PostOpportunitiesPerformanceMetrics$ {
    export type Inbound = {
        impressions?: number | undefined;
        clicks?: number | undefined;
        conversions?: number | undefined;
        spend?: number | undefined;
        returnOnInvestment?: number | undefined;
        costPerClick?: number | undefined;
        costPerConversion?: number | undefined;
        conversionRate?: number | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesPerformanceMetrics,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            impressions: z.number().optional(),
            clicks: z.number().optional(),
            conversions: z.number().optional(),
            spend: z.number().optional(),
            returnOnInvestment: z.number().optional(),
            costPerClick: z.number().optional(),
            costPerConversion: z.number().optional(),
            conversionRate: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.impressions === undefined ? null : { impressions: v.impressions }),
                ...(v.clicks === undefined ? null : { clicks: v.clicks }),
                ...(v.conversions === undefined ? null : { conversions: v.conversions }),
                ...(v.spend === undefined ? null : { spend: v.spend }),
                ...(v.returnOnInvestment === undefined
                    ? null
                    : { returnOnInvestment: v.returnOnInvestment }),
                ...(v.costPerClick === undefined ? null : { costPerClick: v.costPerClick }),
                ...(v.costPerConversion === undefined
                    ? null
                    : { costPerConversion: v.costPerConversion }),
                ...(v.conversionRate === undefined ? null : { conversionRate: v.conversionRate }),
            };
        });

    export type Outbound = {
        impressions?: number | undefined;
        clicks?: number | undefined;
        conversions?: number | undefined;
        spend?: number | undefined;
        returnOnInvestment?: number | undefined;
        costPerClick?: number | undefined;
        costPerConversion?: number | undefined;
        conversionRate?: number | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesPerformanceMetrics
    > = z
        .object({
            impressions: z.number().optional(),
            clicks: z.number().optional(),
            conversions: z.number().optional(),
            spend: z.number().optional(),
            returnOnInvestment: z.number().optional(),
            costPerClick: z.number().optional(),
            costPerConversion: z.number().optional(),
            conversionRate: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.impressions === undefined ? null : { impressions: v.impressions }),
                ...(v.clicks === undefined ? null : { clicks: v.clicks }),
                ...(v.conversions === undefined ? null : { conversions: v.conversions }),
                ...(v.spend === undefined ? null : { spend: v.spend }),
                ...(v.returnOnInvestment === undefined
                    ? null
                    : { returnOnInvestment: v.returnOnInvestment }),
                ...(v.costPerClick === undefined ? null : { costPerClick: v.costPerClick }),
                ...(v.costPerConversion === undefined
                    ? null
                    : { costPerConversion: v.costPerConversion }),
                ...(v.conversionRate === undefined ? null : { conversionRate: v.conversionRate }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesType$ = z.nativeEnum(PostOpportunitiesOpportunitiesType);

/** @internal */
export namespace PostOpportunitiesMetadata$ {
    export type Inbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?: PostOpportunitiesOpportunitiesType | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesMetadata, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostOpportunitiesOpportunitiesType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?: PostOpportunitiesOpportunitiesType | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesMetadata> = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostOpportunitiesOpportunitiesType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });
}

/** @internal */
export const PostOpportunitiesEntityType$ = z.nativeEnum(PostOpportunitiesEntityType);

/** @internal */
export namespace PostOpportunitiesAssociatedWith$ {
    export type Inbound = {
        entityId?: string | undefined;
        entityType?: PostOpportunitiesEntityType | undefined;
        attributes?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesAssociatedWith, z.ZodTypeDef, Inbound> =
        z
            .object({
                entityId: z.string().optional(),
                entityType: PostOpportunitiesEntityType$.optional(),
                attributes: z.array(z.string()).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                    ...(v.entityType === undefined ? null : { entityType: v.entityType }),
                    ...(v.attributes === undefined ? null : { attributes: v.attributes }),
                };
            });

    export type Outbound = {
        entityId?: string | undefined;
        entityType?: PostOpportunitiesEntityType | undefined;
        attributes?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesAssociatedWith
    > = z
        .object({
            entityId: z.string().optional(),
            entityType: PostOpportunitiesEntityType$.optional(),
            attributes: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
                ...(v.attributes === undefined ? null : { attributes: v.attributes }),
            };
        });
}

/** @internal */
export const PostOpportunitiesAccessControlType$ = z.nativeEnum(PostOpportunitiesAccessControlType);

/** @internal */
export const PostOpportunitiesOpportunitiesRequestType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesRequestType
);

/** @internal */
export namespace PostOpportunitiesAssigneeDetails$ {
    export type Inbound = {
        identifier?: string | undefined;
        displayName?: string | undefined;
        type?: PostOpportunitiesOpportunitiesRequestType | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesAssigneeDetails, z.ZodTypeDef, Inbound> =
        z
            .object({
                identifier: z.string().optional(),
                displayName: z.string().optional(),
                type: PostOpportunitiesOpportunitiesRequestType$.optional(),
            })
            .transform((v) => {
                return {
                    ...(v.identifier === undefined ? null : { identifier: v.identifier }),
                    ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                    ...(v.type === undefined ? null : { type: v.type }),
                };
            });

    export type Outbound = {
        identifier?: string | undefined;
        displayName?: string | undefined;
        type?: PostOpportunitiesOpportunitiesRequestType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesAssigneeDetails
    > = z
        .object({
            identifier: z.string().optional(),
            displayName: z.string().optional(),
            type: PostOpportunitiesOpportunitiesRequestType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.identifier === undefined ? null : { identifier: v.identifier }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}

/** @internal */
export const PostOpportunitiesIdentifierType$ = z.nativeEnum(PostOpportunitiesIdentifierType);

/** @internal */
export namespace PostOpportunitiesPermissions$ {
    export type Inbound = {
        canView?: Array<string> | undefined;
        canEdit?: Array<string> | undefined;
        canDelete?: Array<string> | undefined;
        roles?: Array<string> | undefined;
        accessControlType?: PostOpportunitiesAccessControlType | undefined;
        assigneeDetails?: PostOpportunitiesAssigneeDetails$.Inbound | undefined;
        identifierType?: PostOpportunitiesIdentifierType | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesPermissions, z.ZodTypeDef, Inbound> = z
        .object({
            canView: z.array(z.string()).optional(),
            canEdit: z.array(z.string()).optional(),
            canDelete: z.array(z.string()).optional(),
            roles: z.array(z.string()).optional(),
            accessControlType: PostOpportunitiesAccessControlType$.optional(),
            assigneeDetails: z
                .lazy(() => PostOpportunitiesAssigneeDetails$.inboundSchema)
                .optional(),
            identifierType: PostOpportunitiesIdentifierType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.canView === undefined ? null : { canView: v.canView }),
                ...(v.canEdit === undefined ? null : { canEdit: v.canEdit }),
                ...(v.canDelete === undefined ? null : { canDelete: v.canDelete }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.accessControlType === undefined
                    ? null
                    : { accessControlType: v.accessControlType }),
                ...(v.assigneeDetails === undefined
                    ? null
                    : { assigneeDetails: v.assigneeDetails }),
                ...(v.identifierType === undefined ? null : { identifierType: v.identifierType }),
            };
        });

    export type Outbound = {
        canView?: Array<string> | undefined;
        canEdit?: Array<string> | undefined;
        canDelete?: Array<string> | undefined;
        roles?: Array<string> | undefined;
        accessControlType?: PostOpportunitiesAccessControlType | undefined;
        assigneeDetails?: PostOpportunitiesAssigneeDetails$.Outbound | undefined;
        identifierType?: PostOpportunitiesIdentifierType | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesPermissions> = z
        .object({
            canView: z.array(z.string()).optional(),
            canEdit: z.array(z.string()).optional(),
            canDelete: z.array(z.string()).optional(),
            roles: z.array(z.string()).optional(),
            accessControlType: PostOpportunitiesAccessControlType$.optional(),
            assigneeDetails: z
                .lazy(() => PostOpportunitiesAssigneeDetails$.outboundSchema)
                .optional(),
            identifierType: PostOpportunitiesIdentifierType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.canView === undefined ? null : { canView: v.canView }),
                ...(v.canEdit === undefined ? null : { canEdit: v.canEdit }),
                ...(v.canDelete === undefined ? null : { canDelete: v.canDelete }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.accessControlType === undefined
                    ? null
                    : { accessControlType: v.accessControlType }),
                ...(v.assigneeDetails === undefined
                    ? null
                    : { assigneeDetails: v.assigneeDetails }),
                ...(v.identifierType === undefined ? null : { identifierType: v.identifierType }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesCreativeAssets$ {
    export type Inbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostOpportunitiesMetadata$.Inbound | undefined;
        associatedWith?: PostOpportunitiesAssociatedWith$.Inbound | undefined;
        permissions?: PostOpportunitiesPermissions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesCreativeAssets, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.string().optional(),
                fileName: z.string().optional(),
                fileSize: z.number().optional(),
                fileType: z.string().optional(),
                url: z.string().optional(),
                thumbnailUrl: z.string().optional(),
                previewUrl: z.string().optional(),
                content: z.string().optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                metadata: z.lazy(() => PostOpportunitiesMetadata$.inboundSchema).optional(),
                associatedWith: z
                    .lazy(() => PostOpportunitiesAssociatedWith$.inboundSchema)
                    .optional(),
                permissions: z.lazy(() => PostOpportunitiesPermissions$.inboundSchema).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                    ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                    ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                    ...(v.url === undefined ? null : { url: v.url }),
                    ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                    ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                    ...(v.content === undefined ? null : { content: v.content }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                    ...(v.associatedWith === undefined
                        ? null
                        : { associatedWith: v.associatedWith }),
                    ...(v.permissions === undefined ? null : { permissions: v.permissions }),
                };
            });

    export type Outbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostOpportunitiesMetadata$.Outbound | undefined;
        associatedWith?: PostOpportunitiesAssociatedWith$.Outbound | undefined;
        permissions?: PostOpportunitiesPermissions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesCreativeAssets
    > = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z.lazy(() => PostOpportunitiesMetadata$.outboundSchema).optional(),
            associatedWith: z
                .lazy(() => PostOpportunitiesAssociatedWith$.outboundSchema)
                .optional(),
            permissions: z.lazy(() => PostOpportunitiesPermissions$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesCampaign$ {
    export type Inbound = {
        id?: string | undefined;
        name?: string | undefined;
        type?: PostOpportunitiesType | undefined;
        status?: PostOpportunitiesStatus | undefined;
        startDate?: number | undefined;
        endDate?: number | undefined;
        budget?: number | undefined;
        targetAudience?: string | undefined;
        channels?: Array<string> | undefined;
        performanceMetrics?: PostOpportunitiesPerformanceMetrics$.Inbound | undefined;
        creativeAssets?: PostOpportunitiesCreativeAssets$.Inbound | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesCampaign, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            type: PostOpportunitiesType$.optional(),
            status: PostOpportunitiesStatus$.optional(),
            startDate: z.number().optional(),
            endDate: z.number().optional(),
            budget: z.number().optional(),
            targetAudience: z.string().optional(),
            channels: z.array(z.string()).optional(),
            performanceMetrics: z
                .lazy(() => PostOpportunitiesPerformanceMetrics$.inboundSchema)
                .optional(),
            creativeAssets: z.lazy(() => PostOpportunitiesCreativeAssets$.inboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.startDate === undefined ? null : { startDate: v.startDate }),
                ...(v.endDate === undefined ? null : { endDate: v.endDate }),
                ...(v.budget === undefined ? null : { budget: v.budget }),
                ...(v.targetAudience === undefined ? null : { targetAudience: v.targetAudience }),
                ...(v.channels === undefined ? null : { channels: v.channels }),
                ...(v.performanceMetrics === undefined
                    ? null
                    : { performanceMetrics: v.performanceMetrics }),
                ...(v.creativeAssets === undefined ? null : { creativeAssets: v.creativeAssets }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        name?: string | undefined;
        type?: PostOpportunitiesType | undefined;
        status?: PostOpportunitiesStatus | undefined;
        startDate?: number | undefined;
        endDate?: number | undefined;
        budget?: number | undefined;
        targetAudience?: string | undefined;
        channels?: Array<string> | undefined;
        performanceMetrics?: PostOpportunitiesPerformanceMetrics$.Outbound | undefined;
        creativeAssets?: PostOpportunitiesCreativeAssets$.Outbound | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesCampaign> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            type: PostOpportunitiesType$.optional(),
            status: PostOpportunitiesStatus$.optional(),
            startDate: z.number().optional(),
            endDate: z.number().optional(),
            budget: z.number().optional(),
            targetAudience: z.string().optional(),
            channels: z.array(z.string()).optional(),
            performanceMetrics: z
                .lazy(() => PostOpportunitiesPerformanceMetrics$.outboundSchema)
                .optional(),
            creativeAssets: z
                .lazy(() => PostOpportunitiesCreativeAssets$.outboundSchema)
                .optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.startDate === undefined ? null : { startDate: v.startDate }),
                ...(v.endDate === undefined ? null : { endDate: v.endDate }),
                ...(v.budget === undefined ? null : { budget: v.budget }),
                ...(v.targetAudience === undefined ? null : { targetAudience: v.targetAudience }),
                ...(v.channels === undefined ? null : { channels: v.channels }),
                ...(v.performanceMetrics === undefined
                    ? null
                    : { performanceMetrics: v.performanceMetrics }),
                ...(v.creativeAssets === undefined ? null : { creativeAssets: v.creativeAssets }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostOpportunitiesAccountType$ = z.nativeEnum(PostOpportunitiesAccountType);

/** @internal */
export const PostOpportunitiesRating$ = z.nativeEnum(PostOpportunitiesRating);

/** @internal */
export const PostOpportunitiesOpportunitiesRequestRequestBodyType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesRequestRequestBodyType
);

/** @internal */
export namespace PostOpportunitiesGeoLocation$ {
    export type Inbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesGeoLocation, z.ZodTypeDef, Inbound> = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });

    export type Outbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesGeoLocation> = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });
}

/** @internal */
export const PostOpportunitiesFieldType$ = z.nativeEnum(PostOpportunitiesFieldType);

/** @internal */
export namespace PostOpportunitiesCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesCustomFields, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostOpportunitiesFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesCustomFields> =
        z
            .object({
                id: z.string().optional(),
                fieldName: z.string().optional(),
                fieldValue: z.string().optional(),
                fieldType: PostOpportunitiesFieldType$.optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                    ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                    ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
                };
            });
}

/** @internal */
export namespace PostOpportunitiesBillingAddress$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesRequestRequestBodyType | undefined;
        geoLocation?: PostOpportunitiesGeoLocation$.Inbound | undefined;
        customFields?: Array<PostOpportunitiesCustomFields$.Inbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesBillingAddress, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.string().optional(),
                contactId: z.string().optional(),
                accountId: z.string().optional(),
                firstName: z.string().optional(),
                lastName: z.string().optional(),
                name: z.string().optional(),
                companyName: z.string().optional(),
                email: z.string().optional(),
                phone: z.string().optional(),
                street: z.string().optional(),
                addressLine2: z.string().optional(),
                city: z.string().optional(),
                province: z.string().optional(),
                region: z.string().optional(),
                postalCode: z.string().optional(),
                postalCodeExtension: z.string().optional(),
                country: z.string().optional(),
                countryCode: z.string().optional(),
                type: PostOpportunitiesOpportunitiesRequestRequestBodyType$.optional(),
                geoLocation: z.lazy(() => PostOpportunitiesGeoLocation$.inboundSchema).optional(),
                customFields: z
                    .array(z.lazy(() => PostOpportunitiesCustomFields$.inboundSchema))
                    .optional(),
                subdivisionCode: z.string().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                    ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                    ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                    ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                    ...(v.name === undefined ? null : { name: v.name }),
                    ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                    ...(v.email === undefined ? null : { email: v.email }),
                    ...(v.phone === undefined ? null : { phone: v.phone }),
                    ...(v.street === undefined ? null : { street: v.street }),
                    ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                    ...(v.city === undefined ? null : { city: v.city }),
                    ...(v.province === undefined ? null : { province: v.province }),
                    ...(v.region === undefined ? null : { region: v.region }),
                    ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                    ...(v.postalCodeExtension === undefined
                        ? null
                        : { postalCodeExtension: v.postalCodeExtension }),
                    ...(v.country === undefined ? null : { country: v.country }),
                    ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                    ...(v.type === undefined ? null : { type: v.type }),
                    ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                    ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                    ...(v.subdivisionCode === undefined
                        ? null
                        : { subdivisionCode: v.subdivisionCode }),
                };
            });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesRequestRequestBodyType | undefined;
        geoLocation?: PostOpportunitiesGeoLocation$.Outbound | undefined;
        customFields?: Array<PostOpportunitiesCustomFields$.Outbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesBillingAddress
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostOpportunitiesOpportunitiesRequestRequestBodyType$.optional(),
            geoLocation: z.lazy(() => PostOpportunitiesGeoLocation$.outboundSchema).optional(),
            customFields: z
                .array(z.lazy(() => PostOpportunitiesCustomFields$.outboundSchema))
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesRequestRequestBodyAccountType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesRequestRequestBodyAccountType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesGeoLocation$ {
    export type Inbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesGeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });

    export type Outbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesGeoLocation
    > = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesFieldType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesFieldType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostOpportunitiesOpportunitiesFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesCustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostOpportunitiesOpportunitiesFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesShippingAddress$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesRequestRequestBodyAccountType | undefined;
        geoLocation?: PostOpportunitiesOpportunitiesGeoLocation$.Inbound | undefined;
        customFields?: Array<PostOpportunitiesOpportunitiesCustomFields$.Inbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesShippingAddress, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.string().optional(),
                contactId: z.string().optional(),
                accountId: z.string().optional(),
                firstName: z.string().optional(),
                lastName: z.string().optional(),
                name: z.string().optional(),
                companyName: z.string().optional(),
                email: z.string().optional(),
                phone: z.string().optional(),
                street: z.string().optional(),
                addressLine2: z.string().optional(),
                city: z.string().optional(),
                province: z.string().optional(),
                region: z.string().optional(),
                postalCode: z.string().optional(),
                postalCodeExtension: z.string().optional(),
                country: z.string().optional(),
                countryCode: z.string().optional(),
                type: PostOpportunitiesOpportunitiesRequestRequestBodyAccountType$.optional(),
                geoLocation: z
                    .lazy(() => PostOpportunitiesOpportunitiesGeoLocation$.inboundSchema)
                    .optional(),
                customFields: z
                    .array(z.lazy(() => PostOpportunitiesOpportunitiesCustomFields$.inboundSchema))
                    .optional(),
                subdivisionCode: z.string().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                    ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                    ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                    ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                    ...(v.name === undefined ? null : { name: v.name }),
                    ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                    ...(v.email === undefined ? null : { email: v.email }),
                    ...(v.phone === undefined ? null : { phone: v.phone }),
                    ...(v.street === undefined ? null : { street: v.street }),
                    ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                    ...(v.city === undefined ? null : { city: v.city }),
                    ...(v.province === undefined ? null : { province: v.province }),
                    ...(v.region === undefined ? null : { region: v.region }),
                    ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                    ...(v.postalCodeExtension === undefined
                        ? null
                        : { postalCodeExtension: v.postalCodeExtension }),
                    ...(v.country === undefined ? null : { country: v.country }),
                    ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                    ...(v.type === undefined ? null : { type: v.type }),
                    ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                    ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                    ...(v.subdivisionCode === undefined
                        ? null
                        : { subdivisionCode: v.subdivisionCode }),
                };
            });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesRequestRequestBodyAccountType | undefined;
        geoLocation?: PostOpportunitiesOpportunitiesGeoLocation$.Outbound | undefined;
        customFields?: Array<PostOpportunitiesOpportunitiesCustomFields$.Outbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesShippingAddress
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostOpportunitiesOpportunitiesRequestRequestBodyAccountType$.optional(),
            geoLocation: z
                .lazy(() => PostOpportunitiesOpportunitiesGeoLocation$.outboundSchema)
                .optional(),
            customFields: z
                .array(z.lazy(() => PostOpportunitiesOpportunitiesCustomFields$.outboundSchema))
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesStatus$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesStatus
);

/** @internal */
export const PostOpportunitiesOpportunitiesRequestFieldType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesRequestFieldType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesRequestCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesRequestFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesRequestCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostOpportunitiesOpportunitiesRequestFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesRequestFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesRequestCustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostOpportunitiesOpportunitiesRequestFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesAccount$ {
    export type Inbound = {
        id?: string | undefined;
        name?: string | undefined;
        industry?: string | undefined;
        accountType?: PostOpportunitiesAccountType | undefined;
        rating?: PostOpportunitiesRating | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        website?: string | undefined;
        billingAddress?: PostOpportunitiesBillingAddress$.Inbound | undefined;
        shippingAddress?: PostOpportunitiesShippingAddress$.Inbound | undefined;
        numberOfEmployees?: number | undefined;
        annualRevenue?: number | undefined;
        createdDate?: number | undefined;
        lastModifiedDate?: number | undefined;
        status?: PostOpportunitiesOpportunitiesStatus | undefined;
        ownerId?: string | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesRequestCustomFields$.Inbound>
            | undefined;
        tags?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesAccount, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            industry: z.string().optional(),
            accountType: PostOpportunitiesAccountType$.optional(),
            rating: PostOpportunitiesRating$.optional(),
            phone: z.string().optional(),
            email: z.string().optional(),
            website: z.string().optional(),
            billingAddress: z.lazy(() => PostOpportunitiesBillingAddress$.inboundSchema).optional(),
            shippingAddress: z
                .lazy(() => PostOpportunitiesShippingAddress$.inboundSchema)
                .optional(),
            numberOfEmployees: z.number().optional(),
            annualRevenue: z.number().optional(),
            createdDate: z.number().optional(),
            lastModifiedDate: z.number().optional(),
            status: PostOpportunitiesOpportunitiesStatus$.optional(),
            ownerId: z.string().optional(),
            customFields: z
                .array(
                    z.lazy(() => PostOpportunitiesOpportunitiesRequestCustomFields$.inboundSchema)
                )
                .optional(),
            tags: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.industry === undefined ? null : { industry: v.industry }),
                ...(v.accountType === undefined ? null : { accountType: v.accountType }),
                ...(v.rating === undefined ? null : { rating: v.rating }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.billingAddress === undefined ? null : { billingAddress: v.billingAddress }),
                ...(v.shippingAddress === undefined
                    ? null
                    : { shippingAddress: v.shippingAddress }),
                ...(v.numberOfEmployees === undefined
                    ? null
                    : { numberOfEmployees: v.numberOfEmployees }),
                ...(v.annualRevenue === undefined ? null : { annualRevenue: v.annualRevenue }),
                ...(v.createdDate === undefined ? null : { createdDate: v.createdDate }),
                ...(v.lastModifiedDate === undefined
                    ? null
                    : { lastModifiedDate: v.lastModifiedDate }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.ownerId === undefined ? null : { ownerId: v.ownerId }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        name?: string | undefined;
        industry?: string | undefined;
        accountType?: PostOpportunitiesAccountType | undefined;
        rating?: PostOpportunitiesRating | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        website?: string | undefined;
        billingAddress?: PostOpportunitiesBillingAddress$.Outbound | undefined;
        shippingAddress?: PostOpportunitiesShippingAddress$.Outbound | undefined;
        numberOfEmployees?: number | undefined;
        annualRevenue?: number | undefined;
        createdDate?: number | undefined;
        lastModifiedDate?: number | undefined;
        status?: PostOpportunitiesOpportunitiesStatus | undefined;
        ownerId?: string | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesRequestCustomFields$.Outbound>
            | undefined;
        tags?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesAccount> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            industry: z.string().optional(),
            accountType: PostOpportunitiesAccountType$.optional(),
            rating: PostOpportunitiesRating$.optional(),
            phone: z.string().optional(),
            email: z.string().optional(),
            website: z.string().optional(),
            billingAddress: z
                .lazy(() => PostOpportunitiesBillingAddress$.outboundSchema)
                .optional(),
            shippingAddress: z
                .lazy(() => PostOpportunitiesShippingAddress$.outboundSchema)
                .optional(),
            numberOfEmployees: z.number().optional(),
            annualRevenue: z.number().optional(),
            createdDate: z.number().optional(),
            lastModifiedDate: z.number().optional(),
            status: PostOpportunitiesOpportunitiesStatus$.optional(),
            ownerId: z.string().optional(),
            customFields: z
                .array(
                    z.lazy(() => PostOpportunitiesOpportunitiesRequestCustomFields$.outboundSchema)
                )
                .optional(),
            tags: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.industry === undefined ? null : { industry: v.industry }),
                ...(v.accountType === undefined ? null : { accountType: v.accountType }),
                ...(v.rating === undefined ? null : { rating: v.rating }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.billingAddress === undefined ? null : { billingAddress: v.billingAddress }),
                ...(v.shippingAddress === undefined
                    ? null
                    : { shippingAddress: v.shippingAddress }),
                ...(v.numberOfEmployees === undefined
                    ? null
                    : { numberOfEmployees: v.numberOfEmployees }),
                ...(v.annualRevenue === undefined ? null : { annualRevenue: v.annualRevenue }),
                ...(v.createdDate === undefined ? null : { createdDate: v.createdDate }),
                ...(v.lastModifiedDate === undefined
                    ? null
                    : { lastModifiedDate: v.lastModifiedDate }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.ownerId === undefined ? null : { ownerId: v.ownerId }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesAddress$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostOpportunitiesAddress, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesAddress> =
        z.object({});
}

/** @internal */
export namespace PostOpportunitiesAddresses$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostOpportunitiesAddresses, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesAddresses> =
        z.object({});
}

/** @internal */
export namespace PostOpportunitiesNotes$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostOpportunitiesNotes, z.ZodTypeDef, Inbound> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesNotes> =
        z.object({});
}

/** @internal */
export namespace PostOpportunitiesSocialProfiles$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostOpportunitiesSocialProfiles, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesSocialProfiles
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesContacts$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        company?: string | undefined;
        email?: string | undefined;
        emails?: Array<string> | undefined;
        phone?: string | undefined;
        phones?: Array<string> | undefined;
        address?: PostOpportunitiesAddress$.Inbound | undefined;
        addresses?: Array<PostOpportunitiesAddresses$.Inbound> | undefined;
        birthday?: number | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: PostOpportunitiesNotes$.Inbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<PostOpportunitiesSocialProfiles$.Inbound> | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields$.Inbound>
            | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesContacts, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            company: z.string().optional(),
            email: z.string().optional(),
            emails: z.array(z.string()).optional(),
            phone: z.string().optional(),
            phones: z.array(z.string()).optional(),
            address: z.lazy(() => PostOpportunitiesAddress$.inboundSchema).optional(),
            addresses: z.array(z.lazy(() => PostOpportunitiesAddresses$.inboundSchema)).optional(),
            birthday: z.number().optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: z.lazy(() => PostOpportunitiesNotes$.inboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z
                .array(z.lazy(() => PostOpportunitiesSocialProfiles$.inboundSchema))
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields$.inboundSchema
                    )
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        company?: string | undefined;
        email?: string | undefined;
        emails?: Array<string> | undefined;
        phone?: string | undefined;
        phones?: Array<string> | undefined;
        address?: PostOpportunitiesAddress$.Outbound | undefined;
        addresses?: Array<PostOpportunitiesAddresses$.Outbound> | undefined;
        birthday?: number | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: PostOpportunitiesNotes$.Outbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<PostOpportunitiesSocialProfiles$.Outbound> | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields$.Outbound>
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesContacts> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            company: z.string().optional(),
            email: z.string().optional(),
            emails: z.array(z.string()).optional(),
            phone: z.string().optional(),
            phones: z.array(z.string()).optional(),
            address: z.lazy(() => PostOpportunitiesAddress$.outboundSchema).optional(),
            addresses: z.array(z.lazy(() => PostOpportunitiesAddresses$.outboundSchema)).optional(),
            birthday: z.number().optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: z.lazy(() => PostOpportunitiesNotes$.outboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z
                .array(z.lazy(() => PostOpportunitiesSocialProfiles$.outboundSchema))
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields$.outboundSchema
                    )
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });
}

/** @internal */
export const PostOpportunitiesMimeType$ = z.nativeEnum(PostOpportunitiesMimeType);

/** @internal */
export namespace PostOpportunitiesProfilePicture$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostOpportunitiesMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesProfilePicture, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.string().optional(),
                src: z.string().optional(),
                altText: z.string().optional(),
                width: z.number().optional(),
                height: z.number().optional(),
                thumbnailSrc: z.string().optional(),
                caption: z.string().optional(),
                title: z.string().optional(),
                mimeType: PostOpportunitiesMimeType$.optional(),
                tags: z.array(z.string()).optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                active: z.boolean().optional(),
                deleted: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.src === undefined ? null : { src: v.src }),
                    ...(v.altText === undefined ? null : { altText: v.altText }),
                    ...(v.width === undefined ? null : { width: v.width }),
                    ...(v.height === undefined ? null : { height: v.height }),
                    ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                    ...(v.caption === undefined ? null : { caption: v.caption }),
                    ...(v.title === undefined ? null : { title: v.title }),
                    ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                    ...(v.tags === undefined ? null : { tags: v.tags }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.active === undefined ? null : { active: v.active }),
                    ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                };
            });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostOpportunitiesMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesProfilePicture
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostOpportunitiesMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesMimeType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesMimeType
);

/** @internal */
export namespace PostOpportunitiesCoverPhoto$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostOpportunitiesOpportunitiesMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesCoverPhoto, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostOpportunitiesOpportunitiesMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostOpportunitiesOpportunitiesMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesCoverPhoto> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostOpportunitiesOpportunitiesMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostOpportunitiesGender$ = z.nativeEnum(PostOpportunitiesGender);

/** @internal */
export const PostOpportunitiesOpportunitiesRequestRequestBodyOwnerType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesRequestRequestBodyOwnerType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesRequestGeoLocation$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesRequestGeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesRequestGeoLocation
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesRequestRequestBodyOwnerCustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesRequestRequestBodyOwnerCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesRequestRequestBodyOwnerCustomFields
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesAddresses$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerType | undefined;
        geoLocation?: PostOpportunitiesOpportunitiesRequestGeoLocation$.Inbound | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesRequestRequestBodyOwnerCustomFields$.Inbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesAddresses,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerType$.optional(),
            geoLocation: z
                .lazy(() => PostOpportunitiesOpportunitiesRequestGeoLocation$.inboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesRequestRequestBodyOwnerCustomFields$.inboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerType | undefined;
        geoLocation?: PostOpportunitiesOpportunitiesRequestGeoLocation$.Outbound | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesRequestRequestBodyOwnerCustomFields$.Outbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesAddresses
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerType$.optional(),
            geoLocation: z
                .lazy(() => PostOpportunitiesOpportunitiesRequestGeoLocation$.outboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesRequestRequestBodyOwnerCustomFields$.outboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostOpportunitiesRoles$ = z.nativeEnum(PostOpportunitiesRoles);

/** @internal */
export const PostOpportunitiesCommunications$ = z.nativeEnum(PostOpportunitiesCommunications);

/** @internal */
export namespace PostOpportunitiesPreferences$ {
    export type Inbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostOpportunitiesCommunications | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesPreferences, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: PostOpportunitiesCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostOpportunitiesCommunications | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesPreferences> = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: PostOpportunitiesCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksType
);

/** @internal */
export const PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksAdditionalInfoType$ =
    z.nativeEnum(
        PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksAdditionalInfoType
    );

/** @internal */
export namespace PostOpportunitiesAdditionalInfo$ {
    export type Inbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksAdditionalInfoType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesAdditionalInfo, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.string().optional(),
                key: z.string().optional(),
                value: z.string().optional(),
                type: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksAdditionalInfoType$.optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                entityId: z.string().optional(),
                entityType: z.string().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.key === undefined ? null : { key: v.key }),
                    ...(v.value === undefined ? null : { value: v.value }),
                    ...(v.type === undefined ? null : { type: v.type }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                    ...(v.entityType === undefined ? null : { entityType: v.entityType }),
                };
            });

    export type Outbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksAdditionalInfoType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesAdditionalInfo
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksAdditionalInfoType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesSocialLinks$ {
    export type Inbound = {
        type?: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostOpportunitiesAdditionalInfo$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesSocialLinks, z.ZodTypeDef, Inbound> = z
        .object({
            type: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z.lazy(() => PostOpportunitiesAdditionalInfo$.inboundSchema).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        type?: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostOpportunitiesAdditionalInfo$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesSocialLinks> = z
        .object({
            type: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerSocialLinksType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => PostOpportunitiesAdditionalInfo$.outboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesRequestStatus$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesRequestStatus
);

/** @internal */
export const PostOpportunitiesProvider$ = z.nativeEnum(PostOpportunitiesProvider);

/** @internal */
export namespace PostOpportunitiesSso$ {
    export type Inbound = {
        provider?: PostOpportunitiesProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesSso, z.ZodTypeDef, Inbound> = z
        .object({
            provider: PostOpportunitiesProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        provider?: PostOpportunitiesProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesSso> = z
        .object({
            provider: PostOpportunitiesProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesRequestRequestBodyOwnerPaymentMethodsType$ =
    z.nativeEnum(PostOpportunitiesOpportunitiesRequestRequestBodyOwnerPaymentMethodsType);

/** @internal */
export namespace PostOpportunitiesPaymentMethods$ {
    export type Inbound = {
        id?: string | undefined;
        type?: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerPaymentMethodsType | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesPaymentMethods, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.string().optional(),
                type: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerPaymentMethodsType$.optional(),
                details: z.string().optional(),
                isDefault: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.type === undefined ? null : { type: v.type }),
                    ...(v.details === undefined ? null : { details: v.details }),
                    ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
                };
            });

    export type Outbound = {
        id?: string | undefined;
        type?: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerPaymentMethodsType | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesPaymentMethods
    > = z
        .object({
            id: z.string().optional(),
            type: PostOpportunitiesOpportunitiesRequestRequestBodyOwnerPaymentMethodsType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesOwner$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostOpportunitiesProfilePicture$.Inbound | undefined;
        coverPhoto?: PostOpportunitiesCoverPhoto$.Inbound | undefined;
        gender?: PostOpportunitiesGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostOpportunitiesOpportunitiesAddresses$.Inbound> | undefined;
        roles?: Array<PostOpportunitiesRoles> | undefined;
        preferences?: PostOpportunitiesPreferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostOpportunitiesSocialLinks$.Inbound | undefined;
        status?: PostOpportunitiesOpportunitiesRequestStatus | undefined;
        sso?: Array<PostOpportunitiesSso$.Inbound> | undefined;
        paymentMethods?: PostOpportunitiesPaymentMethods$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesOwner, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z.lazy(() => PostOpportunitiesProfilePicture$.inboundSchema).optional(),
            coverPhoto: z.lazy(() => PostOpportunitiesCoverPhoto$.inboundSchema).optional(),
            gender: PostOpportunitiesGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(z.lazy(() => PostOpportunitiesOpportunitiesAddresses$.inboundSchema))
                .optional(),
            roles: z.array(PostOpportunitiesRoles$).optional(),
            preferences: z.lazy(() => PostOpportunitiesPreferences$.inboundSchema).optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z.lazy(() => PostOpportunitiesSocialLinks$.inboundSchema).optional(),
            status: PostOpportunitiesOpportunitiesRequestStatus$.optional(),
            sso: z.array(z.lazy(() => PostOpportunitiesSso$.inboundSchema)).optional(),
            paymentMethods: z.lazy(() => PostOpportunitiesPaymentMethods$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostOpportunitiesProfilePicture$.Outbound | undefined;
        coverPhoto?: PostOpportunitiesCoverPhoto$.Outbound | undefined;
        gender?: PostOpportunitiesGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostOpportunitiesOpportunitiesAddresses$.Outbound> | undefined;
        roles?: Array<PostOpportunitiesRoles> | undefined;
        preferences?: PostOpportunitiesPreferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostOpportunitiesSocialLinks$.Outbound | undefined;
        status?: PostOpportunitiesOpportunitiesRequestStatus | undefined;
        sso?: Array<PostOpportunitiesSso$.Outbound> | undefined;
        paymentMethods?: PostOpportunitiesPaymentMethods$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesOwner> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => PostOpportunitiesProfilePicture$.outboundSchema)
                .optional(),
            coverPhoto: z.lazy(() => PostOpportunitiesCoverPhoto$.outboundSchema).optional(),
            gender: PostOpportunitiesGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(z.lazy(() => PostOpportunitiesOpportunitiesAddresses$.outboundSchema))
                .optional(),
            roles: z.array(PostOpportunitiesRoles$).optional(),
            preferences: z.lazy(() => PostOpportunitiesPreferences$.outboundSchema).optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z.lazy(() => PostOpportunitiesSocialLinks$.outboundSchema).optional(),
            status: PostOpportunitiesOpportunitiesRequestStatus$.optional(),
            sso: z.array(z.lazy(() => PostOpportunitiesSso$.outboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => PostOpportunitiesPaymentMethods$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesMetadata$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesMetadata,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesMetadata
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesAssociatedWith$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesAssociatedWith,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesAssociatedWith
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesPermissions$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesPermissions,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesPermissions
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesAttachments$ {
    export type Inbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostOpportunitiesOpportunitiesMetadata$.Inbound | undefined;
        associatedWith?: PostOpportunitiesOpportunitiesAssociatedWith$.Inbound | undefined;
        permissions?: PostOpportunitiesOpportunitiesPermissions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesAttachments, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z
                .lazy(() => PostOpportunitiesOpportunitiesMetadata$.inboundSchema)
                .optional(),
            associatedWith: z
                .lazy(() => PostOpportunitiesOpportunitiesAssociatedWith$.inboundSchema)
                .optional(),
            permissions: z
                .lazy(() => PostOpportunitiesOpportunitiesPermissions$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostOpportunitiesOpportunitiesMetadata$.Outbound | undefined;
        associatedWith?: PostOpportunitiesOpportunitiesAssociatedWith$.Outbound | undefined;
        permissions?: PostOpportunitiesOpportunitiesPermissions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesAttachments> = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z
                .lazy(() => PostOpportunitiesOpportunitiesMetadata$.outboundSchema)
                .optional(),
            associatedWith: z
                .lazy(() => PostOpportunitiesOpportunitiesAssociatedWith$.outboundSchema)
                .optional(),
            permissions: z
                .lazy(() => PostOpportunitiesOpportunitiesPermissions$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesRequestRequestBodyFieldType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesRequestRequestBodyFieldType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields1$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesRequestRequestBodyFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields1,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostOpportunitiesOpportunitiesRequestRequestBodyFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesRequestRequestBodyFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields1
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostOpportunitiesOpportunitiesRequestRequestBodyFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesRequestBody$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        amount?: number | undefined;
        currency?: string | undefined;
        stage?: string | undefined;
        probability?: number | undefined;
        closeDate?: number | undefined;
        type?: string | undefined;
        nextStep?: string | undefined;
        leadSource?: string | undefined;
        isClosed?: boolean | undefined;
        isWon?: boolean | undefined;
        createdDate?: number | undefined;
        lastModifiedDate?: number | undefined;
        lostReason?: string | undefined;
        campaign?: PostOpportunitiesCampaign$.Inbound | undefined;
        account?: PostOpportunitiesAccount$.Inbound | undefined;
        contacts?: Array<PostOpportunitiesContacts$.Inbound> | undefined;
        owner?: PostOpportunitiesOwner$.Inbound | undefined;
        attachments?: Array<PostOpportunitiesAttachments$.Inbound> | undefined;
        notes?: Array<string> | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields1$.Inbound>
            | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesRequestBody, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            amount: z.number().optional(),
            currency: z.string().optional(),
            stage: z.string().optional(),
            probability: z.number().optional(),
            closeDate: z.number().optional(),
            type: z.string().optional(),
            nextStep: z.string().optional(),
            leadSource: z.string().optional(),
            isClosed: z.boolean().optional(),
            isWon: z.boolean().optional(),
            createdDate: z.number().optional(),
            lastModifiedDate: z.number().optional(),
            lostReason: z.string().optional(),
            campaign: z.lazy(() => PostOpportunitiesCampaign$.inboundSchema).optional(),
            account: z.lazy(() => PostOpportunitiesAccount$.inboundSchema).optional(),
            contacts: z.array(z.lazy(() => PostOpportunitiesContacts$.inboundSchema)).optional(),
            owner: z.lazy(() => PostOpportunitiesOwner$.inboundSchema).optional(),
            attachments: z
                .array(z.lazy(() => PostOpportunitiesAttachments$.inboundSchema))
                .optional(),
            notes: z.array(z.string()).optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields1$.inboundSchema
                    )
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.stage === undefined ? null : { stage: v.stage }),
                ...(v.probability === undefined ? null : { probability: v.probability }),
                ...(v.closeDate === undefined ? null : { closeDate: v.closeDate }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.nextStep === undefined ? null : { nextStep: v.nextStep }),
                ...(v.leadSource === undefined ? null : { leadSource: v.leadSource }),
                ...(v.isClosed === undefined ? null : { isClosed: v.isClosed }),
                ...(v.isWon === undefined ? null : { isWon: v.isWon }),
                ...(v.createdDate === undefined ? null : { createdDate: v.createdDate }),
                ...(v.lastModifiedDate === undefined
                    ? null
                    : { lastModifiedDate: v.lastModifiedDate }),
                ...(v.lostReason === undefined ? null : { lostReason: v.lostReason }),
                ...(v.campaign === undefined ? null : { campaign: v.campaign }),
                ...(v.account === undefined ? null : { account: v.account }),
                ...(v.contacts === undefined ? null : { contacts: v.contacts }),
                ...(v.owner === undefined ? null : { owner: v.owner }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        amount?: number | undefined;
        currency?: string | undefined;
        stage?: string | undefined;
        probability?: number | undefined;
        closeDate?: number | undefined;
        type?: string | undefined;
        nextStep?: string | undefined;
        leadSource?: string | undefined;
        isClosed?: boolean | undefined;
        isWon?: boolean | undefined;
        createdDate?: number | undefined;
        lastModifiedDate?: number | undefined;
        lostReason?: string | undefined;
        campaign?: PostOpportunitiesCampaign$.Outbound | undefined;
        account?: PostOpportunitiesAccount$.Outbound | undefined;
        contacts?: Array<PostOpportunitiesContacts$.Outbound> | undefined;
        owner?: PostOpportunitiesOwner$.Outbound | undefined;
        attachments?: Array<PostOpportunitiesAttachments$.Outbound> | undefined;
        notes?: Array<string> | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields1$.Outbound>
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesRequestBody> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            amount: z.number().optional(),
            currency: z.string().optional(),
            stage: z.string().optional(),
            probability: z.number().optional(),
            closeDate: z.number().optional(),
            type: z.string().optional(),
            nextStep: z.string().optional(),
            leadSource: z.string().optional(),
            isClosed: z.boolean().optional(),
            isWon: z.boolean().optional(),
            createdDate: z.number().optional(),
            lastModifiedDate: z.number().optional(),
            lostReason: z.string().optional(),
            campaign: z.lazy(() => PostOpportunitiesCampaign$.outboundSchema).optional(),
            account: z.lazy(() => PostOpportunitiesAccount$.outboundSchema).optional(),
            contacts: z.array(z.lazy(() => PostOpportunitiesContacts$.outboundSchema)).optional(),
            owner: z.lazy(() => PostOpportunitiesOwner$.outboundSchema).optional(),
            attachments: z
                .array(z.lazy(() => PostOpportunitiesAttachments$.outboundSchema))
                .optional(),
            notes: z.array(z.string()).optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesRequestRequestBodyCustomFields1$.outboundSchema
                    )
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.stage === undefined ? null : { stage: v.stage }),
                ...(v.probability === undefined ? null : { probability: v.probability }),
                ...(v.closeDate === undefined ? null : { closeDate: v.closeDate }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.nextStep === undefined ? null : { nextStep: v.nextStep }),
                ...(v.leadSource === undefined ? null : { leadSource: v.leadSource }),
                ...(v.isClosed === undefined ? null : { isClosed: v.isClosed }),
                ...(v.isWon === undefined ? null : { isWon: v.isWon }),
                ...(v.createdDate === undefined ? null : { createdDate: v.createdDate }),
                ...(v.lastModifiedDate === undefined
                    ? null
                    : { lastModifiedDate: v.lastModifiedDate }),
                ...(v.lostReason === undefined ? null : { lostReason: v.lostReason }),
                ...(v.campaign === undefined ? null : { campaign: v.campaign }),
                ...(v.account === undefined ? null : { account: v.account }),
                ...(v.contacts === undefined ? null : { contacts: v.contacts }),
                ...(v.owner === undefined ? null : { owner: v.owner }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesRequest$ {
    export type Inbound = {
        "X-INTEGRATIONOS-SECRET": string;
        "X-INTEGRATIONOS-CONNECTION-KEY": string;
        RequestBody: PostOpportunitiesRequestBody$.Inbound;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesRequest, z.ZodTypeDef, Inbound> = z
        .object({
            "X-INTEGRATIONOS-SECRET": z.string(),
            "X-INTEGRATIONOS-CONNECTION-KEY": z.string(),
            RequestBody: z.lazy(() => PostOpportunitiesRequestBody$.inboundSchema),
        })
        .transform((v) => {
            return {
                xIntegrationosSecret: v["X-INTEGRATIONOS-SECRET"],
                xIntegrationosConnectionKey: v["X-INTEGRATIONOS-CONNECTION-KEY"],
                requestBody: v.RequestBody,
            };
        });

    export type Outbound = {
        "X-INTEGRATIONOS-SECRET": string;
        "X-INTEGRATIONOS-CONNECTION-KEY": string;
        RequestBody: PostOpportunitiesRequestBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesRequest> = z
        .object({
            xIntegrationosSecret: z.string(),
            xIntegrationosConnectionKey: z.string(),
            requestBody: z.lazy(() => PostOpportunitiesRequestBody$.outboundSchema),
        })
        .transform((v) => {
            return {
                "X-INTEGRATIONOS-SECRET": v.xIntegrationosSecret,
                "X-INTEGRATIONOS-CONNECTION-KEY": v.xIntegrationosConnectionKey,
                RequestBody: v.requestBody,
            };
        });
}

/** @internal */
export const PostOpportunitiesStatusCode$ = z.nativeEnum(PostOpportunitiesStatusCode);

/** @internal */
export const PostOpportunitiesOpportunitiesResponseType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesResponseType
);

/** @internal */
export const PostOpportunitiesOpportunitiesResponseStatus$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesResponseStatus
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesPerformanceMetrics$ {
    export type Inbound = {
        impressions?: number | undefined;
        clicks?: number | undefined;
        conversions?: number | undefined;
        spend?: number | undefined;
        returnOnInvestment?: number | undefined;
        costPerClick?: number | undefined;
        costPerConversion?: number | undefined;
        conversionRate?: number | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesPerformanceMetrics,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            impressions: z.number().optional(),
            clicks: z.number().optional(),
            conversions: z.number().optional(),
            spend: z.number().optional(),
            returnOnInvestment: z.number().optional(),
            costPerClick: z.number().optional(),
            costPerConversion: z.number().optional(),
            conversionRate: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.impressions === undefined ? null : { impressions: v.impressions }),
                ...(v.clicks === undefined ? null : { clicks: v.clicks }),
                ...(v.conversions === undefined ? null : { conversions: v.conversions }),
                ...(v.spend === undefined ? null : { spend: v.spend }),
                ...(v.returnOnInvestment === undefined
                    ? null
                    : { returnOnInvestment: v.returnOnInvestment }),
                ...(v.costPerClick === undefined ? null : { costPerClick: v.costPerClick }),
                ...(v.costPerConversion === undefined
                    ? null
                    : { costPerConversion: v.costPerConversion }),
                ...(v.conversionRate === undefined ? null : { conversionRate: v.conversionRate }),
            };
        });

    export type Outbound = {
        impressions?: number | undefined;
        clicks?: number | undefined;
        conversions?: number | undefined;
        spend?: number | undefined;
        returnOnInvestment?: number | undefined;
        costPerClick?: number | undefined;
        costPerConversion?: number | undefined;
        conversionRate?: number | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesPerformanceMetrics
    > = z
        .object({
            impressions: z.number().optional(),
            clicks: z.number().optional(),
            conversions: z.number().optional(),
            spend: z.number().optional(),
            returnOnInvestment: z.number().optional(),
            costPerClick: z.number().optional(),
            costPerConversion: z.number().optional(),
            conversionRate: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.impressions === undefined ? null : { impressions: v.impressions }),
                ...(v.clicks === undefined ? null : { clicks: v.clicks }),
                ...(v.conversions === undefined ? null : { conversions: v.conversions }),
                ...(v.spend === undefined ? null : { spend: v.spend }),
                ...(v.returnOnInvestment === undefined
                    ? null
                    : { returnOnInvestment: v.returnOnInvestment }),
                ...(v.costPerClick === undefined ? null : { costPerClick: v.costPerClick }),
                ...(v.costPerConversion === undefined
                    ? null
                    : { costPerConversion: v.costPerConversion }),
                ...(v.conversionRate === undefined ? null : { conversionRate: v.conversionRate }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignType$ =
    z.nativeEnum(
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignType
    );

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponse200Metadata$ {
    export type Inbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponse200Metadata,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponse200Metadata
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesEntityType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesEntityType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponse200AssociatedWith$ {
    export type Inbound = {
        entityId?: string | undefined;
        entityType?: PostOpportunitiesOpportunitiesEntityType | undefined;
        attributes?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponse200AssociatedWith,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            entityId: z.string().optional(),
            entityType: PostOpportunitiesOpportunitiesEntityType$.optional(),
            attributes: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
                ...(v.attributes === undefined ? null : { attributes: v.attributes }),
            };
        });

    export type Outbound = {
        entityId?: string | undefined;
        entityType?: PostOpportunitiesOpportunitiesEntityType | undefined;
        attributes?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponse200AssociatedWith
    > = z
        .object({
            entityId: z.string().optional(),
            entityType: PostOpportunitiesOpportunitiesEntityType$.optional(),
            attributes: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
                ...(v.attributes === undefined ? null : { attributes: v.attributes }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesAccessControlType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesAccessControlType
);

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignCreativeAssetsType$ =
    z.nativeEnum(
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignCreativeAssetsType
    );

/** @internal */
export namespace PostOpportunitiesOpportunitiesAssigneeDetails$ {
    export type Inbound = {
        identifier?: string | undefined;
        displayName?: string | undefined;
        type?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignCreativeAssetsType
            | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesAssigneeDetails,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            identifier: z.string().optional(),
            displayName: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignCreativeAssetsType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.identifier === undefined ? null : { identifier: v.identifier }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        identifier?: string | undefined;
        displayName?: string | undefined;
        type?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignCreativeAssetsType
            | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesAssigneeDetails
    > = z
        .object({
            identifier: z.string().optional(),
            displayName: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCampaignCreativeAssetsType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.identifier === undefined ? null : { identifier: v.identifier }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesIdentifierType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesIdentifierType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponse200Permissions$ {
    export type Inbound = {
        canView?: Array<string> | undefined;
        canEdit?: Array<string> | undefined;
        canDelete?: Array<string> | undefined;
        roles?: Array<string> | undefined;
        accessControlType?: PostOpportunitiesOpportunitiesAccessControlType | undefined;
        assigneeDetails?: PostOpportunitiesOpportunitiesAssigneeDetails$.Inbound | undefined;
        identifierType?: PostOpportunitiesOpportunitiesIdentifierType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponse200Permissions,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            canView: z.array(z.string()).optional(),
            canEdit: z.array(z.string()).optional(),
            canDelete: z.array(z.string()).optional(),
            roles: z.array(z.string()).optional(),
            accessControlType: PostOpportunitiesOpportunitiesAccessControlType$.optional(),
            assigneeDetails: z
                .lazy(() => PostOpportunitiesOpportunitiesAssigneeDetails$.inboundSchema)
                .optional(),
            identifierType: PostOpportunitiesOpportunitiesIdentifierType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.canView === undefined ? null : { canView: v.canView }),
                ...(v.canEdit === undefined ? null : { canEdit: v.canEdit }),
                ...(v.canDelete === undefined ? null : { canDelete: v.canDelete }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.accessControlType === undefined
                    ? null
                    : { accessControlType: v.accessControlType }),
                ...(v.assigneeDetails === undefined
                    ? null
                    : { assigneeDetails: v.assigneeDetails }),
                ...(v.identifierType === undefined ? null : { identifierType: v.identifierType }),
            };
        });

    export type Outbound = {
        canView?: Array<string> | undefined;
        canEdit?: Array<string> | undefined;
        canDelete?: Array<string> | undefined;
        roles?: Array<string> | undefined;
        accessControlType?: PostOpportunitiesOpportunitiesAccessControlType | undefined;
        assigneeDetails?: PostOpportunitiesOpportunitiesAssigneeDetails$.Outbound | undefined;
        identifierType?: PostOpportunitiesOpportunitiesIdentifierType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponse200Permissions
    > = z
        .object({
            canView: z.array(z.string()).optional(),
            canEdit: z.array(z.string()).optional(),
            canDelete: z.array(z.string()).optional(),
            roles: z.array(z.string()).optional(),
            accessControlType: PostOpportunitiesOpportunitiesAccessControlType$.optional(),
            assigneeDetails: z
                .lazy(() => PostOpportunitiesOpportunitiesAssigneeDetails$.outboundSchema)
                .optional(),
            identifierType: PostOpportunitiesOpportunitiesIdentifierType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.canView === undefined ? null : { canView: v.canView }),
                ...(v.canEdit === undefined ? null : { canEdit: v.canEdit }),
                ...(v.canDelete === undefined ? null : { canDelete: v.canDelete }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.accessControlType === undefined
                    ? null
                    : { accessControlType: v.accessControlType }),
                ...(v.assigneeDetails === undefined
                    ? null
                    : { assigneeDetails: v.assigneeDetails }),
                ...(v.identifierType === undefined ? null : { identifierType: v.identifierType }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesCreativeAssets$ {
    export type Inbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostOpportunitiesOpportunitiesResponse200Metadata$.Inbound | undefined;
        associatedWith?:
            | PostOpportunitiesOpportunitiesResponse200AssociatedWith$.Inbound
            | undefined;
        permissions?: PostOpportunitiesOpportunitiesResponse200Permissions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesCreativeAssets,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z
                .lazy(() => PostOpportunitiesOpportunitiesResponse200Metadata$.inboundSchema)
                .optional(),
            associatedWith: z
                .lazy(() => PostOpportunitiesOpportunitiesResponse200AssociatedWith$.inboundSchema)
                .optional(),
            permissions: z
                .lazy(() => PostOpportunitiesOpportunitiesResponse200Permissions$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostOpportunitiesOpportunitiesResponse200Metadata$.Outbound | undefined;
        associatedWith?:
            | PostOpportunitiesOpportunitiesResponse200AssociatedWith$.Outbound
            | undefined;
        permissions?: PostOpportunitiesOpportunitiesResponse200Permissions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesCreativeAssets
    > = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z
                .lazy(() => PostOpportunitiesOpportunitiesResponse200Metadata$.outboundSchema)
                .optional(),
            associatedWith: z
                .lazy(() => PostOpportunitiesOpportunitiesResponse200AssociatedWith$.outboundSchema)
                .optional(),
            permissions: z
                .lazy(() => PostOpportunitiesOpportunitiesResponse200Permissions$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesCampaign$ {
    export type Inbound = {
        id?: string | undefined;
        name?: string | undefined;
        type?: PostOpportunitiesOpportunitiesResponseType | undefined;
        status?: PostOpportunitiesOpportunitiesResponseStatus | undefined;
        startDate?: number | undefined;
        endDate?: number | undefined;
        budget?: number | undefined;
        targetAudience?: string | undefined;
        channels?: Array<string> | undefined;
        performanceMetrics?: PostOpportunitiesOpportunitiesPerformanceMetrics$.Inbound | undefined;
        creativeAssets?: PostOpportunitiesOpportunitiesCreativeAssets$.Inbound | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesCampaign,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponseType$.optional(),
            status: PostOpportunitiesOpportunitiesResponseStatus$.optional(),
            startDate: z.number().optional(),
            endDate: z.number().optional(),
            budget: z.number().optional(),
            targetAudience: z.string().optional(),
            channels: z.array(z.string()).optional(),
            performanceMetrics: z
                .lazy(() => PostOpportunitiesOpportunitiesPerformanceMetrics$.inboundSchema)
                .optional(),
            creativeAssets: z
                .lazy(() => PostOpportunitiesOpportunitiesCreativeAssets$.inboundSchema)
                .optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.startDate === undefined ? null : { startDate: v.startDate }),
                ...(v.endDate === undefined ? null : { endDate: v.endDate }),
                ...(v.budget === undefined ? null : { budget: v.budget }),
                ...(v.targetAudience === undefined ? null : { targetAudience: v.targetAudience }),
                ...(v.channels === undefined ? null : { channels: v.channels }),
                ...(v.performanceMetrics === undefined
                    ? null
                    : { performanceMetrics: v.performanceMetrics }),
                ...(v.creativeAssets === undefined ? null : { creativeAssets: v.creativeAssets }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        name?: string | undefined;
        type?: PostOpportunitiesOpportunitiesResponseType | undefined;
        status?: PostOpportunitiesOpportunitiesResponseStatus | undefined;
        startDate?: number | undefined;
        endDate?: number | undefined;
        budget?: number | undefined;
        targetAudience?: string | undefined;
        channels?: Array<string> | undefined;
        performanceMetrics?: PostOpportunitiesOpportunitiesPerformanceMetrics$.Outbound | undefined;
        creativeAssets?: PostOpportunitiesOpportunitiesCreativeAssets$.Outbound | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesCampaign
    > = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponseType$.optional(),
            status: PostOpportunitiesOpportunitiesResponseStatus$.optional(),
            startDate: z.number().optional(),
            endDate: z.number().optional(),
            budget: z.number().optional(),
            targetAudience: z.string().optional(),
            channels: z.array(z.string()).optional(),
            performanceMetrics: z
                .lazy(() => PostOpportunitiesOpportunitiesPerformanceMetrics$.outboundSchema)
                .optional(),
            creativeAssets: z
                .lazy(() => PostOpportunitiesOpportunitiesCreativeAssets$.outboundSchema)
                .optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.startDate === undefined ? null : { startDate: v.startDate }),
                ...(v.endDate === undefined ? null : { endDate: v.endDate }),
                ...(v.budget === undefined ? null : { budget: v.budget }),
                ...(v.targetAudience === undefined ? null : { targetAudience: v.targetAudience }),
                ...(v.channels === undefined ? null : { channels: v.channels }),
                ...(v.performanceMetrics === undefined
                    ? null
                    : { performanceMetrics: v.performanceMetrics }),
                ...(v.creativeAssets === undefined ? null : { creativeAssets: v.creativeAssets }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesAccountType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesAccountType
);

/** @internal */
export const PostOpportunitiesOpportunitiesRating$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesRating
);

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200Type$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesResponse200Type
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponseGeoLocation$ {
    export type Inbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponseGeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });

    export type Outbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponseGeoLocation
    > = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200ApplicationJSONFieldType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesResponse200ApplicationJSONFieldType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedAccountCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedAccountCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType:
                PostOpportunitiesOpportunitiesResponse200ApplicationJSONFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedAccountCustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType:
                PostOpportunitiesOpportunitiesResponse200ApplicationJSONFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesBillingAddress$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesResponse200Type | undefined;
        geoLocation?: PostOpportunitiesOpportunitiesResponseGeoLocation$.Inbound | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedAccountCustomFields$.Inbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesBillingAddress,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200Type$.optional(),
            geoLocation: z
                .lazy(() => PostOpportunitiesOpportunitiesResponseGeoLocation$.inboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedAccountCustomFields$.inboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesResponse200Type | undefined;
        geoLocation?: PostOpportunitiesOpportunitiesResponseGeoLocation$.Outbound | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedAccountCustomFields$.Outbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesBillingAddress
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200Type$.optional(),
            geoLocation: z
                .lazy(() => PostOpportunitiesOpportunitiesResponseGeoLocation$.outboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedAccountCustomFields$.outboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200ApplicationJSONType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesResponse200ApplicationJSONType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponse200GeoLocation$ {
    export type Inbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponse200GeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });

    export type Outbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponse200GeoLocation
    > = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyFieldType$ =
    z.nativeEnum(PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyFieldType);

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyFieldType
            | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType:
                PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyFieldType
            | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyCustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType:
                PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesShippingAddress$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONType | undefined;
        geoLocation?: PostOpportunitiesOpportunitiesResponse200GeoLocation$.Inbound | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyCustomFields$.Inbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesShippingAddress,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONType$.optional(),
            geoLocation: z
                .lazy(() => PostOpportunitiesOpportunitiesResponse200GeoLocation$.inboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyCustomFields$.inboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONType | undefined;
        geoLocation?: PostOpportunitiesOpportunitiesResponse200GeoLocation$.Outbound | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyCustomFields$.Outbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesShippingAddress
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONType$.optional(),
            geoLocation: z
                .lazy(() => PostOpportunitiesOpportunitiesResponse200GeoLocation$.outboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyCustomFields$.outboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200Status$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesResponse200Status
);

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200FieldType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesResponse200FieldType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponse200ApplicationJSONCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesResponse200FieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostOpportunitiesOpportunitiesResponse200FieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesResponse200FieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONCustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostOpportunitiesOpportunitiesResponse200FieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesAccount$ {
    export type Inbound = {
        id?: string | undefined;
        name?: string | undefined;
        industry?: string | undefined;
        accountType?: PostOpportunitiesOpportunitiesAccountType | undefined;
        rating?: PostOpportunitiesOpportunitiesRating | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        website?: string | undefined;
        billingAddress?: PostOpportunitiesOpportunitiesBillingAddress$.Inbound | undefined;
        shippingAddress?: PostOpportunitiesOpportunitiesShippingAddress$.Inbound | undefined;
        numberOfEmployees?: number | undefined;
        annualRevenue?: number | undefined;
        createdDate?: number | undefined;
        lastModifiedDate?: number | undefined;
        status?: PostOpportunitiesOpportunitiesResponse200Status | undefined;
        ownerId?: string | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONCustomFields$.Inbound>
            | undefined;
        tags?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesAccount,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            industry: z.string().optional(),
            accountType: PostOpportunitiesOpportunitiesAccountType$.optional(),
            rating: PostOpportunitiesOpportunitiesRating$.optional(),
            phone: z.string().optional(),
            email: z.string().optional(),
            website: z.string().optional(),
            billingAddress: z
                .lazy(() => PostOpportunitiesOpportunitiesBillingAddress$.inboundSchema)
                .optional(),
            shippingAddress: z
                .lazy(() => PostOpportunitiesOpportunitiesShippingAddress$.inboundSchema)
                .optional(),
            numberOfEmployees: z.number().optional(),
            annualRevenue: z.number().optional(),
            createdDate: z.number().optional(),
            lastModifiedDate: z.number().optional(),
            status: PostOpportunitiesOpportunitiesResponse200Status$.optional(),
            ownerId: z.string().optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesResponse200ApplicationJSONCustomFields$.inboundSchema
                    )
                )
                .optional(),
            tags: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.industry === undefined ? null : { industry: v.industry }),
                ...(v.accountType === undefined ? null : { accountType: v.accountType }),
                ...(v.rating === undefined ? null : { rating: v.rating }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.billingAddress === undefined ? null : { billingAddress: v.billingAddress }),
                ...(v.shippingAddress === undefined
                    ? null
                    : { shippingAddress: v.shippingAddress }),
                ...(v.numberOfEmployees === undefined
                    ? null
                    : { numberOfEmployees: v.numberOfEmployees }),
                ...(v.annualRevenue === undefined ? null : { annualRevenue: v.annualRevenue }),
                ...(v.createdDate === undefined ? null : { createdDate: v.createdDate }),
                ...(v.lastModifiedDate === undefined
                    ? null
                    : { lastModifiedDate: v.lastModifiedDate }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.ownerId === undefined ? null : { ownerId: v.ownerId }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        name?: string | undefined;
        industry?: string | undefined;
        accountType?: PostOpportunitiesOpportunitiesAccountType | undefined;
        rating?: PostOpportunitiesOpportunitiesRating | undefined;
        phone?: string | undefined;
        email?: string | undefined;
        website?: string | undefined;
        billingAddress?: PostOpportunitiesOpportunitiesBillingAddress$.Outbound | undefined;
        shippingAddress?: PostOpportunitiesOpportunitiesShippingAddress$.Outbound | undefined;
        numberOfEmployees?: number | undefined;
        annualRevenue?: number | undefined;
        createdDate?: number | undefined;
        lastModifiedDate?: number | undefined;
        status?: PostOpportunitiesOpportunitiesResponse200Status | undefined;
        ownerId?: string | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONCustomFields$.Outbound>
            | undefined;
        tags?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesAccount
    > = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            industry: z.string().optional(),
            accountType: PostOpportunitiesOpportunitiesAccountType$.optional(),
            rating: PostOpportunitiesOpportunitiesRating$.optional(),
            phone: z.string().optional(),
            email: z.string().optional(),
            website: z.string().optional(),
            billingAddress: z
                .lazy(() => PostOpportunitiesOpportunitiesBillingAddress$.outboundSchema)
                .optional(),
            shippingAddress: z
                .lazy(() => PostOpportunitiesOpportunitiesShippingAddress$.outboundSchema)
                .optional(),
            numberOfEmployees: z.number().optional(),
            annualRevenue: z.number().optional(),
            createdDate: z.number().optional(),
            lastModifiedDate: z.number().optional(),
            status: PostOpportunitiesOpportunitiesResponse200Status$.optional(),
            ownerId: z.string().optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesResponse200ApplicationJSONCustomFields$.outboundSchema
                    )
                )
                .optional(),
            tags: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.industry === undefined ? null : { industry: v.industry }),
                ...(v.accountType === undefined ? null : { accountType: v.accountType }),
                ...(v.rating === undefined ? null : { rating: v.rating }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.billingAddress === undefined ? null : { billingAddress: v.billingAddress }),
                ...(v.shippingAddress === undefined
                    ? null
                    : { shippingAddress: v.shippingAddress }),
                ...(v.numberOfEmployees === undefined
                    ? null
                    : { numberOfEmployees: v.numberOfEmployees }),
                ...(v.annualRevenue === undefined ? null : { annualRevenue: v.annualRevenue }),
                ...(v.createdDate === undefined ? null : { createdDate: v.createdDate }),
                ...(v.lastModifiedDate === undefined
                    ? null
                    : { lastModifiedDate: v.lastModifiedDate }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.ownerId === undefined ? null : { ownerId: v.ownerId }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesAddress$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesAddress,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesAddress
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponseAddresses$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponseAddresses,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponseAddresses
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesNotes$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesNotes,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesNotes
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesSocialProfiles$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesSocialProfiles,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesSocialProfiles
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponse200CustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponse200CustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponse200CustomFields
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesContacts$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        company?: string | undefined;
        email?: string | undefined;
        emails?: Array<string> | undefined;
        phone?: string | undefined;
        phones?: Array<string> | undefined;
        address?: PostOpportunitiesOpportunitiesAddress$.Inbound | undefined;
        addresses?: Array<PostOpportunitiesOpportunitiesResponseAddresses$.Inbound> | undefined;
        birthday?: number | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: PostOpportunitiesOpportunitiesNotes$.Inbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<PostOpportunitiesOpportunitiesSocialProfiles$.Inbound> | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponse200CustomFields$.Inbound>
            | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesContacts,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            company: z.string().optional(),
            email: z.string().optional(),
            emails: z.array(z.string()).optional(),
            phone: z.string().optional(),
            phones: z.array(z.string()).optional(),
            address: z.lazy(() => PostOpportunitiesOpportunitiesAddress$.inboundSchema).optional(),
            addresses: z
                .array(z.lazy(() => PostOpportunitiesOpportunitiesResponseAddresses$.inboundSchema))
                .optional(),
            birthday: z.number().optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: z.lazy(() => PostOpportunitiesOpportunitiesNotes$.inboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z
                .array(z.lazy(() => PostOpportunitiesOpportunitiesSocialProfiles$.inboundSchema))
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () => PostOpportunitiesOpportunitiesResponse200CustomFields$.inboundSchema
                    )
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        company?: string | undefined;
        email?: string | undefined;
        emails?: Array<string> | undefined;
        phone?: string | undefined;
        phones?: Array<string> | undefined;
        address?: PostOpportunitiesOpportunitiesAddress$.Outbound | undefined;
        addresses?: Array<PostOpportunitiesOpportunitiesResponseAddresses$.Outbound> | undefined;
        birthday?: number | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: PostOpportunitiesOpportunitiesNotes$.Outbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<PostOpportunitiesOpportunitiesSocialProfiles$.Outbound> | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponse200CustomFields$.Outbound>
            | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesContacts
    > = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            company: z.string().optional(),
            email: z.string().optional(),
            emails: z.array(z.string()).optional(),
            phone: z.string().optional(),
            phones: z.array(z.string()).optional(),
            address: z.lazy(() => PostOpportunitiesOpportunitiesAddress$.outboundSchema).optional(),
            addresses: z
                .array(
                    z.lazy(() => PostOpportunitiesOpportunitiesResponseAddresses$.outboundSchema)
                )
                .optional(),
            birthday: z.number().optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: z.lazy(() => PostOpportunitiesOpportunitiesNotes$.outboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z
                .array(z.lazy(() => PostOpportunitiesOpportunitiesSocialProfiles$.outboundSchema))
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () => PostOpportunitiesOpportunitiesResponse200CustomFields$.outboundSchema
                    )
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesResponseMimeType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesResponseMimeType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesProfilePicture$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostOpportunitiesOpportunitiesResponseMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesProfilePicture,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostOpportunitiesOpportunitiesResponseMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostOpportunitiesOpportunitiesResponseMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesProfilePicture
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostOpportunitiesOpportunitiesResponseMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200MimeType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesResponse200MimeType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesCoverPhoto$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostOpportunitiesOpportunitiesResponse200MimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesCoverPhoto,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostOpportunitiesOpportunitiesResponse200MimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostOpportunitiesOpportunitiesResponse200MimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesCoverPhoto
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostOpportunitiesOpportunitiesResponse200MimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesGender$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesGender
);

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyType$ =
    z.nativeEnum(PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyType);

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponse200ApplicationJSONGeoLocation$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONGeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONGeoLocation
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCustomFields
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponse200Addresses$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyType | undefined;
        geoLocation?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONGeoLocation$.Inbound
            | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCustomFields$.Inbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponse200Addresses,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyType$.optional(),
            geoLocation: z
                .lazy(
                    () =>
                        PostOpportunitiesOpportunitiesResponse200ApplicationJSONGeoLocation$.inboundSchema
                )
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCustomFields$.inboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyType | undefined;
        geoLocation?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONGeoLocation$.Outbound
            | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCustomFields$.Outbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponse200Addresses
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyType$.optional(),
            geoLocation: z
                .lazy(
                    () =>
                        PostOpportunitiesOpportunitiesResponse200ApplicationJSONGeoLocation$.outboundSchema
                )
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedCustomFields$.outboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesRoles$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesRoles
);

/** @internal */
export const PostOpportunitiesOpportunitiesCommunications$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesCommunications
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesPreferences$ {
    export type Inbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostOpportunitiesOpportunitiesCommunications | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesPreferences,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: PostOpportunitiesOpportunitiesCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostOpportunitiesOpportunitiesCommunications | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesPreferences
    > = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: PostOpportunitiesOpportunitiesCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedType$ =
    z.nativeEnum(PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedType);

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerSocialLinksType$ =
    z.nativeEnum(
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerSocialLinksType
    );

/** @internal */
export namespace PostOpportunitiesOpportunitiesAdditionalInfo$ {
    export type Inbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerSocialLinksType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesAdditionalInfo,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerSocialLinksType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerSocialLinksType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesAdditionalInfo
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerSocialLinksType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesSocialLinks$ {
    export type Inbound = {
        type?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedType
            | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostOpportunitiesOpportunitiesAdditionalInfo$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesSocialLinks,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => PostOpportunitiesOpportunitiesAdditionalInfo$.inboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        type?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedType
            | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostOpportunitiesOpportunitiesAdditionalInfo$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesSocialLinks
    > = z
        .object({
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => PostOpportunitiesOpportunitiesAdditionalInfo$.outboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200ApplicationJSONStatus$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesResponse200ApplicationJSONStatus
);

/** @internal */
export const PostOpportunitiesOpportunitiesProvider$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesProvider
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesSso$ {
    export type Inbound = {
        provider?: PostOpportunitiesOpportunitiesProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesSso,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            provider: PostOpportunitiesOpportunitiesProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        provider?: PostOpportunitiesOpportunitiesProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesSso
    > = z
        .object({
            provider: PostOpportunitiesOpportunitiesProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerType$ =
    z.nativeEnum(
        PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerType
    );

/** @internal */
export namespace PostOpportunitiesOpportunitiesPaymentMethods$ {
    export type Inbound = {
        id?: string | undefined;
        type?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerType
            | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesPaymentMethods,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        type?:
            | PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerType
            | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesPaymentMethods
    > = z
        .object({
            id: z.string().optional(),
            type: PostOpportunitiesOpportunitiesResponse200ApplicationJSONResponseBodyUnifiedOwnerType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesOwner$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostOpportunitiesOpportunitiesProfilePicture$.Inbound | undefined;
        coverPhoto?: PostOpportunitiesOpportunitiesCoverPhoto$.Inbound | undefined;
        gender?: PostOpportunitiesOpportunitiesGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostOpportunitiesOpportunitiesResponse200Addresses$.Inbound> | undefined;
        roles?: Array<PostOpportunitiesOpportunitiesRoles> | undefined;
        preferences?: PostOpportunitiesOpportunitiesPreferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostOpportunitiesOpportunitiesSocialLinks$.Inbound | undefined;
        status?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONStatus | undefined;
        sso?: Array<PostOpportunitiesOpportunitiesSso$.Inbound> | undefined;
        paymentMethods?: PostOpportunitiesOpportunitiesPaymentMethods$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesOwner,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => PostOpportunitiesOpportunitiesProfilePicture$.inboundSchema)
                .optional(),
            coverPhoto: z
                .lazy(() => PostOpportunitiesOpportunitiesCoverPhoto$.inboundSchema)
                .optional(),
            gender: PostOpportunitiesOpportunitiesGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(
                    z.lazy(() => PostOpportunitiesOpportunitiesResponse200Addresses$.inboundSchema)
                )
                .optional(),
            roles: z.array(PostOpportunitiesOpportunitiesRoles$).optional(),
            preferences: z
                .lazy(() => PostOpportunitiesOpportunitiesPreferences$.inboundSchema)
                .optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z
                .lazy(() => PostOpportunitiesOpportunitiesSocialLinks$.inboundSchema)
                .optional(),
            status: PostOpportunitiesOpportunitiesResponse200ApplicationJSONStatus$.optional(),
            sso: z.array(z.lazy(() => PostOpportunitiesOpportunitiesSso$.inboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => PostOpportunitiesOpportunitiesPaymentMethods$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostOpportunitiesOpportunitiesProfilePicture$.Outbound | undefined;
        coverPhoto?: PostOpportunitiesOpportunitiesCoverPhoto$.Outbound | undefined;
        gender?: PostOpportunitiesOpportunitiesGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostOpportunitiesOpportunitiesResponse200Addresses$.Outbound> | undefined;
        roles?: Array<PostOpportunitiesOpportunitiesRoles> | undefined;
        preferences?: PostOpportunitiesOpportunitiesPreferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostOpportunitiesOpportunitiesSocialLinks$.Outbound | undefined;
        status?: PostOpportunitiesOpportunitiesResponse200ApplicationJSONStatus | undefined;
        sso?: Array<PostOpportunitiesOpportunitiesSso$.Outbound> | undefined;
        paymentMethods?: PostOpportunitiesOpportunitiesPaymentMethods$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesOwner
    > = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => PostOpportunitiesOpportunitiesProfilePicture$.outboundSchema)
                .optional(),
            coverPhoto: z
                .lazy(() => PostOpportunitiesOpportunitiesCoverPhoto$.outboundSchema)
                .optional(),
            gender: PostOpportunitiesOpportunitiesGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(
                    z.lazy(() => PostOpportunitiesOpportunitiesResponse200Addresses$.outboundSchema)
                )
                .optional(),
            roles: z.array(PostOpportunitiesOpportunitiesRoles$).optional(),
            preferences: z
                .lazy(() => PostOpportunitiesOpportunitiesPreferences$.outboundSchema)
                .optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z
                .lazy(() => PostOpportunitiesOpportunitiesSocialLinks$.outboundSchema)
                .optional(),
            status: PostOpportunitiesOpportunitiesResponse200ApplicationJSONStatus$.optional(),
            sso: z
                .array(z.lazy(() => PostOpportunitiesOpportunitiesSso$.outboundSchema))
                .optional(),
            paymentMethods: z
                .lazy(() => PostOpportunitiesOpportunitiesPaymentMethods$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponseMetadata$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponseMetadata,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponseMetadata
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponseAssociatedWith$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponseAssociatedWith,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponseAssociatedWith
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponsePermissions$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponsePermissions,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponsePermissions
    > = z.object({});
}

/** @internal */
export namespace PostOpportunitiesOpportunitiesAttachments$ {
    export type Inbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostOpportunitiesOpportunitiesResponseMetadata$.Inbound | undefined;
        associatedWith?: PostOpportunitiesOpportunitiesResponseAssociatedWith$.Inbound | undefined;
        permissions?: PostOpportunitiesOpportunitiesResponsePermissions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesAttachments,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z
                .lazy(() => PostOpportunitiesOpportunitiesResponseMetadata$.inboundSchema)
                .optional(),
            associatedWith: z
                .lazy(() => PostOpportunitiesOpportunitiesResponseAssociatedWith$.inboundSchema)
                .optional(),
            permissions: z
                .lazy(() => PostOpportunitiesOpportunitiesResponsePermissions$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostOpportunitiesOpportunitiesResponseMetadata$.Outbound | undefined;
        associatedWith?: PostOpportunitiesOpportunitiesResponseAssociatedWith$.Outbound | undefined;
        permissions?: PostOpportunitiesOpportunitiesResponsePermissions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesAttachments
    > = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z
                .lazy(() => PostOpportunitiesOpportunitiesResponseMetadata$.outboundSchema)
                .optional(),
            associatedWith: z
                .lazy(() => PostOpportunitiesOpportunitiesResponseAssociatedWith$.outboundSchema)
                .optional(),
            permissions: z
                .lazy(() => PostOpportunitiesOpportunitiesResponsePermissions$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });
}

/** @internal */
export const PostOpportunitiesOpportunitiesResponseFieldType$ = z.nativeEnum(
    PostOpportunitiesOpportunitiesResponseFieldType
);

/** @internal */
export namespace PostOpportunitiesOpportunitiesResponseCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesResponseFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostOpportunitiesOpportunitiesResponseCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostOpportunitiesOpportunitiesResponseFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostOpportunitiesOpportunitiesResponseFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostOpportunitiesOpportunitiesResponseCustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostOpportunitiesOpportunitiesResponseFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesUnified$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        amount?: number | undefined;
        currency?: string | undefined;
        stage?: string | undefined;
        probability?: number | undefined;
        closeDate?: number | undefined;
        type?: string | undefined;
        nextStep?: string | undefined;
        leadSource?: string | undefined;
        isClosed?: boolean | undefined;
        isWon?: boolean | undefined;
        createdDate?: number | undefined;
        lastModifiedDate?: number | undefined;
        lostReason?: string | undefined;
        campaign?: PostOpportunitiesOpportunitiesCampaign$.Inbound | undefined;
        account?: PostOpportunitiesOpportunitiesAccount$.Inbound | undefined;
        contacts?: Array<PostOpportunitiesOpportunitiesContacts$.Inbound> | undefined;
        owner?: PostOpportunitiesOpportunitiesOwner$.Inbound | undefined;
        attachments?: Array<PostOpportunitiesOpportunitiesAttachments$.Inbound> | undefined;
        notes?: Array<string> | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponseCustomFields$.Inbound>
            | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesUnified, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            amount: z.number().optional(),
            currency: z.string().optional(),
            stage: z.string().optional(),
            probability: z.number().optional(),
            closeDate: z.number().optional(),
            type: z.string().optional(),
            nextStep: z.string().optional(),
            leadSource: z.string().optional(),
            isClosed: z.boolean().optional(),
            isWon: z.boolean().optional(),
            createdDate: z.number().optional(),
            lastModifiedDate: z.number().optional(),
            lostReason: z.string().optional(),
            campaign: z
                .lazy(() => PostOpportunitiesOpportunitiesCampaign$.inboundSchema)
                .optional(),
            account: z.lazy(() => PostOpportunitiesOpportunitiesAccount$.inboundSchema).optional(),
            contacts: z
                .array(z.lazy(() => PostOpportunitiesOpportunitiesContacts$.inboundSchema))
                .optional(),
            owner: z.lazy(() => PostOpportunitiesOpportunitiesOwner$.inboundSchema).optional(),
            attachments: z
                .array(z.lazy(() => PostOpportunitiesOpportunitiesAttachments$.inboundSchema))
                .optional(),
            notes: z.array(z.string()).optional(),
            customFields: z
                .array(
                    z.lazy(() => PostOpportunitiesOpportunitiesResponseCustomFields$.inboundSchema)
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.stage === undefined ? null : { stage: v.stage }),
                ...(v.probability === undefined ? null : { probability: v.probability }),
                ...(v.closeDate === undefined ? null : { closeDate: v.closeDate }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.nextStep === undefined ? null : { nextStep: v.nextStep }),
                ...(v.leadSource === undefined ? null : { leadSource: v.leadSource }),
                ...(v.isClosed === undefined ? null : { isClosed: v.isClosed }),
                ...(v.isWon === undefined ? null : { isWon: v.isWon }),
                ...(v.createdDate === undefined ? null : { createdDate: v.createdDate }),
                ...(v.lastModifiedDate === undefined
                    ? null
                    : { lastModifiedDate: v.lastModifiedDate }),
                ...(v.lostReason === undefined ? null : { lostReason: v.lostReason }),
                ...(v.campaign === undefined ? null : { campaign: v.campaign }),
                ...(v.account === undefined ? null : { account: v.account }),
                ...(v.contacts === undefined ? null : { contacts: v.contacts }),
                ...(v.owner === undefined ? null : { owner: v.owner }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        amount?: number | undefined;
        currency?: string | undefined;
        stage?: string | undefined;
        probability?: number | undefined;
        closeDate?: number | undefined;
        type?: string | undefined;
        nextStep?: string | undefined;
        leadSource?: string | undefined;
        isClosed?: boolean | undefined;
        isWon?: boolean | undefined;
        createdDate?: number | undefined;
        lastModifiedDate?: number | undefined;
        lostReason?: string | undefined;
        campaign?: PostOpportunitiesOpportunitiesCampaign$.Outbound | undefined;
        account?: PostOpportunitiesOpportunitiesAccount$.Outbound | undefined;
        contacts?: Array<PostOpportunitiesOpportunitiesContacts$.Outbound> | undefined;
        owner?: PostOpportunitiesOpportunitiesOwner$.Outbound | undefined;
        attachments?: Array<PostOpportunitiesOpportunitiesAttachments$.Outbound> | undefined;
        notes?: Array<string> | undefined;
        customFields?:
            | Array<PostOpportunitiesOpportunitiesResponseCustomFields$.Outbound>
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesUnified> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            amount: z.number().optional(),
            currency: z.string().optional(),
            stage: z.string().optional(),
            probability: z.number().optional(),
            closeDate: z.number().optional(),
            type: z.string().optional(),
            nextStep: z.string().optional(),
            leadSource: z.string().optional(),
            isClosed: z.boolean().optional(),
            isWon: z.boolean().optional(),
            createdDate: z.number().optional(),
            lastModifiedDate: z.number().optional(),
            lostReason: z.string().optional(),
            campaign: z
                .lazy(() => PostOpportunitiesOpportunitiesCampaign$.outboundSchema)
                .optional(),
            account: z.lazy(() => PostOpportunitiesOpportunitiesAccount$.outboundSchema).optional(),
            contacts: z
                .array(z.lazy(() => PostOpportunitiesOpportunitiesContacts$.outboundSchema))
                .optional(),
            owner: z.lazy(() => PostOpportunitiesOpportunitiesOwner$.outboundSchema).optional(),
            attachments: z
                .array(z.lazy(() => PostOpportunitiesOpportunitiesAttachments$.outboundSchema))
                .optional(),
            notes: z.array(z.string()).optional(),
            customFields: z
                .array(
                    z.lazy(() => PostOpportunitiesOpportunitiesResponseCustomFields$.outboundSchema)
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.stage === undefined ? null : { stage: v.stage }),
                ...(v.probability === undefined ? null : { probability: v.probability }),
                ...(v.closeDate === undefined ? null : { closeDate: v.closeDate }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.nextStep === undefined ? null : { nextStep: v.nextStep }),
                ...(v.leadSource === undefined ? null : { leadSource: v.leadSource }),
                ...(v.isClosed === undefined ? null : { isClosed: v.isClosed }),
                ...(v.isWon === undefined ? null : { isWon: v.isWon }),
                ...(v.createdDate === undefined ? null : { createdDate: v.createdDate }),
                ...(v.lastModifiedDate === undefined
                    ? null
                    : { lastModifiedDate: v.lastModifiedDate }),
                ...(v.lostReason === undefined ? null : { lostReason: v.lostReason }),
                ...(v.campaign === undefined ? null : { campaign: v.campaign }),
                ...(v.account === undefined ? null : { account: v.account }),
                ...(v.contacts === undefined ? null : { contacts: v.contacts }),
                ...(v.owner === undefined ? null : { owner: v.owner }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesPassthrough$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostOpportunitiesPassthrough, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesPassthrough> =
        z.object({});
}

/** @internal */
export namespace PostOpportunitiesCache$ {
    export type Inbound = {
        hit?: boolean | undefined;
        ttl?: number | undefined;
        key?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesCache, z.ZodTypeDef, Inbound> = z
        .object({
            hit: z.boolean().optional(),
            ttl: z.number().int().optional(),
            key: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.hit === undefined ? null : { hit: v.hit }),
                ...(v.ttl === undefined ? null : { ttl: v.ttl }),
                ...(v.key === undefined ? null : { key: v.key }),
            };
        });

    export type Outbound = {
        hit?: boolean | undefined;
        ttl?: number | undefined;
        key?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesCache> = z
        .object({
            hit: z.boolean().optional(),
            ttl: z.number().int().optional(),
            key: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.hit === undefined ? null : { hit: v.hit }),
                ...(v.ttl === undefined ? null : { ttl: v.ttl }),
                ...(v.key === undefined ? null : { key: v.key }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesMeta$ {
    export type Inbound = {
        timestamp?: number | undefined;
        latency?: number | undefined;
        platformRateLimitRemaining?: number | undefined;
        rateLimitRemaining?: number | undefined;
        cache?: PostOpportunitiesCache$.Inbound | undefined;
        transactionKey?: string | undefined;
        txn?: string | undefined;
        platform?: string | undefined;
        platformVersion?: string | undefined;
        connectionDefinitionKey?: string | undefined;
        action?: string | undefined;
        commonModel?: string | undefined;
        commonModelVersion?: string | undefined;
        connectionKey?: string | undefined;
        hash?: string | undefined;
        heartbeats?: Array<string> | undefined;
        totalTransactions?: number | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesMeta, z.ZodTypeDef, Inbound> = z
        .object({
            timestamp: z.number().int().optional(),
            latency: z.number().int().optional(),
            platformRateLimitRemaining: z.number().int().optional(),
            rateLimitRemaining: z.number().int().optional(),
            cache: z.lazy(() => PostOpportunitiesCache$.inboundSchema).optional(),
            transactionKey: z.string().optional(),
            txn: z.string().optional(),
            platform: z.string().optional(),
            platformVersion: z.string().optional(),
            connectionDefinitionKey: z.string().optional(),
            action: z.string().optional(),
            commonModel: z.string().optional(),
            commonModelVersion: z.string().optional(),
            connectionKey: z.string().optional(),
            hash: z.string().optional(),
            heartbeats: z.array(z.string()).optional(),
            totalTransactions: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
                ...(v.latency === undefined ? null : { latency: v.latency }),
                ...(v.platformRateLimitRemaining === undefined
                    ? null
                    : { platformRateLimitRemaining: v.platformRateLimitRemaining }),
                ...(v.rateLimitRemaining === undefined
                    ? null
                    : { rateLimitRemaining: v.rateLimitRemaining }),
                ...(v.cache === undefined ? null : { cache: v.cache }),
                ...(v.transactionKey === undefined ? null : { transactionKey: v.transactionKey }),
                ...(v.txn === undefined ? null : { txn: v.txn }),
                ...(v.platform === undefined ? null : { platform: v.platform }),
                ...(v.platformVersion === undefined
                    ? null
                    : { platformVersion: v.platformVersion }),
                ...(v.connectionDefinitionKey === undefined
                    ? null
                    : { connectionDefinitionKey: v.connectionDefinitionKey }),
                ...(v.action === undefined ? null : { action: v.action }),
                ...(v.commonModel === undefined ? null : { commonModel: v.commonModel }),
                ...(v.commonModelVersion === undefined
                    ? null
                    : { commonModelVersion: v.commonModelVersion }),
                ...(v.connectionKey === undefined ? null : { connectionKey: v.connectionKey }),
                ...(v.hash === undefined ? null : { hash: v.hash }),
                ...(v.heartbeats === undefined ? null : { heartbeats: v.heartbeats }),
                ...(v.totalTransactions === undefined
                    ? null
                    : { totalTransactions: v.totalTransactions }),
            };
        });

    export type Outbound = {
        timestamp?: number | undefined;
        latency?: number | undefined;
        platformRateLimitRemaining?: number | undefined;
        rateLimitRemaining?: number | undefined;
        cache?: PostOpportunitiesCache$.Outbound | undefined;
        transactionKey?: string | undefined;
        txn?: string | undefined;
        platform?: string | undefined;
        platformVersion?: string | undefined;
        connectionDefinitionKey?: string | undefined;
        action?: string | undefined;
        commonModel?: string | undefined;
        commonModelVersion?: string | undefined;
        connectionKey?: string | undefined;
        hash?: string | undefined;
        heartbeats?: Array<string> | undefined;
        totalTransactions?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesMeta> = z
        .object({
            timestamp: z.number().int().optional(),
            latency: z.number().int().optional(),
            platformRateLimitRemaining: z.number().int().optional(),
            rateLimitRemaining: z.number().int().optional(),
            cache: z.lazy(() => PostOpportunitiesCache$.outboundSchema).optional(),
            transactionKey: z.string().optional(),
            txn: z.string().optional(),
            platform: z.string().optional(),
            platformVersion: z.string().optional(),
            connectionDefinitionKey: z.string().optional(),
            action: z.string().optional(),
            commonModel: z.string().optional(),
            commonModelVersion: z.string().optional(),
            connectionKey: z.string().optional(),
            hash: z.string().optional(),
            heartbeats: z.array(z.string()).optional(),
            totalTransactions: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
                ...(v.latency === undefined ? null : { latency: v.latency }),
                ...(v.platformRateLimitRemaining === undefined
                    ? null
                    : { platformRateLimitRemaining: v.platformRateLimitRemaining }),
                ...(v.rateLimitRemaining === undefined
                    ? null
                    : { rateLimitRemaining: v.rateLimitRemaining }),
                ...(v.cache === undefined ? null : { cache: v.cache }),
                ...(v.transactionKey === undefined ? null : { transactionKey: v.transactionKey }),
                ...(v.txn === undefined ? null : { txn: v.txn }),
                ...(v.platform === undefined ? null : { platform: v.platform }),
                ...(v.platformVersion === undefined
                    ? null
                    : { platformVersion: v.platformVersion }),
                ...(v.connectionDefinitionKey === undefined
                    ? null
                    : { connectionDefinitionKey: v.connectionDefinitionKey }),
                ...(v.action === undefined ? null : { action: v.action }),
                ...(v.commonModel === undefined ? null : { commonModel: v.commonModel }),
                ...(v.commonModelVersion === undefined
                    ? null
                    : { commonModelVersion: v.commonModelVersion }),
                ...(v.connectionKey === undefined ? null : { connectionKey: v.connectionKey }),
                ...(v.hash === undefined ? null : { hash: v.hash }),
                ...(v.heartbeats === undefined ? null : { heartbeats: v.heartbeats }),
                ...(v.totalTransactions === undefined
                    ? null
                    : { totalTransactions: v.totalTransactions }),
            };
        });
}

/** @internal */
export namespace PostOpportunitiesResponseBody$ {
    export type Inbound = {
        status?: string | undefined;
        statusCode?: PostOpportunitiesStatusCode | undefined;
        unified?: PostOpportunitiesUnified$.Inbound | undefined;
        passthrough?: PostOpportunitiesPassthrough$.Inbound | undefined;
        meta?: PostOpportunitiesMeta$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesResponseBody, z.ZodTypeDef, Inbound> = z
        .object({
            status: z.string().optional(),
            statusCode: PostOpportunitiesStatusCode$.optional(),
            unified: z.lazy(() => PostOpportunitiesUnified$.inboundSchema).optional(),
            passthrough: z.lazy(() => PostOpportunitiesPassthrough$.inboundSchema).optional(),
            meta: z.lazy(() => PostOpportunitiesMeta$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.statusCode === undefined ? null : { statusCode: v.statusCode }),
                ...(v.unified === undefined ? null : { unified: v.unified }),
                ...(v.passthrough === undefined ? null : { passthrough: v.passthrough }),
                ...(v.meta === undefined ? null : { meta: v.meta }),
            };
        });

    export type Outbound = {
        status?: string | undefined;
        statusCode?: PostOpportunitiesStatusCode | undefined;
        unified?: PostOpportunitiesUnified$.Outbound | undefined;
        passthrough?: PostOpportunitiesPassthrough$.Outbound | undefined;
        meta?: PostOpportunitiesMeta$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesResponseBody> =
        z
            .object({
                status: z.string().optional(),
                statusCode: PostOpportunitiesStatusCode$.optional(),
                unified: z.lazy(() => PostOpportunitiesUnified$.outboundSchema).optional(),
                passthrough: z.lazy(() => PostOpportunitiesPassthrough$.outboundSchema).optional(),
                meta: z.lazy(() => PostOpportunitiesMeta$.outboundSchema).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.status === undefined ? null : { status: v.status }),
                    ...(v.statusCode === undefined ? null : { statusCode: v.statusCode }),
                    ...(v.unified === undefined ? null : { unified: v.unified }),
                    ...(v.passthrough === undefined ? null : { passthrough: v.passthrough }),
                    ...(v.meta === undefined ? null : { meta: v.meta }),
                };
            });
}

/** @internal */
export namespace PostOpportunitiesResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        object?: PostOpportunitiesResponseBody$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostOpportunitiesResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            object: z.lazy(() => PostOpportunitiesResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        object?: PostOpportunitiesResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostOpportunitiesResponse> = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            object: z.lazy(() => PostOpportunitiesResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });
}
