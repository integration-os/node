/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum PostTicketsStatus {
    Open = "open",
    Pending = "pending",
    Closed = "closed",
    OnHold = "onHold",
    Resolved = "resolved",
    Cancelled = "cancelled",
    InProgress = "inProgress",
}

export enum PostTicketsPriority {
    Low = "low",
    Medium = "medium",
    High = "high",
    Urgent = "urgent",
}

export enum PostTicketsType {
    Question = "question",
    Incident = "incident",
    Problem = "problem",
    Task = "task",
    Bug = "bug",
    FeatureRequest = "featureRequest",
}

export enum PostTicketsMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostTicketsProfilePicture = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostTicketsMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostTicketsCoverPhoto = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostTicketsTicketsMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsGender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export enum PostTicketsTicketsType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostTicketsGeoLocation = {};

export type PostTicketsCustomFields = {};

export type PostTicketsAddresses = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostTicketsTicketsType | undefined;
    geoLocation?: PostTicketsGeoLocation | undefined;
    customFields?: Array<PostTicketsCustomFields> | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostTicketsRoles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export enum PostTicketsCommunications {
    Email = "Email",
    Sms = "SMS",
    PushNotification = "PushNotification",
}

export type PostTicketsPreferences = {
    id?: string | undefined;
    language?: string | undefined;
    currency?: string | undefined;
    timeZone?: string | undefined;
    communications?: PostTicketsCommunications | undefined;
};

export enum PostTicketsTicketsRequestType {
    Facebook = "facebook",
    Twitter = "twitter",
    Linkedin = "linkedin",
    Instagram = "instagram",
    Tiktok = "tiktok",
    Pinterest = "pinterest",
    Youtube = "youtube",
    Other = "other",
}

export enum PostTicketsTicketsRequestRequestBodyType {
    String = "String",
    Number = "Number",
    Boolean = "Boolean",
    Date = "Date",
    Json = "Json",
    Array = "Array",
}

export type PostTicketsAdditionalInfo = {
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    type?: PostTicketsTicketsRequestRequestBodyType | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    entityId?: string | undefined;
    entityType?: string | undefined;
};

export type PostTicketsSocialLinks = {
    type?: PostTicketsTicketsRequestType | undefined;
    username?: string | undefined;
    displayName?: string | undefined;
    url?: string | undefined;
    avatarUrl?: string | undefined;
    email?: string | undefined;
    additionalInfo?: PostTicketsAdditionalInfo | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsStatus {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export enum PostTicketsProvider {
    Google = "Google",
    Facebook = "Facebook",
    Twitter = "Twitter",
    LinkedIn = "LinkedIn",
    Microsoft = "Microsoft",
    Apple = "Apple",
    Other = "Other",
}

export type PostTicketsSso = {
    provider?: PostTicketsProvider | undefined;
    providerUserId?: string | undefined;
    profileUrl?: string | undefined;
    accessToken?: string | undefined;
    refreshToken?: string | undefined;
    expiresIn?: number | undefined;
    expiryDate?: number | undefined;
    scopes?: Array<string> | undefined;
    tokenType?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsRequestRequestBodyAssigneeType {
    CreditCard = "CreditCard",
    PayPal = "PayPal",
    BankTransfer = "BankTransfer",
    CryptoCurrency = "CryptoCurrency",
}

export type PostTicketsPaymentMethods = {
    id?: string | undefined;
    type?: PostTicketsTicketsRequestRequestBodyAssigneeType | undefined;
    details?: string | undefined;
    isDefault?: boolean | undefined;
};

export type PostTicketsAssignee = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: PostTicketsProfilePicture | undefined;
    coverPhoto?: PostTicketsCoverPhoto | undefined;
    gender?: PostTicketsGender | undefined;
    dateOfBirth?: number | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: number | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    addresses?: Array<PostTicketsAddresses> | undefined;
    roles?: Array<PostTicketsRoles> | undefined;
    preferences?: PostTicketsPreferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialLinks?: PostTicketsSocialLinks | undefined;
    status?: PostTicketsTicketsStatus | undefined;
    sso?: Array<PostTicketsSso> | undefined;
    paymentMethods?: PostTicketsPaymentMethods | undefined;
};

export enum PostTicketsTicketsRequestRequestBodyReporterType {
    Personal = "personal",
    Business = "business",
    Other = "other",
}

export type PostTicketsEmails = {
    email?: string | undefined;
    type?: PostTicketsTicketsRequestRequestBodyReporterType | undefined;
};

export enum PostTicketsTicketsRequestRequestBodyReporterPhonesType {
    Personal = "personal",
    Business = "business",
    Other = "other",
}

export type PostTicketsPhones = {
    phone?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostTicketsTicketsRequestRequestBodyReporterPhonesType | undefined;
};

export enum PostTicketsTicketsRequestRequestBodyReporterAddressType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostTicketsTicketsGeoLocation = {
    latitude?: number | undefined;
    longitude?: number | undefined;
    altitude?: number | undefined;
    accuracy?: number | undefined;
    altitudeAccuracy?: number | undefined;
    heading?: number | undefined;
    speed?: number | undefined;
    timestamp?: number | undefined;
};

export enum PostTicketsFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostTicketsTicketsCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostTicketsFieldType | undefined;
};

export type PostTicketsAddress = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostTicketsTicketsRequestRequestBodyReporterAddressType | undefined;
    geoLocation?: PostTicketsTicketsGeoLocation | undefined;
    customFields?: Array<PostTicketsTicketsCustomFields> | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostTicketsTicketsRequestRequestBodyReporterAddressesType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostTicketsTicketsRequestGeoLocation = {};

export type PostTicketsTicketsRequestCustomFields = {};

export type PostTicketsTicketsAddresses = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostTicketsTicketsRequestRequestBodyReporterAddressesType | undefined;
    geoLocation?: PostTicketsTicketsRequestGeoLocation | undefined;
    customFields?: Array<PostTicketsTicketsRequestCustomFields> | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostTicketsTicketsPriority {
    Low = "low",
    Medium = "medium",
    High = "high",
}

export enum PostTicketsTicketsRequestMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostTicketsTicketsProfilePicture = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostTicketsTicketsRequestMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsRequestRequestBodyMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostTicketsTicketsCoverPhoto = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostTicketsTicketsRequestRequestBodyMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsGender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export enum PostTicketsTicketsRequestRequestBodyReporterNotesType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostTicketsTicketsRequestRequestBodyGeoLocation = {};

export type PostTicketsTicketsRequestRequestBodyCustomFields = {};

export type PostTicketsTicketsRequestAddresses = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostTicketsTicketsRequestRequestBodyReporterNotesType | undefined;
    geoLocation?: PostTicketsTicketsRequestRequestBodyGeoLocation | undefined;
    customFields?: Array<PostTicketsTicketsRequestRequestBodyCustomFields> | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostTicketsTicketsRoles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export enum PostTicketsTicketsCommunications {
    Email = "Email",
    Sms = "SMS",
    PushNotification = "PushNotification",
}

export type PostTicketsTicketsPreferences = {
    id?: string | undefined;
    language?: string | undefined;
    currency?: string | undefined;
    timeZone?: string | undefined;
    communications?: PostTicketsTicketsCommunications | undefined;
};

export enum PostTicketsTicketsRequestRequestBodyReporterNotesAuthorType {
    Facebook = "facebook",
    Twitter = "twitter",
    Linkedin = "linkedin",
    Instagram = "instagram",
    Tiktok = "tiktok",
    Pinterest = "pinterest",
    Youtube = "youtube",
    Other = "other",
}

export enum PostTicketsTicketsRequestRequestBodyReporterNotesAuthorSocialLinksType {
    String = "String",
    Number = "Number",
    Boolean = "Boolean",
    Date = "Date",
    Json = "Json",
    Array = "Array",
}

export type PostTicketsTicketsAdditionalInfo = {
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    type?: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorSocialLinksType | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    entityId?: string | undefined;
    entityType?: string | undefined;
};

export type PostTicketsTicketsSocialLinks = {
    type?: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorType | undefined;
    username?: string | undefined;
    displayName?: string | undefined;
    url?: string | undefined;
    avatarUrl?: string | undefined;
    email?: string | undefined;
    additionalInfo?: PostTicketsTicketsAdditionalInfo | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsRequestStatus {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export enum PostTicketsTicketsProvider {
    Google = "Google",
    Facebook = "Facebook",
    Twitter = "Twitter",
    LinkedIn = "LinkedIn",
    Microsoft = "Microsoft",
    Apple = "Apple",
    Other = "Other",
}

export type PostTicketsTicketsSso = {
    provider?: PostTicketsTicketsProvider | undefined;
    providerUserId?: string | undefined;
    profileUrl?: string | undefined;
    accessToken?: string | undefined;
    refreshToken?: string | undefined;
    expiresIn?: number | undefined;
    expiryDate?: number | undefined;
    scopes?: Array<string> | undefined;
    tokenType?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsRequestRequestBodyReporterNotesAuthorPaymentMethodsType {
    CreditCard = "CreditCard",
    PayPal = "PayPal",
    BankTransfer = "BankTransfer",
    CryptoCurrency = "CryptoCurrency",
}

export type PostTicketsTicketsPaymentMethods = {
    id?: string | undefined;
    type?: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorPaymentMethodsType | undefined;
    details?: string | undefined;
    isDefault?: boolean | undefined;
};

export type PostTicketsAuthor = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: PostTicketsTicketsProfilePicture | undefined;
    coverPhoto?: PostTicketsTicketsCoverPhoto | undefined;
    gender?: PostTicketsTicketsGender | undefined;
    dateOfBirth?: number | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: number | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    addresses?: Array<PostTicketsTicketsRequestAddresses> | undefined;
    roles?: Array<PostTicketsTicketsRoles> | undefined;
    preferences?: PostTicketsTicketsPreferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialLinks?: PostTicketsTicketsSocialLinks | undefined;
    status?: PostTicketsTicketsRequestStatus | undefined;
    sso?: Array<PostTicketsTicketsSso> | undefined;
    paymentMethods?: PostTicketsTicketsPaymentMethods | undefined;
};

export type PostTicketsMetadata = {};

export type PostTicketsAssociatedWith = {};

export type PostTicketsPermissions = {};

export type PostTicketsAttachments = {
    id?: string | undefined;
    fileName?: string | undefined;
    fileSize?: number | undefined;
    fileType?: string | undefined;
    url?: string | undefined;
    thumbnailUrl?: string | undefined;
    previewUrl?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    metadata?: PostTicketsMetadata | undefined;
    associatedWith?: PostTicketsAssociatedWith | undefined;
    permissions?: PostTicketsPermissions | undefined;
};

export type PostTicketsTicketsRequestProfilePicture = {};

export type PostTicketsTicketsRequestCoverPhoto = {};

export enum PostTicketsTicketsRequestGender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export type PostTicketsTicketsRequestRequestBodyAddresses = {};

export enum PostTicketsTicketsRequestRoles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export type PostTicketsTicketsRequestPreferences = {};

export type PostTicketsTicketsRequestSocialLinks = {};

export enum PostTicketsTicketsRequestRequestBodyStatus {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export type PostTicketsTicketsRequestSso = {};

export type PostTicketsTicketsRequestPaymentMethods = {};

export type PostTicketsSharedWith = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: PostTicketsTicketsRequestProfilePicture | undefined;
    coverPhoto?: PostTicketsTicketsRequestCoverPhoto | undefined;
    gender?: PostTicketsTicketsRequestGender | undefined;
    dateOfBirth?: number | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: number | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    addresses?: Array<PostTicketsTicketsRequestRequestBodyAddresses> | undefined;
    roles?: Array<PostTicketsTicketsRequestRoles> | undefined;
    preferences?: PostTicketsTicketsRequestPreferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialLinks?: PostTicketsTicketsRequestSocialLinks | undefined;
    status?: PostTicketsTicketsRequestRequestBodyStatus | undefined;
    sso?: Array<PostTicketsTicketsRequestSso> | undefined;
    paymentMethods?: PostTicketsTicketsRequestPaymentMethods | undefined;
};

export enum PostTicketsVisibility {
    Private = "private",
    Public = "public",
    Shared = "shared",
}

export enum PostTicketsTicketsRequestRequestBodyReporterStatus {
    Active = "active",
    Archived = "archived",
}

export type PostTicketsNotes = {
    id?: string | undefined;
    title?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    lastAccessed?: number | undefined;
    reminder?: number | undefined;
    color?: string | undefined;
    priority?: PostTicketsTicketsPriority | undefined;
    author?: PostTicketsAuthor | undefined;
    tags?: Array<string> | undefined;
    attachments?: Array<PostTicketsAttachments> | undefined;
    sharedWith?: Array<PostTicketsSharedWith> | undefined;
    visibility?: PostTicketsVisibility | undefined;
    status?: PostTicketsTicketsRequestRequestBodyReporterStatus | undefined;
    metadata?: Array<string> | undefined;
};

export enum PostTicketsTicketsRequestRequestBodyReporterSocialProfilesType {
    Facebook = "facebook",
    Twitter = "twitter",
    Linkedin = "linkedin",
    Instagram = "instagram",
    Tiktok = "tiktok",
    Pinterest = "pinterest",
    Youtube = "youtube",
    Other = "other",
}

export type PostTicketsTicketsRequestAdditionalInfo = {};

export type PostTicketsSocialProfiles = {
    type?: PostTicketsTicketsRequestRequestBodyReporterSocialProfilesType | undefined;
    username?: string | undefined;
    displayName?: string | undefined;
    url?: string | undefined;
    avatarUrl?: string | undefined;
    email?: string | undefined;
    additionalInfo?: PostTicketsTicketsRequestAdditionalInfo | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostTicketsTicketsRequestRequestBodyReporterCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostTicketsTicketsFieldType | undefined;
};

export type PostTicketsReporter = {
    id?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    leadId?: string | undefined;
    company?: string | undefined;
    defaultEmail?: string | undefined;
    emails?: Array<PostTicketsEmails> | undefined;
    defaultPhone?: string | undefined;
    phones?: Array<PostTicketsPhones> | undefined;
    address?: PostTicketsAddress | undefined;
    addresses?: Array<PostTicketsTicketsAddresses> | undefined;
    birthday?: number | undefined;
    relationship?: string | undefined;
    note?: string | undefined;
    notes?: PostTicketsNotes | undefined;
    tags?: Array<string> | undefined;
    websites?: Array<string> | undefined;
    socialProfiles?: Array<PostTicketsSocialProfiles> | undefined;
    isActive?: boolean | undefined;
    customFields?: Array<PostTicketsTicketsRequestRequestBodyReporterCustomFields> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
};

export type PostTicketsTicketsMetadata = {};

export type PostTicketsTicketsAssociatedWith = {};

export type PostTicketsTicketsPermissions = {};

export type PostTicketsTicketsAttachments = {
    id?: string | undefined;
    fileName?: string | undefined;
    fileSize?: number | undefined;
    fileType?: string | undefined;
    url?: string | undefined;
    thumbnailUrl?: string | undefined;
    previewUrl?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    metadata?: PostTicketsTicketsMetadata | undefined;
    associatedWith?: PostTicketsTicketsAssociatedWith | undefined;
    permissions?: PostTicketsTicketsPermissions | undefined;
};

export type PostTicketsTicketsAuthor = {};

export type PostTicketsTicketsRequestMetadata = {};

export type PostTicketsComments = {
    commentId?: string | undefined;
    author?: PostTicketsTicketsAuthor | undefined;
    text?: string | undefined;
    parentId?: string | undefined;
    likes?: number | undefined;
    flagged?: boolean | undefined;
    metadata?: Array<PostTicketsTicketsRequestMetadata> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsRequestPriority {
    Low = "low",
    Medium = "medium",
    High = "high",
}

export type PostTicketsTicketsRequestAuthor = {};

export type PostTicketsTicketsRequestAttachments = {};

export type PostTicketsTicketsSharedWith = {};

export enum PostTicketsTicketsVisibility {
    Private = "private",
    Public = "public",
    Shared = "shared",
}

export enum PostTicketsTicketsRequestRequestBodyNotesStatus {
    Active = "active",
    Archived = "archived",
}

export type PostTicketsTicketsNotes = {
    id?: string | undefined;
    title?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    lastAccessed?: number | undefined;
    reminder?: number | undefined;
    color?: string | undefined;
    priority?: PostTicketsTicketsRequestPriority | undefined;
    author?: PostTicketsTicketsRequestAuthor | undefined;
    tags?: Array<string> | undefined;
    attachments?: Array<PostTicketsTicketsRequestAttachments> | undefined;
    sharedWith?: Array<PostTicketsTicketsSharedWith> | undefined;
    visibility?: PostTicketsTicketsVisibility | undefined;
    status?: PostTicketsTicketsRequestRequestBodyNotesStatus | undefined;
    metadata?: Array<string> | undefined;
};

export enum PostTicketsTicketsRequestFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostTicketsTicketsRequestRequestBodyCustomFields1 = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostTicketsTicketsRequestFieldType | undefined;
};

export type PostTicketsRequestBody = {
    id?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    status?: PostTicketsStatus | undefined;
    priority?: PostTicketsPriority | undefined;
    type?: PostTicketsType | undefined;
    assignee?: PostTicketsAssignee | undefined;
    reporter?: PostTicketsReporter | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    dueDate?: number | undefined;
    attachments?: Array<PostTicketsTicketsAttachments> | undefined;
    comments?: Array<PostTicketsComments> | undefined;
    notes?: Array<PostTicketsTicketsNotes> | undefined;
    tags?: Array<string> | undefined;
    customFields?: Array<PostTicketsTicketsRequestRequestBodyCustomFields1> | undefined;
};

export type PostTicketsRequest = {
    /**
     * The unique identifier of a Connected Account
     */
    xIntegrationosConnectionKey: string;
    requestBody: PostTicketsRequestBody;
};

export enum PostTicketsStatusCode {
    TwoHundred = 200,
    FourHundred = 400,
    FiveHundred = 500,
}

export enum PostTicketsTicketsResponseStatus {
    Open = "open",
    Pending = "pending",
    Closed = "closed",
    OnHold = "onHold",
    Resolved = "resolved",
    Cancelled = "cancelled",
    InProgress = "inProgress",
}

export enum PostTicketsTicketsResponsePriority {
    Low = "low",
    Medium = "medium",
    High = "high",
    Urgent = "urgent",
}

export enum PostTicketsTicketsResponseType {
    Question = "question",
    Incident = "incident",
    Problem = "problem",
    Task = "task",
    Bug = "bug",
    FeatureRequest = "featureRequest",
}

export enum PostTicketsTicketsResponseMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostTicketsTicketsResponseProfilePicture = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostTicketsTicketsResponseMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsResponse200MimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostTicketsTicketsResponseCoverPhoto = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostTicketsTicketsResponse200MimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsResponseGender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export enum PostTicketsTicketsResponse200Type {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostTicketsTicketsResponseGeoLocation = {};

export type PostTicketsTicketsResponse200ApplicationJSONResponseBodyCustomFields = {};

export type PostTicketsTicketsResponseAddresses = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostTicketsTicketsResponse200Type | undefined;
    geoLocation?: PostTicketsTicketsResponseGeoLocation | undefined;
    customFields?:
        | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyCustomFields>
        | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostTicketsTicketsResponseRoles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export enum PostTicketsTicketsResponseCommunications {
    Email = "Email",
    Sms = "SMS",
    PushNotification = "PushNotification",
}

export type PostTicketsTicketsResponsePreferences = {
    id?: string | undefined;
    language?: string | undefined;
    currency?: string | undefined;
    timeZone?: string | undefined;
    communications?: PostTicketsTicketsResponseCommunications | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONType {
    Facebook = "facebook",
    Twitter = "twitter",
    Linkedin = "linkedin",
    Instagram = "instagram",
    Tiktok = "tiktok",
    Pinterest = "pinterest",
    Youtube = "youtube",
    Other = "other",
}

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType {
    String = "String",
    Number = "Number",
    Boolean = "Boolean",
    Date = "Date",
    Json = "Json",
    Array = "Array",
}

export type PostTicketsTicketsResponseAdditionalInfo = {
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    type?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    entityId?: string | undefined;
    entityType?: string | undefined;
};

export type PostTicketsTicketsResponseSocialLinks = {
    type?: PostTicketsTicketsResponse200ApplicationJSONType | undefined;
    username?: string | undefined;
    displayName?: string | undefined;
    url?: string | undefined;
    avatarUrl?: string | undefined;
    email?: string | undefined;
    additionalInfo?: PostTicketsTicketsResponseAdditionalInfo | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsResponse200Status {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export enum PostTicketsTicketsResponseProvider {
    Google = "Google",
    Facebook = "Facebook",
    Twitter = "Twitter",
    LinkedIn = "LinkedIn",
    Microsoft = "Microsoft",
    Apple = "Apple",
    Other = "Other",
}

export type PostTicketsTicketsResponseSso = {
    provider?: PostTicketsTicketsResponseProvider | undefined;
    providerUserId?: string | undefined;
    profileUrl?: string | undefined;
    accessToken?: string | undefined;
    refreshToken?: string | undefined;
    expiresIn?: number | undefined;
    expiryDate?: number | undefined;
    scopes?: Array<string> | undefined;
    tokenType?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyType {
    CreditCard = "CreditCard",
    PayPal = "PayPal",
    BankTransfer = "BankTransfer",
    CryptoCurrency = "CryptoCurrency",
}

export type PostTicketsTicketsResponsePaymentMethods = {
    id?: string | undefined;
    type?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyType | undefined;
    details?: string | undefined;
    isDefault?: boolean | undefined;
};

export type PostTicketsTicketsAssignee = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: PostTicketsTicketsResponseProfilePicture | undefined;
    coverPhoto?: PostTicketsTicketsResponseCoverPhoto | undefined;
    gender?: PostTicketsTicketsResponseGender | undefined;
    dateOfBirth?: number | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: number | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    addresses?: Array<PostTicketsTicketsResponseAddresses> | undefined;
    roles?: Array<PostTicketsTicketsResponseRoles> | undefined;
    preferences?: PostTicketsTicketsResponsePreferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialLinks?: PostTicketsTicketsResponseSocialLinks | undefined;
    status?: PostTicketsTicketsResponse200Status | undefined;
    sso?: Array<PostTicketsTicketsResponseSso> | undefined;
    paymentMethods?: PostTicketsTicketsResponsePaymentMethods | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedType {
    Personal = "personal",
    Business = "business",
    Other = "other",
}

export type PostTicketsTicketsEmails = {
    email?: string | undefined;
    type?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedType | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType {
    Personal = "personal",
    Business = "business",
    Other = "other",
}

export type PostTicketsTicketsPhones = {
    phone?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostTicketsTicketsResponse200GeoLocation = {
    latitude?: number | undefined;
    longitude?: number | undefined;
    altitude?: number | undefined;
    accuracy?: number | undefined;
    altitudeAccuracy?: number | undefined;
    heading?: number | undefined;
    speed?: number | undefined;
    timestamp?: number | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostTicketsTicketsResponse200ApplicationJSONFieldType | undefined;
};

export type PostTicketsTicketsAddress = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?:
        | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressType
        | undefined;
    geoLocation?: PostTicketsTicketsResponse200GeoLocation | undefined;
    customFields?:
        | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedCustomFields>
        | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressesType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostTicketsTicketsResponse200ApplicationJSONGeoLocation = {};

export type PostTicketsTicketsResponse200ApplicationJSONCustomFields = {};

export type PostTicketsTicketsResponse200Addresses = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?:
        | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressesType
        | undefined;
    geoLocation?: PostTicketsTicketsResponse200ApplicationJSONGeoLocation | undefined;
    customFields?: Array<PostTicketsTicketsResponse200ApplicationJSONCustomFields> | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONPriority {
    Low = "low",
    Medium = "medium",
    High = "high",
}

export enum PostTicketsTicketsResponse200ApplicationJSONMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostTicketsTicketsResponse200ProfilePicture = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostTicketsTicketsResponse200ApplicationJSONMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyMimeType {
    ImageJpeg = "image/jpeg",
    ImagePng = "image/png",
    ImageGif = "image/gif",
    ImageSvgPlusXml = "image/svg+xml",
    ImageWebp = "image/webp",
}

export type PostTicketsTicketsResponse200CoverPhoto = {
    id?: string | undefined;
    src?: string | undefined;
    altText?: string | undefined;
    width?: number | undefined;
    height?: number | undefined;
    thumbnailSrc?: string | undefined;
    caption?: string | undefined;
    title?: string | undefined;
    mimeType?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyMimeType | undefined;
    tags?: Array<string> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsResponse200Gender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType {
    Home = "home",
    Work = "work",
    Other = "other",
}

export type PostTicketsTicketsResponse200ApplicationJSONResponseBodyGeoLocation = {};

export type PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterCustomFields =
    {};

export type PostTicketsTicketsResponse200ApplicationJSONAddresses = {
    id?: string | undefined;
    contactId?: string | undefined;
    accountId?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    name?: string | undefined;
    companyName?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    street?: string | undefined;
    addressLine2?: string | undefined;
    city?: string | undefined;
    province?: string | undefined;
    region?: string | undefined;
    postalCode?: string | undefined;
    postalCodeExtension?: string | undefined;
    country?: string | undefined;
    countryCode?: string | undefined;
    type?:
        | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType
        | undefined;
    geoLocation?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyGeoLocation | undefined;
    customFields?:
        | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterCustomFields>
        | undefined;
    subdivisionCode?: string | undefined;
};

export enum PostTicketsTicketsResponse200Roles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export enum PostTicketsTicketsResponse200Communications {
    Email = "Email",
    Sms = "SMS",
    PushNotification = "PushNotification",
}

export type PostTicketsTicketsResponse200Preferences = {
    id?: string | undefined;
    language?: string | undefined;
    currency?: string | undefined;
    timeZone?: string | undefined;
    communications?: PostTicketsTicketsResponse200Communications | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType {
    Facebook = "facebook",
    Twitter = "twitter",
    Linkedin = "linkedin",
    Instagram = "instagram",
    Tiktok = "tiktok",
    Pinterest = "pinterest",
    Youtube = "youtube",
    Other = "other",
}

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType {
    String = "String",
    Number = "Number",
    Boolean = "Boolean",
    Date = "Date",
    Json = "Json",
    Array = "Array",
}

export type PostTicketsTicketsResponse200ApplicationJSONAdditionalInfo = {
    id?: string | undefined;
    key?: string | undefined;
    value?: string | undefined;
    type?:
        | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType
        | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    entityId?: string | undefined;
    entityType?: string | undefined;
};

export type PostTicketsTicketsResponse200SocialLinks = {
    type?:
        | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType
        | undefined;
    username?: string | undefined;
    displayName?: string | undefined;
    url?: string | undefined;
    avatarUrl?: string | undefined;
    email?: string | undefined;
    additionalInfo?: PostTicketsTicketsResponse200ApplicationJSONAdditionalInfo | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedStatus {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export enum PostTicketsTicketsResponse200Provider {
    Google = "Google",
    Facebook = "Facebook",
    Twitter = "Twitter",
    LinkedIn = "LinkedIn",
    Microsoft = "Microsoft",
    Apple = "Apple",
    Other = "Other",
}

export type PostTicketsTicketsResponse200Sso = {
    provider?: PostTicketsTicketsResponse200Provider | undefined;
    providerUserId?: string | undefined;
    profileUrl?: string | undefined;
    accessToken?: string | undefined;
    refreshToken?: string | undefined;
    expiresIn?: number | undefined;
    expiryDate?: number | undefined;
    scopes?: Array<string> | undefined;
    tokenType?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType {
    CreditCard = "CreditCard",
    PayPal = "PayPal",
    BankTransfer = "BankTransfer",
    CryptoCurrency = "CryptoCurrency",
}

export type PostTicketsTicketsResponse200PaymentMethods = {
    id?: string | undefined;
    type?:
        | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType
        | undefined;
    details?: string | undefined;
    isDefault?: boolean | undefined;
};

export type PostTicketsTicketsResponse200ApplicationJSONAuthor = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: PostTicketsTicketsResponse200ProfilePicture | undefined;
    coverPhoto?: PostTicketsTicketsResponse200CoverPhoto | undefined;
    gender?: PostTicketsTicketsResponse200Gender | undefined;
    dateOfBirth?: number | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: number | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    addresses?: Array<PostTicketsTicketsResponse200ApplicationJSONAddresses> | undefined;
    roles?: Array<PostTicketsTicketsResponse200Roles> | undefined;
    preferences?: PostTicketsTicketsResponse200Preferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialLinks?: PostTicketsTicketsResponse200SocialLinks | undefined;
    status?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedStatus | undefined;
    sso?: Array<PostTicketsTicketsResponse200Sso> | undefined;
    paymentMethods?: PostTicketsTicketsResponse200PaymentMethods | undefined;
};

export type PostTicketsTicketsResponse200ApplicationJSONMetadata = {};

export type PostTicketsTicketsResponse200AssociatedWith = {};

export type PostTicketsTicketsResponse200Permissions = {};

export type PostTicketsTicketsResponse200ApplicationJSONAttachments = {
    id?: string | undefined;
    fileName?: string | undefined;
    fileSize?: number | undefined;
    fileType?: string | undefined;
    url?: string | undefined;
    thumbnailUrl?: string | undefined;
    previewUrl?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    metadata?: PostTicketsTicketsResponse200ApplicationJSONMetadata | undefined;
    associatedWith?: PostTicketsTicketsResponse200AssociatedWith | undefined;
    permissions?: PostTicketsTicketsResponse200Permissions | undefined;
};

export type PostTicketsTicketsResponse200ApplicationJSONProfilePicture = {};

export type PostTicketsTicketsResponse200ApplicationJSONCoverPhoto = {};

export enum PostTicketsTicketsResponse200ApplicationJSONGender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export type PostTicketsTicketsResponse200ApplicationJSONResponseBodyAddresses = {};

export enum PostTicketsTicketsResponse200ApplicationJSONRoles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export type PostTicketsTicketsResponse200ApplicationJSONPreferences = {};

export type PostTicketsTicketsResponse200ApplicationJSONSocialLinks = {};

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterStatus {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export type PostTicketsTicketsResponse200ApplicationJSONSso = {};

export type PostTicketsTicketsResponse200ApplicationJSONPaymentMethods = {};

export type PostTicketsTicketsResponse200SharedWith = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: PostTicketsTicketsResponse200ApplicationJSONProfilePicture | undefined;
    coverPhoto?: PostTicketsTicketsResponse200ApplicationJSONCoverPhoto | undefined;
    gender?: PostTicketsTicketsResponse200ApplicationJSONGender | undefined;
    dateOfBirth?: number | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: number | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    addresses?:
        | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyAddresses>
        | undefined;
    roles?: Array<PostTicketsTicketsResponse200ApplicationJSONRoles> | undefined;
    preferences?: PostTicketsTicketsResponse200ApplicationJSONPreferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialLinks?: PostTicketsTicketsResponse200ApplicationJSONSocialLinks | undefined;
    status?:
        | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterStatus
        | undefined;
    sso?: Array<PostTicketsTicketsResponse200ApplicationJSONSso> | undefined;
    paymentMethods?: PostTicketsTicketsResponse200ApplicationJSONPaymentMethods | undefined;
};

export enum PostTicketsTicketsResponse200Visibility {
    Private = "private",
    Public = "public",
    Shared = "shared",
}

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyStatus {
    Active = "active",
    Archived = "archived",
}

export type PostTicketsTicketsResponse200Notes = {
    id?: string | undefined;
    title?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    lastAccessed?: number | undefined;
    reminder?: number | undefined;
    color?: string | undefined;
    priority?: PostTicketsTicketsResponse200ApplicationJSONPriority | undefined;
    author?: PostTicketsTicketsResponse200ApplicationJSONAuthor | undefined;
    tags?: Array<string> | undefined;
    attachments?: Array<PostTicketsTicketsResponse200ApplicationJSONAttachments> | undefined;
    sharedWith?: Array<PostTicketsTicketsResponse200SharedWith> | undefined;
    visibility?: PostTicketsTicketsResponse200Visibility | undefined;
    status?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyStatus | undefined;
    metadata?: Array<string> | undefined;
};

export enum PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType {
    Facebook = "facebook",
    Twitter = "twitter",
    Linkedin = "linkedin",
    Instagram = "instagram",
    Tiktok = "tiktok",
    Pinterest = "pinterest",
    Youtube = "youtube",
    Other = "other",
}

export type PostTicketsTicketsResponse200AdditionalInfo = {};

export type PostTicketsTicketsSocialProfiles = {
    type?:
        | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType
        | undefined;
    username?: string | undefined;
    displayName?: string | undefined;
    url?: string | undefined;
    avatarUrl?: string | undefined;
    email?: string | undefined;
    additionalInfo?: PostTicketsTicketsResponse200AdditionalInfo | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsResponse200FieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostTicketsTicketsResponse200CustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostTicketsTicketsResponse200FieldType | undefined;
};

export type PostTicketsTicketsReporter = {
    id?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    leadId?: string | undefined;
    company?: string | undefined;
    defaultEmail?: string | undefined;
    emails?: Array<PostTicketsTicketsEmails> | undefined;
    defaultPhone?: string | undefined;
    phones?: Array<PostTicketsTicketsPhones> | undefined;
    address?: PostTicketsTicketsAddress | undefined;
    addresses?: Array<PostTicketsTicketsResponse200Addresses> | undefined;
    birthday?: number | undefined;
    relationship?: string | undefined;
    note?: string | undefined;
    notes?: PostTicketsTicketsResponse200Notes | undefined;
    tags?: Array<string> | undefined;
    websites?: Array<string> | undefined;
    socialProfiles?: Array<PostTicketsTicketsSocialProfiles> | undefined;
    isActive?: boolean | undefined;
    customFields?: Array<PostTicketsTicketsResponse200CustomFields> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
};

export type PostTicketsTicketsResponseMetadata = {};

export type PostTicketsTicketsResponseAssociatedWith = {};

export type PostTicketsTicketsResponsePermissions = {};

export type PostTicketsTicketsResponseAttachments = {
    id?: string | undefined;
    fileName?: string | undefined;
    fileSize?: number | undefined;
    fileType?: string | undefined;
    url?: string | undefined;
    thumbnailUrl?: string | undefined;
    previewUrl?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    metadata?: PostTicketsTicketsResponseMetadata | undefined;
    associatedWith?: PostTicketsTicketsResponseAssociatedWith | undefined;
    permissions?: PostTicketsTicketsResponsePermissions | undefined;
};

export type PostTicketsTicketsResponseAuthor = {};

export type PostTicketsTicketsResponse200Metadata = {};

export type PostTicketsTicketsComments = {
    commentId?: string | undefined;
    author?: PostTicketsTicketsResponseAuthor | undefined;
    text?: string | undefined;
    parentId?: string | undefined;
    likes?: number | undefined;
    flagged?: boolean | undefined;
    metadata?: Array<PostTicketsTicketsResponse200Metadata> | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

export enum PostTicketsTicketsResponse200Priority {
    Low = "low",
    Medium = "medium",
    High = "high",
}

export type PostTicketsTicketsResponse200Author = {};

export type PostTicketsTicketsResponse200Attachments = {};

export type PostTicketsTicketsResponseSharedWith = {};

export enum PostTicketsTicketsResponseVisibility {
    Private = "private",
    Public = "public",
    Shared = "shared",
}

export enum PostTicketsTicketsResponse200ApplicationJSONStatus {
    Active = "active",
    Archived = "archived",
}

export type PostTicketsTicketsResponseNotes = {
    id?: string | undefined;
    title?: string | undefined;
    content?: string | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    lastAccessed?: number | undefined;
    reminder?: number | undefined;
    color?: string | undefined;
    priority?: PostTicketsTicketsResponse200Priority | undefined;
    author?: PostTicketsTicketsResponse200Author | undefined;
    tags?: Array<string> | undefined;
    attachments?: Array<PostTicketsTicketsResponse200Attachments> | undefined;
    sharedWith?: Array<PostTicketsTicketsResponseSharedWith> | undefined;
    visibility?: PostTicketsTicketsResponseVisibility | undefined;
    status?: PostTicketsTicketsResponse200ApplicationJSONStatus | undefined;
    metadata?: Array<string> | undefined;
};

export enum PostTicketsTicketsResponseFieldType {
    Text = "text",
    Number = "number",
    Date = "date",
    Boolean = "boolean",
    Enum = "enum",
    Json = "json",
    Array = "array",
}

export type PostTicketsTicketsResponseCustomFields = {
    id?: string | undefined;
    fieldName?: string | undefined;
    fieldValue?: string | undefined;
    fieldType?: PostTicketsTicketsResponseFieldType | undefined;
};

export type PostTicketsUnified = {
    id?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    status?: PostTicketsTicketsResponseStatus | undefined;
    priority?: PostTicketsTicketsResponsePriority | undefined;
    type?: PostTicketsTicketsResponseType | undefined;
    assignee?: PostTicketsTicketsAssignee | undefined;
    reporter?: PostTicketsTicketsReporter | undefined;
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    dueDate?: number | undefined;
    attachments?: Array<PostTicketsTicketsResponseAttachments> | undefined;
    comments?: Array<PostTicketsTicketsComments> | undefined;
    notes?: Array<PostTicketsTicketsResponseNotes> | undefined;
    tags?: Array<string> | undefined;
    customFields?: Array<PostTicketsTicketsResponseCustomFields> | undefined;
};

export type PostTicketsPassthrough = {};

export type PostTicketsCache = {
    hit?: boolean | undefined;
    ttl?: number | undefined;
    key?: string | undefined;
};

export type PostTicketsMeta = {
    timestamp?: number | undefined;
    latency?: number | undefined;
    platformRateLimitRemaining?: number | undefined;
    rateLimitRemaining?: number | undefined;
    cache?: PostTicketsCache | undefined;
    transactionKey?: string | undefined;
    txn?: string | undefined;
    platform?: string | undefined;
    platformVersion?: string | undefined;
    connectionDefinitionKey?: string | undefined;
    action?: string | undefined;
    commonModel?: string | undefined;
    commonModelVersion?: string | undefined;
    connectionKey?: string | undefined;
    hash?: string | undefined;
    heartbeats?: Array<string> | undefined;
    totalTransactions?: number | undefined;
};

/**
 * Successful response
 */
export type PostTicketsResponseBody = {
    status?: string | undefined;
    statusCode?: PostTicketsStatusCode | undefined;
    unified?: PostTicketsUnified | undefined;
    passthrough?: PostTicketsPassthrough | undefined;
    meta?: PostTicketsMeta | undefined;
};

export type PostTicketsResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
    /**
     * Successful response
     */
    object?: PostTicketsResponseBody | undefined;
};

/** @internal */
export const PostTicketsStatus$ = z.nativeEnum(PostTicketsStatus);

/** @internal */
export const PostTicketsPriority$ = z.nativeEnum(PostTicketsPriority);

/** @internal */
export const PostTicketsType$ = z.nativeEnum(PostTicketsType);

/** @internal */
export const PostTicketsMimeType$ = z.nativeEnum(PostTicketsMimeType);

/** @internal */
export namespace PostTicketsProfilePicture$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsProfilePicture, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsProfilePicture> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsMimeType$ = z.nativeEnum(PostTicketsTicketsMimeType);

/** @internal */
export namespace PostTicketsCoverPhoto$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsCoverPhoto, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsCoverPhoto> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsGender$ = z.nativeEnum(PostTicketsGender);

/** @internal */
export const PostTicketsTicketsType$ = z.nativeEnum(PostTicketsTicketsType);

/** @internal */
export namespace PostTicketsGeoLocation$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsGeoLocation, z.ZodTypeDef, Inbound> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsGeoLocation> =
        z.object({});
}

/** @internal */
export namespace PostTicketsCustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsCustomFields, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsCustomFields> =
        z.object({});
}

/** @internal */
export namespace PostTicketsAddresses$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsType | undefined;
        geoLocation?: PostTicketsGeoLocation$.Inbound | undefined;
        customFields?: Array<PostTicketsCustomFields$.Inbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsAddresses, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsType$.optional(),
            geoLocation: z.lazy(() => PostTicketsGeoLocation$.inboundSchema).optional(),
            customFields: z.array(z.lazy(() => PostTicketsCustomFields$.inboundSchema)).optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsType | undefined;
        geoLocation?: PostTicketsGeoLocation$.Outbound | undefined;
        customFields?: Array<PostTicketsCustomFields$.Outbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsAddresses> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsType$.optional(),
            geoLocation: z.lazy(() => PostTicketsGeoLocation$.outboundSchema).optional(),
            customFields: z.array(z.lazy(() => PostTicketsCustomFields$.outboundSchema)).optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostTicketsRoles$ = z.nativeEnum(PostTicketsRoles);

/** @internal */
export const PostTicketsCommunications$ = z.nativeEnum(PostTicketsCommunications);

/** @internal */
export namespace PostTicketsPreferences$ {
    export type Inbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostTicketsCommunications | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsPreferences, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: PostTicketsCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostTicketsCommunications | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsPreferences> = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: PostTicketsCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRequestType$ = z.nativeEnum(PostTicketsTicketsRequestType);

/** @internal */
export const PostTicketsTicketsRequestRequestBodyType$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyType
);

/** @internal */
export namespace PostTicketsAdditionalInfo$ {
    export type Inbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyType | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsAdditionalInfo, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyType | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsAdditionalInfo> = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });
}

/** @internal */
export namespace PostTicketsSocialLinks$ {
    export type Inbound = {
        type?: PostTicketsTicketsRequestType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostTicketsAdditionalInfo$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsSocialLinks, z.ZodTypeDef, Inbound> = z
        .object({
            type: PostTicketsTicketsRequestType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z.lazy(() => PostTicketsAdditionalInfo$.inboundSchema).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        type?: PostTicketsTicketsRequestType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostTicketsAdditionalInfo$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsSocialLinks> = z
        .object({
            type: PostTicketsTicketsRequestType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z.lazy(() => PostTicketsAdditionalInfo$.outboundSchema).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsStatus$ = z.nativeEnum(PostTicketsTicketsStatus);

/** @internal */
export const PostTicketsProvider$ = z.nativeEnum(PostTicketsProvider);

/** @internal */
export namespace PostTicketsSso$ {
    export type Inbound = {
        provider?: PostTicketsProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsSso, z.ZodTypeDef, Inbound> = z
        .object({
            provider: PostTicketsProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        provider?: PostTicketsProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsSso> = z
        .object({
            provider: PostTicketsProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRequestRequestBodyAssigneeType$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyAssigneeType
);

/** @internal */
export namespace PostTicketsPaymentMethods$ {
    export type Inbound = {
        id?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyAssigneeType | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsPaymentMethods, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyAssigneeType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyAssigneeType | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsPaymentMethods> = z
        .object({
            id: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyAssigneeType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });
}

/** @internal */
export namespace PostTicketsAssignee$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostTicketsProfilePicture$.Inbound | undefined;
        coverPhoto?: PostTicketsCoverPhoto$.Inbound | undefined;
        gender?: PostTicketsGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostTicketsAddresses$.Inbound> | undefined;
        roles?: Array<PostTicketsRoles> | undefined;
        preferences?: PostTicketsPreferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsSocialLinks$.Inbound | undefined;
        status?: PostTicketsTicketsStatus | undefined;
        sso?: Array<PostTicketsSso$.Inbound> | undefined;
        paymentMethods?: PostTicketsPaymentMethods$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsAssignee, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z.lazy(() => PostTicketsProfilePicture$.inboundSchema).optional(),
            coverPhoto: z.lazy(() => PostTicketsCoverPhoto$.inboundSchema).optional(),
            gender: PostTicketsGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z.array(z.lazy(() => PostTicketsAddresses$.inboundSchema)).optional(),
            roles: z.array(PostTicketsRoles$).optional(),
            preferences: z.lazy(() => PostTicketsPreferences$.inboundSchema).optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z.lazy(() => PostTicketsSocialLinks$.inboundSchema).optional(),
            status: PostTicketsTicketsStatus$.optional(),
            sso: z.array(z.lazy(() => PostTicketsSso$.inboundSchema)).optional(),
            paymentMethods: z.lazy(() => PostTicketsPaymentMethods$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostTicketsProfilePicture$.Outbound | undefined;
        coverPhoto?: PostTicketsCoverPhoto$.Outbound | undefined;
        gender?: PostTicketsGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostTicketsAddresses$.Outbound> | undefined;
        roles?: Array<PostTicketsRoles> | undefined;
        preferences?: PostTicketsPreferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsSocialLinks$.Outbound | undefined;
        status?: PostTicketsTicketsStatus | undefined;
        sso?: Array<PostTicketsSso$.Outbound> | undefined;
        paymentMethods?: PostTicketsPaymentMethods$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsAssignee> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z.lazy(() => PostTicketsProfilePicture$.outboundSchema).optional(),
            coverPhoto: z.lazy(() => PostTicketsCoverPhoto$.outboundSchema).optional(),
            gender: PostTicketsGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z.array(z.lazy(() => PostTicketsAddresses$.outboundSchema)).optional(),
            roles: z.array(PostTicketsRoles$).optional(),
            preferences: z.lazy(() => PostTicketsPreferences$.outboundSchema).optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z.lazy(() => PostTicketsSocialLinks$.outboundSchema).optional(),
            status: PostTicketsTicketsStatus$.optional(),
            sso: z.array(z.lazy(() => PostTicketsSso$.outboundSchema)).optional(),
            paymentMethods: z.lazy(() => PostTicketsPaymentMethods$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRequestRequestBodyReporterType$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyReporterType
);

/** @internal */
export namespace PostTicketsEmails$ {
    export type Inbound = {
        email?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterType | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsEmails, z.ZodTypeDef, Inbound> = z
        .object({
            email: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        email?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterType | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsEmails> = z
        .object({
            email: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRequestRequestBodyReporterPhonesType$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyReporterPhonesType
);

/** @internal */
export namespace PostTicketsPhones$ {
    export type Inbound = {
        phone?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterPhonesType | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsPhones, z.ZodTypeDef, Inbound> = z
        .object({
            phone: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterPhonesType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        phone?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterPhonesType | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsPhones> = z
        .object({
            phone: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterPhonesType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRequestRequestBodyReporterAddressType$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyReporterAddressType
);

/** @internal */
export namespace PostTicketsTicketsGeoLocation$ {
    export type Inbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsGeoLocation, z.ZodTypeDef, Inbound> = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });

    export type Outbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsGeoLocation> =
        z
            .object({
                latitude: z.number().optional(),
                longitude: z.number().optional(),
                altitude: z.number().optional(),
                accuracy: z.number().optional(),
                altitudeAccuracy: z.number().optional(),
                heading: z.number().optional(),
                speed: z.number().optional(),
                timestamp: z.number().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                    ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                    ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                    ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                    ...(v.altitudeAccuracy === undefined
                        ? null
                        : { altitudeAccuracy: v.altitudeAccuracy }),
                    ...(v.heading === undefined ? null : { heading: v.heading }),
                    ...(v.speed === undefined ? null : { speed: v.speed }),
                    ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
                };
            });
}

/** @internal */
export const PostTicketsFieldType$ = z.nativeEnum(PostTicketsFieldType);

/** @internal */
export namespace PostTicketsTicketsCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsCustomFields, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostTicketsFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsCustomFields> =
        z
            .object({
                id: z.string().optional(),
                fieldName: z.string().optional(),
                fieldValue: z.string().optional(),
                fieldType: PostTicketsFieldType$.optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                    ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                    ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
                };
            });
}

/** @internal */
export namespace PostTicketsAddress$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterAddressType | undefined;
        geoLocation?: PostTicketsTicketsGeoLocation$.Inbound | undefined;
        customFields?: Array<PostTicketsTicketsCustomFields$.Inbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsAddress, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterAddressType$.optional(),
            geoLocation: z.lazy(() => PostTicketsTicketsGeoLocation$.inboundSchema).optional(),
            customFields: z
                .array(z.lazy(() => PostTicketsTicketsCustomFields$.inboundSchema))
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterAddressType | undefined;
        geoLocation?: PostTicketsTicketsGeoLocation$.Outbound | undefined;
        customFields?: Array<PostTicketsTicketsCustomFields$.Outbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsAddress> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterAddressType$.optional(),
            geoLocation: z.lazy(() => PostTicketsTicketsGeoLocation$.outboundSchema).optional(),
            customFields: z
                .array(z.lazy(() => PostTicketsTicketsCustomFields$.outboundSchema))
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRequestRequestBodyReporterAddressesType$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyReporterAddressesType
);

/** @internal */
export namespace PostTicketsTicketsRequestGeoLocation$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestGeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestGeoLocation
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsRequestCustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestCustomFields
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsAddresses$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterAddressesType | undefined;
        geoLocation?: PostTicketsTicketsRequestGeoLocation$.Inbound | undefined;
        customFields?: Array<PostTicketsTicketsRequestCustomFields$.Inbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsAddresses, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterAddressesType$.optional(),
            geoLocation: z
                .lazy(() => PostTicketsTicketsRequestGeoLocation$.inboundSchema)
                .optional(),
            customFields: z
                .array(z.lazy(() => PostTicketsTicketsRequestCustomFields$.inboundSchema))
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterAddressesType | undefined;
        geoLocation?: PostTicketsTicketsRequestGeoLocation$.Outbound | undefined;
        customFields?: Array<PostTicketsTicketsRequestCustomFields$.Outbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsAddresses> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterAddressesType$.optional(),
            geoLocation: z
                .lazy(() => PostTicketsTicketsRequestGeoLocation$.outboundSchema)
                .optional(),
            customFields: z
                .array(z.lazy(() => PostTicketsTicketsRequestCustomFields$.outboundSchema))
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsPriority$ = z.nativeEnum(PostTicketsTicketsPriority);

/** @internal */
export const PostTicketsTicketsRequestMimeType$ = z.nativeEnum(PostTicketsTicketsRequestMimeType);

/** @internal */
export namespace PostTicketsTicketsProfilePicture$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsRequestMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsProfilePicture, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.string().optional(),
                src: z.string().optional(),
                altText: z.string().optional(),
                width: z.number().optional(),
                height: z.number().optional(),
                thumbnailSrc: z.string().optional(),
                caption: z.string().optional(),
                title: z.string().optional(),
                mimeType: PostTicketsTicketsRequestMimeType$.optional(),
                tags: z.array(z.string()).optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                active: z.boolean().optional(),
                deleted: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.src === undefined ? null : { src: v.src }),
                    ...(v.altText === undefined ? null : { altText: v.altText }),
                    ...(v.width === undefined ? null : { width: v.width }),
                    ...(v.height === undefined ? null : { height: v.height }),
                    ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                    ...(v.caption === undefined ? null : { caption: v.caption }),
                    ...(v.title === undefined ? null : { title: v.title }),
                    ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                    ...(v.tags === undefined ? null : { tags: v.tags }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.active === undefined ? null : { active: v.active }),
                    ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                };
            });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsRequestMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsProfilePicture
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsRequestMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRequestRequestBodyMimeType$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyMimeType
);

/** @internal */
export namespace PostTicketsTicketsCoverPhoto$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsRequestRequestBodyMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsCoverPhoto, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsRequestRequestBodyMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsRequestRequestBodyMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsCoverPhoto> = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsRequestRequestBodyMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsGender$ = z.nativeEnum(PostTicketsTicketsGender);

/** @internal */
export const PostTicketsTicketsRequestRequestBodyReporterNotesType$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyReporterNotesType
);

/** @internal */
export namespace PostTicketsTicketsRequestRequestBodyGeoLocation$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestRequestBodyGeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestRequestBodyGeoLocation
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsRequestRequestBodyCustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestRequestBodyCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestRequestBodyCustomFields
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsRequestAddresses$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterNotesType | undefined;
        geoLocation?: PostTicketsTicketsRequestRequestBodyGeoLocation$.Inbound | undefined;
        customFields?: Array<PostTicketsTicketsRequestRequestBodyCustomFields$.Inbound> | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestAddresses,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterNotesType$.optional(),
            geoLocation: z
                .lazy(() => PostTicketsTicketsRequestRequestBodyGeoLocation$.inboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(() => PostTicketsTicketsRequestRequestBodyCustomFields$.inboundSchema)
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterNotesType | undefined;
        geoLocation?: PostTicketsTicketsRequestRequestBodyGeoLocation$.Outbound | undefined;
        customFields?:
            | Array<PostTicketsTicketsRequestRequestBodyCustomFields$.Outbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestAddresses
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterNotesType$.optional(),
            geoLocation: z
                .lazy(() => PostTicketsTicketsRequestRequestBodyGeoLocation$.outboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(() => PostTicketsTicketsRequestRequestBodyCustomFields$.outboundSchema)
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRoles$ = z.nativeEnum(PostTicketsTicketsRoles);

/** @internal */
export const PostTicketsTicketsCommunications$ = z.nativeEnum(PostTicketsTicketsCommunications);

/** @internal */
export namespace PostTicketsTicketsPreferences$ {
    export type Inbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostTicketsTicketsCommunications | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsPreferences, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: PostTicketsTicketsCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostTicketsTicketsCommunications | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsPreferences> =
        z
            .object({
                id: z.string().optional(),
                language: z.string().optional(),
                currency: z.string().optional(),
                timeZone: z.string().optional(),
                communications: PostTicketsTicketsCommunications$.optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.language === undefined ? null : { language: v.language }),
                    ...(v.currency === undefined ? null : { currency: v.currency }),
                    ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                    ...(v.communications === undefined
                        ? null
                        : { communications: v.communications }),
                };
            });
}

/** @internal */
export const PostTicketsTicketsRequestRequestBodyReporterNotesAuthorType$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyReporterNotesAuthorType
);

/** @internal */
export const PostTicketsTicketsRequestRequestBodyReporterNotesAuthorSocialLinksType$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyReporterNotesAuthorSocialLinksType
);

/** @internal */
export namespace PostTicketsTicketsAdditionalInfo$ {
    export type Inbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorSocialLinksType | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsAdditionalInfo, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.string().optional(),
                key: z.string().optional(),
                value: z.string().optional(),
                type: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorSocialLinksType$.optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                entityId: z.string().optional(),
                entityType: z.string().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.key === undefined ? null : { key: v.key }),
                    ...(v.value === undefined ? null : { value: v.value }),
                    ...(v.type === undefined ? null : { type: v.type }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                    ...(v.entityType === undefined ? null : { entityType: v.entityType }),
                };
            });

    export type Outbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorSocialLinksType | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsAdditionalInfo
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorSocialLinksType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsSocialLinks$ {
    export type Inbound = {
        type?: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostTicketsTicketsAdditionalInfo$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsSocialLinks, z.ZodTypeDef, Inbound> = z
        .object({
            type: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => PostTicketsTicketsAdditionalInfo$.inboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        type?: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostTicketsTicketsAdditionalInfo$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsSocialLinks> =
        z
            .object({
                type: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorType$.optional(),
                username: z.string().optional(),
                displayName: z.string().optional(),
                url: z.string().optional(),
                avatarUrl: z.string().optional(),
                email: z.string().optional(),
                additionalInfo: z
                    .lazy(() => PostTicketsTicketsAdditionalInfo$.outboundSchema)
                    .optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                active: z.boolean().optional(),
                deleted: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.type === undefined ? null : { type: v.type }),
                    ...(v.username === undefined ? null : { username: v.username }),
                    ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                    ...(v.url === undefined ? null : { url: v.url }),
                    ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                    ...(v.email === undefined ? null : { email: v.email }),
                    ...(v.additionalInfo === undefined
                        ? null
                        : { additionalInfo: v.additionalInfo }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.active === undefined ? null : { active: v.active }),
                    ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                };
            });
}

/** @internal */
export const PostTicketsTicketsRequestStatus$ = z.nativeEnum(PostTicketsTicketsRequestStatus);

/** @internal */
export const PostTicketsTicketsProvider$ = z.nativeEnum(PostTicketsTicketsProvider);

/** @internal */
export namespace PostTicketsTicketsSso$ {
    export type Inbound = {
        provider?: PostTicketsTicketsProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsSso, z.ZodTypeDef, Inbound> = z
        .object({
            provider: PostTicketsTicketsProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        provider?: PostTicketsTicketsProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsSso> = z
        .object({
            provider: PostTicketsTicketsProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRequestRequestBodyReporterNotesAuthorPaymentMethodsType$ =
    z.nativeEnum(PostTicketsTicketsRequestRequestBodyReporterNotesAuthorPaymentMethodsType);

/** @internal */
export namespace PostTicketsTicketsPaymentMethods$ {
    export type Inbound = {
        id?: string | undefined;
        type?:
            | PostTicketsTicketsRequestRequestBodyReporterNotesAuthorPaymentMethodsType
            | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsPaymentMethods, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.string().optional(),
                type: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorPaymentMethodsType$.optional(),
                details: z.string().optional(),
                isDefault: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.type === undefined ? null : { type: v.type }),
                    ...(v.details === undefined ? null : { details: v.details }),
                    ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
                };
            });

    export type Outbound = {
        id?: string | undefined;
        type?:
            | PostTicketsTicketsRequestRequestBodyReporterNotesAuthorPaymentMethodsType
            | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsPaymentMethods
    > = z
        .object({
            id: z.string().optional(),
            type: PostTicketsTicketsRequestRequestBodyReporterNotesAuthorPaymentMethodsType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });
}

/** @internal */
export namespace PostTicketsAuthor$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostTicketsTicketsProfilePicture$.Inbound | undefined;
        coverPhoto?: PostTicketsTicketsCoverPhoto$.Inbound | undefined;
        gender?: PostTicketsTicketsGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostTicketsTicketsRequestAddresses$.Inbound> | undefined;
        roles?: Array<PostTicketsTicketsRoles> | undefined;
        preferences?: PostTicketsTicketsPreferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsTicketsSocialLinks$.Inbound | undefined;
        status?: PostTicketsTicketsRequestStatus | undefined;
        sso?: Array<PostTicketsTicketsSso$.Inbound> | undefined;
        paymentMethods?: PostTicketsTicketsPaymentMethods$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsAuthor, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => PostTicketsTicketsProfilePicture$.inboundSchema)
                .optional(),
            coverPhoto: z.lazy(() => PostTicketsTicketsCoverPhoto$.inboundSchema).optional(),
            gender: PostTicketsTicketsGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(z.lazy(() => PostTicketsTicketsRequestAddresses$.inboundSchema))
                .optional(),
            roles: z.array(PostTicketsTicketsRoles$).optional(),
            preferences: z.lazy(() => PostTicketsTicketsPreferences$.inboundSchema).optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z.lazy(() => PostTicketsTicketsSocialLinks$.inboundSchema).optional(),
            status: PostTicketsTicketsRequestStatus$.optional(),
            sso: z.array(z.lazy(() => PostTicketsTicketsSso$.inboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => PostTicketsTicketsPaymentMethods$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostTicketsTicketsProfilePicture$.Outbound | undefined;
        coverPhoto?: PostTicketsTicketsCoverPhoto$.Outbound | undefined;
        gender?: PostTicketsTicketsGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostTicketsTicketsRequestAddresses$.Outbound> | undefined;
        roles?: Array<PostTicketsTicketsRoles> | undefined;
        preferences?: PostTicketsTicketsPreferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsTicketsSocialLinks$.Outbound | undefined;
        status?: PostTicketsTicketsRequestStatus | undefined;
        sso?: Array<PostTicketsTicketsSso$.Outbound> | undefined;
        paymentMethods?: PostTicketsTicketsPaymentMethods$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsAuthor> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => PostTicketsTicketsProfilePicture$.outboundSchema)
                .optional(),
            coverPhoto: z.lazy(() => PostTicketsTicketsCoverPhoto$.outboundSchema).optional(),
            gender: PostTicketsTicketsGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(z.lazy(() => PostTicketsTicketsRequestAddresses$.outboundSchema))
                .optional(),
            roles: z.array(PostTicketsTicketsRoles$).optional(),
            preferences: z.lazy(() => PostTicketsTicketsPreferences$.outboundSchema).optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z.lazy(() => PostTicketsTicketsSocialLinks$.outboundSchema).optional(),
            status: PostTicketsTicketsRequestStatus$.optional(),
            sso: z.array(z.lazy(() => PostTicketsTicketsSso$.outboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => PostTicketsTicketsPaymentMethods$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });
}

/** @internal */
export namespace PostTicketsMetadata$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsMetadata, z.ZodTypeDef, Inbound> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsMetadata> = z.object(
        {}
    );
}

/** @internal */
export namespace PostTicketsAssociatedWith$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsAssociatedWith, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsAssociatedWith> =
        z.object({});
}

/** @internal */
export namespace PostTicketsPermissions$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsPermissions, z.ZodTypeDef, Inbound> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsPermissions> =
        z.object({});
}

/** @internal */
export namespace PostTicketsAttachments$ {
    export type Inbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostTicketsMetadata$.Inbound | undefined;
        associatedWith?: PostTicketsAssociatedWith$.Inbound | undefined;
        permissions?: PostTicketsPermissions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsAttachments, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z.lazy(() => PostTicketsMetadata$.inboundSchema).optional(),
            associatedWith: z.lazy(() => PostTicketsAssociatedWith$.inboundSchema).optional(),
            permissions: z.lazy(() => PostTicketsPermissions$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostTicketsMetadata$.Outbound | undefined;
        associatedWith?: PostTicketsAssociatedWith$.Outbound | undefined;
        permissions?: PostTicketsPermissions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsAttachments> = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z.lazy(() => PostTicketsMetadata$.outboundSchema).optional(),
            associatedWith: z.lazy(() => PostTicketsAssociatedWith$.outboundSchema).optional(),
            permissions: z.lazy(() => PostTicketsPermissions$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsRequestProfilePicture$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestProfilePicture,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestProfilePicture
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsRequestCoverPhoto$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestCoverPhoto,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestCoverPhoto
    > = z.object({});
}

/** @internal */
export const PostTicketsTicketsRequestGender$ = z.nativeEnum(PostTicketsTicketsRequestGender);

/** @internal */
export namespace PostTicketsTicketsRequestRequestBodyAddresses$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestRequestBodyAddresses,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestRequestBodyAddresses
    > = z.object({});
}

/** @internal */
export const PostTicketsTicketsRequestRoles$ = z.nativeEnum(PostTicketsTicketsRequestRoles);

/** @internal */
export namespace PostTicketsTicketsRequestPreferences$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestPreferences,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestPreferences
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsRequestSocialLinks$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestSocialLinks,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestSocialLinks
    > = z.object({});
}

/** @internal */
export const PostTicketsTicketsRequestRequestBodyStatus$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyStatus
);

/** @internal */
export namespace PostTicketsTicketsRequestSso$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsTicketsRequestSso, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsRequestSso> =
        z.object({});
}

/** @internal */
export namespace PostTicketsTicketsRequestPaymentMethods$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestPaymentMethods,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestPaymentMethods
    > = z.object({});
}

/** @internal */
export namespace PostTicketsSharedWith$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostTicketsTicketsRequestProfilePicture$.Inbound | undefined;
        coverPhoto?: PostTicketsTicketsRequestCoverPhoto$.Inbound | undefined;
        gender?: PostTicketsTicketsRequestGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostTicketsTicketsRequestRequestBodyAddresses$.Inbound> | undefined;
        roles?: Array<PostTicketsTicketsRequestRoles> | undefined;
        preferences?: PostTicketsTicketsRequestPreferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsTicketsRequestSocialLinks$.Inbound | undefined;
        status?: PostTicketsTicketsRequestRequestBodyStatus | undefined;
        sso?: Array<PostTicketsTicketsRequestSso$.Inbound> | undefined;
        paymentMethods?: PostTicketsTicketsRequestPaymentMethods$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsSharedWith, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => PostTicketsTicketsRequestProfilePicture$.inboundSchema)
                .optional(),
            coverPhoto: z.lazy(() => PostTicketsTicketsRequestCoverPhoto$.inboundSchema).optional(),
            gender: PostTicketsTicketsRequestGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(z.lazy(() => PostTicketsTicketsRequestRequestBodyAddresses$.inboundSchema))
                .optional(),
            roles: z.array(PostTicketsTicketsRequestRoles$).optional(),
            preferences: z
                .lazy(() => PostTicketsTicketsRequestPreferences$.inboundSchema)
                .optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z
                .lazy(() => PostTicketsTicketsRequestSocialLinks$.inboundSchema)
                .optional(),
            status: PostTicketsTicketsRequestRequestBodyStatus$.optional(),
            sso: z.array(z.lazy(() => PostTicketsTicketsRequestSso$.inboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => PostTicketsTicketsRequestPaymentMethods$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostTicketsTicketsRequestProfilePicture$.Outbound | undefined;
        coverPhoto?: PostTicketsTicketsRequestCoverPhoto$.Outbound | undefined;
        gender?: PostTicketsTicketsRequestGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostTicketsTicketsRequestRequestBodyAddresses$.Outbound> | undefined;
        roles?: Array<PostTicketsTicketsRequestRoles> | undefined;
        preferences?: PostTicketsTicketsRequestPreferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsTicketsRequestSocialLinks$.Outbound | undefined;
        status?: PostTicketsTicketsRequestRequestBodyStatus | undefined;
        sso?: Array<PostTicketsTicketsRequestSso$.Outbound> | undefined;
        paymentMethods?: PostTicketsTicketsRequestPaymentMethods$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsSharedWith> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => PostTicketsTicketsRequestProfilePicture$.outboundSchema)
                .optional(),
            coverPhoto: z
                .lazy(() => PostTicketsTicketsRequestCoverPhoto$.outboundSchema)
                .optional(),
            gender: PostTicketsTicketsRequestGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(z.lazy(() => PostTicketsTicketsRequestRequestBodyAddresses$.outboundSchema))
                .optional(),
            roles: z.array(PostTicketsTicketsRequestRoles$).optional(),
            preferences: z
                .lazy(() => PostTicketsTicketsRequestPreferences$.outboundSchema)
                .optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z
                .lazy(() => PostTicketsTicketsRequestSocialLinks$.outboundSchema)
                .optional(),
            status: PostTicketsTicketsRequestRequestBodyStatus$.optional(),
            sso: z.array(z.lazy(() => PostTicketsTicketsRequestSso$.outboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => PostTicketsTicketsRequestPaymentMethods$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });
}

/** @internal */
export const PostTicketsVisibility$ = z.nativeEnum(PostTicketsVisibility);

/** @internal */
export const PostTicketsTicketsRequestRequestBodyReporterStatus$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyReporterStatus
);

/** @internal */
export namespace PostTicketsNotes$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: PostTicketsTicketsPriority | undefined;
        author?: PostTicketsAuthor$.Inbound | undefined;
        tags?: Array<string> | undefined;
        attachments?: Array<PostTicketsAttachments$.Inbound> | undefined;
        sharedWith?: Array<PostTicketsSharedWith$.Inbound> | undefined;
        visibility?: PostTicketsVisibility | undefined;
        status?: PostTicketsTicketsRequestRequestBodyReporterStatus | undefined;
        metadata?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsNotes, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            lastAccessed: z.number().optional(),
            reminder: z.number().optional(),
            color: z.string().optional(),
            priority: PostTicketsTicketsPriority$.optional(),
            author: z.lazy(() => PostTicketsAuthor$.inboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            attachments: z.array(z.lazy(() => PostTicketsAttachments$.inboundSchema)).optional(),
            sharedWith: z.array(z.lazy(() => PostTicketsSharedWith$.inboundSchema)).optional(),
            visibility: PostTicketsVisibility$.optional(),
            status: PostTicketsTicketsRequestRequestBodyReporterStatus$.optional(),
            metadata: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: PostTicketsTicketsPriority | undefined;
        author?: PostTicketsAuthor$.Outbound | undefined;
        tags?: Array<string> | undefined;
        attachments?: Array<PostTicketsAttachments$.Outbound> | undefined;
        sharedWith?: Array<PostTicketsSharedWith$.Outbound> | undefined;
        visibility?: PostTicketsVisibility | undefined;
        status?: PostTicketsTicketsRequestRequestBodyReporterStatus | undefined;
        metadata?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsNotes> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            lastAccessed: z.number().optional(),
            reminder: z.number().optional(),
            color: z.string().optional(),
            priority: PostTicketsTicketsPriority$.optional(),
            author: z.lazy(() => PostTicketsAuthor$.outboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            attachments: z.array(z.lazy(() => PostTicketsAttachments$.outboundSchema)).optional(),
            sharedWith: z.array(z.lazy(() => PostTicketsSharedWith$.outboundSchema)).optional(),
            visibility: PostTicketsVisibility$.optional(),
            status: PostTicketsTicketsRequestRequestBodyReporterStatus$.optional(),
            metadata: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRequestRequestBodyReporterSocialProfilesType$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyReporterSocialProfilesType
);

/** @internal */
export namespace PostTicketsTicketsRequestAdditionalInfo$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestAdditionalInfo,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestAdditionalInfo
    > = z.object({});
}

/** @internal */
export namespace PostTicketsSocialProfiles$ {
    export type Inbound = {
        type?: PostTicketsTicketsRequestRequestBodyReporterSocialProfilesType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostTicketsTicketsRequestAdditionalInfo$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsSocialProfiles, z.ZodTypeDef, Inbound> = z
        .object({
            type: PostTicketsTicketsRequestRequestBodyReporterSocialProfilesType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => PostTicketsTicketsRequestAdditionalInfo$.inboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        type?: PostTicketsTicketsRequestRequestBodyReporterSocialProfilesType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostTicketsTicketsRequestAdditionalInfo$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsSocialProfiles> = z
        .object({
            type: PostTicketsTicketsRequestRequestBodyReporterSocialProfilesType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => PostTicketsTicketsRequestAdditionalInfo$.outboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsFieldType$ = z.nativeEnum(PostTicketsTicketsFieldType);

/** @internal */
export namespace PostTicketsTicketsRequestRequestBodyReporterCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsTicketsFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestRequestBodyReporterCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostTicketsTicketsFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsTicketsFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestRequestBodyReporterCustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostTicketsTicketsFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostTicketsReporter$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        leadId?: string | undefined;
        company?: string | undefined;
        defaultEmail?: string | undefined;
        emails?: Array<PostTicketsEmails$.Inbound> | undefined;
        defaultPhone?: string | undefined;
        phones?: Array<PostTicketsPhones$.Inbound> | undefined;
        address?: PostTicketsAddress$.Inbound | undefined;
        addresses?: Array<PostTicketsTicketsAddresses$.Inbound> | undefined;
        birthday?: number | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: PostTicketsNotes$.Inbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<PostTicketsSocialProfiles$.Inbound> | undefined;
        isActive?: boolean | undefined;
        customFields?:
            | Array<PostTicketsTicketsRequestRequestBodyReporterCustomFields$.Inbound>
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsReporter, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            leadId: z.string().optional(),
            company: z.string().optional(),
            defaultEmail: z.string().optional(),
            emails: z.array(z.lazy(() => PostTicketsEmails$.inboundSchema)).optional(),
            defaultPhone: z.string().optional(),
            phones: z.array(z.lazy(() => PostTicketsPhones$.inboundSchema)).optional(),
            address: z.lazy(() => PostTicketsAddress$.inboundSchema).optional(),
            addresses: z.array(z.lazy(() => PostTicketsTicketsAddresses$.inboundSchema)).optional(),
            birthday: z.number().optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: z.lazy(() => PostTicketsNotes$.inboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z
                .array(z.lazy(() => PostTicketsSocialProfiles$.inboundSchema))
                .optional(),
            isActive: z.boolean().optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsRequestRequestBodyReporterCustomFields$.inboundSchema
                    )
                )
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.leadId === undefined ? null : { leadId: v.leadId }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.defaultEmail === undefined ? null : { defaultEmail: v.defaultEmail }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.defaultPhone === undefined ? null : { defaultPhone: v.defaultPhone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        leadId?: string | undefined;
        company?: string | undefined;
        defaultEmail?: string | undefined;
        emails?: Array<PostTicketsEmails$.Outbound> | undefined;
        defaultPhone?: string | undefined;
        phones?: Array<PostTicketsPhones$.Outbound> | undefined;
        address?: PostTicketsAddress$.Outbound | undefined;
        addresses?: Array<PostTicketsTicketsAddresses$.Outbound> | undefined;
        birthday?: number | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: PostTicketsNotes$.Outbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<PostTicketsSocialProfiles$.Outbound> | undefined;
        isActive?: boolean | undefined;
        customFields?:
            | Array<PostTicketsTicketsRequestRequestBodyReporterCustomFields$.Outbound>
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsReporter> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            leadId: z.string().optional(),
            company: z.string().optional(),
            defaultEmail: z.string().optional(),
            emails: z.array(z.lazy(() => PostTicketsEmails$.outboundSchema)).optional(),
            defaultPhone: z.string().optional(),
            phones: z.array(z.lazy(() => PostTicketsPhones$.outboundSchema)).optional(),
            address: z.lazy(() => PostTicketsAddress$.outboundSchema).optional(),
            addresses: z
                .array(z.lazy(() => PostTicketsTicketsAddresses$.outboundSchema))
                .optional(),
            birthday: z.number().optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: z.lazy(() => PostTicketsNotes$.outboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z
                .array(z.lazy(() => PostTicketsSocialProfiles$.outboundSchema))
                .optional(),
            isActive: z.boolean().optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsRequestRequestBodyReporterCustomFields$.outboundSchema
                    )
                )
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.leadId === undefined ? null : { leadId: v.leadId }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.defaultEmail === undefined ? null : { defaultEmail: v.defaultEmail }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.defaultPhone === undefined ? null : { defaultPhone: v.defaultPhone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsMetadata$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsTicketsMetadata, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsMetadata> =
        z.object({});
}

/** @internal */
export namespace PostTicketsTicketsAssociatedWith$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsTicketsAssociatedWith, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsAssociatedWith
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsPermissions$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsTicketsPermissions, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsPermissions> =
        z.object({});
}

/** @internal */
export namespace PostTicketsTicketsAttachments$ {
    export type Inbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostTicketsTicketsMetadata$.Inbound | undefined;
        associatedWith?: PostTicketsTicketsAssociatedWith$.Inbound | undefined;
        permissions?: PostTicketsTicketsPermissions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsAttachments, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z.lazy(() => PostTicketsTicketsMetadata$.inboundSchema).optional(),
            associatedWith: z
                .lazy(() => PostTicketsTicketsAssociatedWith$.inboundSchema)
                .optional(),
            permissions: z.lazy(() => PostTicketsTicketsPermissions$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostTicketsTicketsMetadata$.Outbound | undefined;
        associatedWith?: PostTicketsTicketsAssociatedWith$.Outbound | undefined;
        permissions?: PostTicketsTicketsPermissions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsAttachments> =
        z
            .object({
                id: z.string().optional(),
                fileName: z.string().optional(),
                fileSize: z.number().optional(),
                fileType: z.string().optional(),
                url: z.string().optional(),
                thumbnailUrl: z.string().optional(),
                previewUrl: z.string().optional(),
                content: z.string().optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                metadata: z.lazy(() => PostTicketsTicketsMetadata$.outboundSchema).optional(),
                associatedWith: z
                    .lazy(() => PostTicketsTicketsAssociatedWith$.outboundSchema)
                    .optional(),
                permissions: z.lazy(() => PostTicketsTicketsPermissions$.outboundSchema).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                    ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                    ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                    ...(v.url === undefined ? null : { url: v.url }),
                    ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                    ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                    ...(v.content === undefined ? null : { content: v.content }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                    ...(v.associatedWith === undefined
                        ? null
                        : { associatedWith: v.associatedWith }),
                    ...(v.permissions === undefined ? null : { permissions: v.permissions }),
                };
            });
}

/** @internal */
export namespace PostTicketsTicketsAuthor$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsTicketsAuthor, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsAuthor> =
        z.object({});
}

/** @internal */
export namespace PostTicketsTicketsRequestMetadata$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestMetadata,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestMetadata
    > = z.object({});
}

/** @internal */
export namespace PostTicketsComments$ {
    export type Inbound = {
        commentId?: string | undefined;
        author?: PostTicketsTicketsAuthor$.Inbound | undefined;
        text?: string | undefined;
        parentId?: string | undefined;
        likes?: number | undefined;
        flagged?: boolean | undefined;
        metadata?: Array<PostTicketsTicketsRequestMetadata$.Inbound> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsComments, z.ZodTypeDef, Inbound> = z
        .object({
            commentId: z.string().optional(),
            author: z.lazy(() => PostTicketsTicketsAuthor$.inboundSchema).optional(),
            text: z.string().optional(),
            parentId: z.string().optional(),
            likes: z.number().optional(),
            flagged: z.boolean().optional(),
            metadata: z
                .array(z.lazy(() => PostTicketsTicketsRequestMetadata$.inboundSchema))
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.commentId === undefined ? null : { commentId: v.commentId }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.text === undefined ? null : { text: v.text }),
                ...(v.parentId === undefined ? null : { parentId: v.parentId }),
                ...(v.likes === undefined ? null : { likes: v.likes }),
                ...(v.flagged === undefined ? null : { flagged: v.flagged }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        commentId?: string | undefined;
        author?: PostTicketsTicketsAuthor$.Outbound | undefined;
        text?: string | undefined;
        parentId?: string | undefined;
        likes?: number | undefined;
        flagged?: boolean | undefined;
        metadata?: Array<PostTicketsTicketsRequestMetadata$.Outbound> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsComments> = z
        .object({
            commentId: z.string().optional(),
            author: z.lazy(() => PostTicketsTicketsAuthor$.outboundSchema).optional(),
            text: z.string().optional(),
            parentId: z.string().optional(),
            likes: z.number().optional(),
            flagged: z.boolean().optional(),
            metadata: z
                .array(z.lazy(() => PostTicketsTicketsRequestMetadata$.outboundSchema))
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.commentId === undefined ? null : { commentId: v.commentId }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.text === undefined ? null : { text: v.text }),
                ...(v.parentId === undefined ? null : { parentId: v.parentId }),
                ...(v.likes === undefined ? null : { likes: v.likes }),
                ...(v.flagged === undefined ? null : { flagged: v.flagged }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRequestPriority$ = z.nativeEnum(PostTicketsTicketsRequestPriority);

/** @internal */
export namespace PostTicketsTicketsRequestAuthor$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsTicketsRequestAuthor, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestAuthor
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsRequestAttachments$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestAttachments,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestAttachments
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsSharedWith$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsTicketsSharedWith, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsSharedWith> =
        z.object({});
}

/** @internal */
export const PostTicketsTicketsVisibility$ = z.nativeEnum(PostTicketsTicketsVisibility);

/** @internal */
export const PostTicketsTicketsRequestRequestBodyNotesStatus$ = z.nativeEnum(
    PostTicketsTicketsRequestRequestBodyNotesStatus
);

/** @internal */
export namespace PostTicketsTicketsNotes$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: PostTicketsTicketsRequestPriority | undefined;
        author?: PostTicketsTicketsRequestAuthor$.Inbound | undefined;
        tags?: Array<string> | undefined;
        attachments?: Array<PostTicketsTicketsRequestAttachments$.Inbound> | undefined;
        sharedWith?: Array<PostTicketsTicketsSharedWith$.Inbound> | undefined;
        visibility?: PostTicketsTicketsVisibility | undefined;
        status?: PostTicketsTicketsRequestRequestBodyNotesStatus | undefined;
        metadata?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsNotes, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            lastAccessed: z.number().optional(),
            reminder: z.number().optional(),
            color: z.string().optional(),
            priority: PostTicketsTicketsRequestPriority$.optional(),
            author: z.lazy(() => PostTicketsTicketsRequestAuthor$.inboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            attachments: z
                .array(z.lazy(() => PostTicketsTicketsRequestAttachments$.inboundSchema))
                .optional(),
            sharedWith: z
                .array(z.lazy(() => PostTicketsTicketsSharedWith$.inboundSchema))
                .optional(),
            visibility: PostTicketsTicketsVisibility$.optional(),
            status: PostTicketsTicketsRequestRequestBodyNotesStatus$.optional(),
            metadata: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: PostTicketsTicketsRequestPriority | undefined;
        author?: PostTicketsTicketsRequestAuthor$.Outbound | undefined;
        tags?: Array<string> | undefined;
        attachments?: Array<PostTicketsTicketsRequestAttachments$.Outbound> | undefined;
        sharedWith?: Array<PostTicketsTicketsSharedWith$.Outbound> | undefined;
        visibility?: PostTicketsTicketsVisibility | undefined;
        status?: PostTicketsTicketsRequestRequestBodyNotesStatus | undefined;
        metadata?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsNotes> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            lastAccessed: z.number().optional(),
            reminder: z.number().optional(),
            color: z.string().optional(),
            priority: PostTicketsTicketsRequestPriority$.optional(),
            author: z.lazy(() => PostTicketsTicketsRequestAuthor$.outboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            attachments: z
                .array(z.lazy(() => PostTicketsTicketsRequestAttachments$.outboundSchema))
                .optional(),
            sharedWith: z
                .array(z.lazy(() => PostTicketsTicketsSharedWith$.outboundSchema))
                .optional(),
            visibility: PostTicketsTicketsVisibility$.optional(),
            status: PostTicketsTicketsRequestRequestBodyNotesStatus$.optional(),
            metadata: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsRequestFieldType$ = z.nativeEnum(PostTicketsTicketsRequestFieldType);

/** @internal */
export namespace PostTicketsTicketsRequestRequestBodyCustomFields1$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsTicketsRequestFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsRequestRequestBodyCustomFields1,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostTicketsTicketsRequestFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsTicketsRequestFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsRequestRequestBodyCustomFields1
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostTicketsTicketsRequestFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostTicketsRequestBody$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        status?: PostTicketsStatus | undefined;
        priority?: PostTicketsPriority | undefined;
        type?: PostTicketsType | undefined;
        assignee?: PostTicketsAssignee$.Inbound | undefined;
        reporter?: PostTicketsReporter$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        dueDate?: number | undefined;
        attachments?: Array<PostTicketsTicketsAttachments$.Inbound> | undefined;
        comments?: Array<PostTicketsComments$.Inbound> | undefined;
        notes?: Array<PostTicketsTicketsNotes$.Inbound> | undefined;
        tags?: Array<string> | undefined;
        customFields?:
            | Array<PostTicketsTicketsRequestRequestBodyCustomFields1$.Inbound>
            | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsRequestBody, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            status: PostTicketsStatus$.optional(),
            priority: PostTicketsPriority$.optional(),
            type: PostTicketsType$.optional(),
            assignee: z.lazy(() => PostTicketsAssignee$.inboundSchema).optional(),
            reporter: z.lazy(() => PostTicketsReporter$.inboundSchema).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            dueDate: z.number().optional(),
            attachments: z
                .array(z.lazy(() => PostTicketsTicketsAttachments$.inboundSchema))
                .optional(),
            comments: z.array(z.lazy(() => PostTicketsComments$.inboundSchema)).optional(),
            notes: z.array(z.lazy(() => PostTicketsTicketsNotes$.inboundSchema)).optional(),
            tags: z.array(z.string()).optional(),
            customFields: z
                .array(
                    z.lazy(() => PostTicketsTicketsRequestRequestBodyCustomFields1$.inboundSchema)
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.assignee === undefined ? null : { assignee: v.assignee }),
                ...(v.reporter === undefined ? null : { reporter: v.reporter }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.comments === undefined ? null : { comments: v.comments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        status?: PostTicketsStatus | undefined;
        priority?: PostTicketsPriority | undefined;
        type?: PostTicketsType | undefined;
        assignee?: PostTicketsAssignee$.Outbound | undefined;
        reporter?: PostTicketsReporter$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        dueDate?: number | undefined;
        attachments?: Array<PostTicketsTicketsAttachments$.Outbound> | undefined;
        comments?: Array<PostTicketsComments$.Outbound> | undefined;
        notes?: Array<PostTicketsTicketsNotes$.Outbound> | undefined;
        tags?: Array<string> | undefined;
        customFields?:
            | Array<PostTicketsTicketsRequestRequestBodyCustomFields1$.Outbound>
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsRequestBody> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            status: PostTicketsStatus$.optional(),
            priority: PostTicketsPriority$.optional(),
            type: PostTicketsType$.optional(),
            assignee: z.lazy(() => PostTicketsAssignee$.outboundSchema).optional(),
            reporter: z.lazy(() => PostTicketsReporter$.outboundSchema).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            dueDate: z.number().optional(),
            attachments: z
                .array(z.lazy(() => PostTicketsTicketsAttachments$.outboundSchema))
                .optional(),
            comments: z.array(z.lazy(() => PostTicketsComments$.outboundSchema)).optional(),
            notes: z.array(z.lazy(() => PostTicketsTicketsNotes$.outboundSchema)).optional(),
            tags: z.array(z.string()).optional(),
            customFields: z
                .array(
                    z.lazy(() => PostTicketsTicketsRequestRequestBodyCustomFields1$.outboundSchema)
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.assignee === undefined ? null : { assignee: v.assignee }),
                ...(v.reporter === undefined ? null : { reporter: v.reporter }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.comments === undefined ? null : { comments: v.comments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });
}

/** @internal */
export namespace PostTicketsRequest$ {
    export type Inbound = {
        "X-INTEGRATIONOS-CONNECTION-KEY": string;
        RequestBody: PostTicketsRequestBody$.Inbound;
    };

    export const inboundSchema: z.ZodType<PostTicketsRequest, z.ZodTypeDef, Inbound> = z
        .object({
            "X-INTEGRATIONOS-CONNECTION-KEY": z.string(),
            RequestBody: z.lazy(() => PostTicketsRequestBody$.inboundSchema),
        })
        .transform((v) => {
            return {
                xIntegrationosConnectionKey: v["X-INTEGRATIONOS-CONNECTION-KEY"],
                requestBody: v.RequestBody,
            };
        });

    export type Outbound = {
        "X-INTEGRATIONOS-CONNECTION-KEY": string;
        RequestBody: PostTicketsRequestBody$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsRequest> = z
        .object({
            xIntegrationosConnectionKey: z.string(),
            requestBody: z.lazy(() => PostTicketsRequestBody$.outboundSchema),
        })
        .transform((v) => {
            return {
                "X-INTEGRATIONOS-CONNECTION-KEY": v.xIntegrationosConnectionKey,
                RequestBody: v.requestBody,
            };
        });
}

/** @internal */
export const PostTicketsStatusCode$ = z.nativeEnum(PostTicketsStatusCode);

/** @internal */
export const PostTicketsTicketsResponseStatus$ = z.nativeEnum(PostTicketsTicketsResponseStatus);

/** @internal */
export const PostTicketsTicketsResponsePriority$ = z.nativeEnum(PostTicketsTicketsResponsePriority);

/** @internal */
export const PostTicketsTicketsResponseType$ = z.nativeEnum(PostTicketsTicketsResponseType);

/** @internal */
export const PostTicketsTicketsResponseMimeType$ = z.nativeEnum(PostTicketsTicketsResponseMimeType);

/** @internal */
export namespace PostTicketsTicketsResponseProfilePicture$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsResponseMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponseProfilePicture,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsResponseMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsResponseMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseProfilePicture
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsResponseMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200MimeType$ = z.nativeEnum(
    PostTicketsTicketsResponse200MimeType
);

/** @internal */
export namespace PostTicketsTicketsResponseCoverPhoto$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsResponse200MimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponseCoverPhoto,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsResponse200MimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsResponse200MimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseCoverPhoto
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsResponse200MimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponseGender$ = z.nativeEnum(PostTicketsTicketsResponseGender);

/** @internal */
export const PostTicketsTicketsResponse200Type$ = z.nativeEnum(PostTicketsTicketsResponse200Type);

/** @internal */
export namespace PostTicketsTicketsResponseGeoLocation$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponseGeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseGeoLocation
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONResponseBodyCustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyCustomFields
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponseAddresses$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsResponse200Type | undefined;
        geoLocation?: PostTicketsTicketsResponseGeoLocation$.Inbound | undefined;
        customFields?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyCustomFields$.Inbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponseAddresses,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsResponse200Type$.optional(),
            geoLocation: z
                .lazy(() => PostTicketsTicketsResponseGeoLocation$.inboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsResponse200ApplicationJSONResponseBodyCustomFields$.inboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?: PostTicketsTicketsResponse200Type | undefined;
        geoLocation?: PostTicketsTicketsResponseGeoLocation$.Outbound | undefined;
        customFields?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyCustomFields$.Outbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseAddresses
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsResponse200Type$.optional(),
            geoLocation: z
                .lazy(() => PostTicketsTicketsResponseGeoLocation$.outboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsResponse200ApplicationJSONResponseBodyCustomFields$.outboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponseRoles$ = z.nativeEnum(PostTicketsTicketsResponseRoles);

/** @internal */
export const PostTicketsTicketsResponseCommunications$ = z.nativeEnum(
    PostTicketsTicketsResponseCommunications
);

/** @internal */
export namespace PostTicketsTicketsResponsePreferences$ {
    export type Inbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostTicketsTicketsResponseCommunications | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponsePreferences,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: PostTicketsTicketsResponseCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostTicketsTicketsResponseCommunications | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponsePreferences
    > = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: PostTicketsTicketsResponseCommunications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONType$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONType
);

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType$ =
    z.nativeEnum(PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType);

/** @internal */
export namespace PostTicketsTicketsResponseAdditionalInfo$ {
    export type Inbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponseAdditionalInfo,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseAdditionalInfo
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedAssigneeType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsResponseSocialLinks$ {
    export type Inbound = {
        type?: PostTicketsTicketsResponse200ApplicationJSONType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostTicketsTicketsResponseAdditionalInfo$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponseSocialLinks,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            type: PostTicketsTicketsResponse200ApplicationJSONType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => PostTicketsTicketsResponseAdditionalInfo$.inboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        type?: PostTicketsTicketsResponse200ApplicationJSONType | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostTicketsTicketsResponseAdditionalInfo$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseSocialLinks
    > = z
        .object({
            type: PostTicketsTicketsResponse200ApplicationJSONType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => PostTicketsTicketsResponseAdditionalInfo$.outboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200Status$ = z.nativeEnum(
    PostTicketsTicketsResponse200Status
);

/** @internal */
export const PostTicketsTicketsResponseProvider$ = z.nativeEnum(PostTicketsTicketsResponseProvider);

/** @internal */
export namespace PostTicketsTicketsResponseSso$ {
    export type Inbound = {
        provider?: PostTicketsTicketsResponseProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsResponseSso, z.ZodTypeDef, Inbound> = z
        .object({
            provider: PostTicketsTicketsResponseProvider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        provider?: PostTicketsTicketsResponseProvider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsResponseSso> =
        z
            .object({
                provider: PostTicketsTicketsResponseProvider$.optional(),
                providerUserId: z.string().optional(),
                profileUrl: z.string().optional(),
                accessToken: z.string().optional(),
                refreshToken: z.string().optional(),
                expiresIn: z.number().optional(),
                expiryDate: z.number().optional(),
                scopes: z.array(z.string()).optional(),
                tokenType: z.string().optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                active: z.boolean().optional(),
                deleted: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.provider === undefined ? null : { provider: v.provider }),
                    ...(v.providerUserId === undefined
                        ? null
                        : { providerUserId: v.providerUserId }),
                    ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                    ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                    ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                    ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                    ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                    ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                    ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.active === undefined ? null : { active: v.active }),
                    ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                };
            });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyType$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONResponseBodyType
);

/** @internal */
export namespace PostTicketsTicketsResponsePaymentMethods$ {
    export type Inbound = {
        id?: string | undefined;
        type?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyType | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponsePaymentMethods,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        type?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyType | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponsePaymentMethods
    > = z
        .object({
            id: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsAssignee$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostTicketsTicketsResponseProfilePicture$.Inbound | undefined;
        coverPhoto?: PostTicketsTicketsResponseCoverPhoto$.Inbound | undefined;
        gender?: PostTicketsTicketsResponseGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostTicketsTicketsResponseAddresses$.Inbound> | undefined;
        roles?: Array<PostTicketsTicketsResponseRoles> | undefined;
        preferences?: PostTicketsTicketsResponsePreferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsTicketsResponseSocialLinks$.Inbound | undefined;
        status?: PostTicketsTicketsResponse200Status | undefined;
        sso?: Array<PostTicketsTicketsResponseSso$.Inbound> | undefined;
        paymentMethods?: PostTicketsTicketsResponsePaymentMethods$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsAssignee, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => PostTicketsTicketsResponseProfilePicture$.inboundSchema)
                .optional(),
            coverPhoto: z
                .lazy(() => PostTicketsTicketsResponseCoverPhoto$.inboundSchema)
                .optional(),
            gender: PostTicketsTicketsResponseGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(z.lazy(() => PostTicketsTicketsResponseAddresses$.inboundSchema))
                .optional(),
            roles: z.array(PostTicketsTicketsResponseRoles$).optional(),
            preferences: z
                .lazy(() => PostTicketsTicketsResponsePreferences$.inboundSchema)
                .optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z
                .lazy(() => PostTicketsTicketsResponseSocialLinks$.inboundSchema)
                .optional(),
            status: PostTicketsTicketsResponse200Status$.optional(),
            sso: z.array(z.lazy(() => PostTicketsTicketsResponseSso$.inboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => PostTicketsTicketsResponsePaymentMethods$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostTicketsTicketsResponseProfilePicture$.Outbound | undefined;
        coverPhoto?: PostTicketsTicketsResponseCoverPhoto$.Outbound | undefined;
        gender?: PostTicketsTicketsResponseGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?: Array<PostTicketsTicketsResponseAddresses$.Outbound> | undefined;
        roles?: Array<PostTicketsTicketsResponseRoles> | undefined;
        preferences?: PostTicketsTicketsResponsePreferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsTicketsResponseSocialLinks$.Outbound | undefined;
        status?: PostTicketsTicketsResponse200Status | undefined;
        sso?: Array<PostTicketsTicketsResponseSso$.Outbound> | undefined;
        paymentMethods?: PostTicketsTicketsResponsePaymentMethods$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsAssignee> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => PostTicketsTicketsResponseProfilePicture$.outboundSchema)
                .optional(),
            coverPhoto: z
                .lazy(() => PostTicketsTicketsResponseCoverPhoto$.outboundSchema)
                .optional(),
            gender: PostTicketsTicketsResponseGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(z.lazy(() => PostTicketsTicketsResponseAddresses$.outboundSchema))
                .optional(),
            roles: z.array(PostTicketsTicketsResponseRoles$).optional(),
            preferences: z
                .lazy(() => PostTicketsTicketsResponsePreferences$.outboundSchema)
                .optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z
                .lazy(() => PostTicketsTicketsResponseSocialLinks$.outboundSchema)
                .optional(),
            status: PostTicketsTicketsResponse200Status$.optional(),
            sso: z.array(z.lazy(() => PostTicketsTicketsResponseSso$.outboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => PostTicketsTicketsResponsePaymentMethods$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedType$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedType
);

/** @internal */
export namespace PostTicketsTicketsEmails$ {
    export type Inbound = {
        email?: string | undefined;
        type?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedType | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsEmails, z.ZodTypeDef, Inbound> = z
        .object({
            email: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        email?: string | undefined;
        type?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedType | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsEmails> = z
        .object({
            email: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType$ =
    z.nativeEnum(PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType);

/** @internal */
export namespace PostTicketsTicketsPhones$ {
    export type Inbound = {
        phone?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType
            | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsPhones, z.ZodTypeDef, Inbound> = z
        .object({
            phone: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        phone?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsPhones> = z
        .object({
            phone: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressType$ =
    z.nativeEnum(
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressType
    );

/** @internal */
export namespace PostTicketsTicketsResponse200GeoLocation$ {
    export type Inbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200GeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });

    export type Outbound = {
        latitude?: number | undefined;
        longitude?: number | undefined;
        altitude?: number | undefined;
        accuracy?: number | undefined;
        altitudeAccuracy?: number | undefined;
        heading?: number | undefined;
        speed?: number | undefined;
        timestamp?: number | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200GeoLocation
    > = z
        .object({
            latitude: z.number().optional(),
            longitude: z.number().optional(),
            altitude: z.number().optional(),
            accuracy: z.number().optional(),
            altitudeAccuracy: z.number().optional(),
            heading: z.number().optional(),
            speed: z.number().optional(),
            timestamp: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.latitude === undefined ? null : { latitude: v.latitude }),
                ...(v.longitude === undefined ? null : { longitude: v.longitude }),
                ...(v.altitude === undefined ? null : { altitude: v.altitude }),
                ...(v.accuracy === undefined ? null : { accuracy: v.accuracy }),
                ...(v.altitudeAccuracy === undefined
                    ? null
                    : { altitudeAccuracy: v.altitudeAccuracy }),
                ...(v.heading === undefined ? null : { heading: v.heading }),
                ...(v.speed === undefined ? null : { speed: v.speed }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONFieldType$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONFieldType
);

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsTicketsResponse200ApplicationJSONFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostTicketsTicketsResponse200ApplicationJSONFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsTicketsResponse200ApplicationJSONFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedCustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostTicketsTicketsResponse200ApplicationJSONFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsAddress$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressType
            | undefined;
        geoLocation?: PostTicketsTicketsResponse200GeoLocation$.Inbound | undefined;
        customFields?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedCustomFields$.Inbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsAddress, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressType$.optional(),
            geoLocation: z
                .lazy(() => PostTicketsTicketsResponse200GeoLocation$.inboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedCustomFields$.inboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressType
            | undefined;
        geoLocation?: PostTicketsTicketsResponse200GeoLocation$.Outbound | undefined;
        customFields?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedCustomFields$.Outbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsAddress> = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressType$.optional(),
            geoLocation: z
                .lazy(() => PostTicketsTicketsResponse200GeoLocation$.outboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedCustomFields$.outboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressesType$ =
    z.nativeEnum(
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressesType
    );

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONGeoLocation$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONGeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONGeoLocation
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONCustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONCustomFields
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200Addresses$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressesType
            | undefined;
        geoLocation?: PostTicketsTicketsResponse200ApplicationJSONGeoLocation$.Inbound | undefined;
        customFields?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONCustomFields$.Inbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200Addresses,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressesType$.optional(),
            geoLocation: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONGeoLocation$.inboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsResponse200ApplicationJSONCustomFields$.inboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressesType
            | undefined;
        geoLocation?: PostTicketsTicketsResponse200ApplicationJSONGeoLocation$.Outbound | undefined;
        customFields?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONCustomFields$.Outbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200Addresses
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterAddressesType$.optional(),
            geoLocation: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONGeoLocation$.outboundSchema)
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsResponse200ApplicationJSONCustomFields$.outboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONPriority$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONPriority
);

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONMimeType$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONMimeType
);

/** @internal */
export namespace PostTicketsTicketsResponse200ProfilePicture$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsResponse200ApplicationJSONMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ProfilePicture,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsResponse200ApplicationJSONMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsResponse200ApplicationJSONMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ProfilePicture
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsResponse200ApplicationJSONMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyMimeType$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONResponseBodyMimeType
);

/** @internal */
export namespace PostTicketsTicketsResponse200CoverPhoto$ {
    export type Inbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200CoverPhoto,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsResponse200ApplicationJSONResponseBodyMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        src?: string | undefined;
        altText?: string | undefined;
        width?: number | undefined;
        height?: number | undefined;
        thumbnailSrc?: string | undefined;
        caption?: string | undefined;
        title?: string | undefined;
        mimeType?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyMimeType | undefined;
        tags?: Array<string> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200CoverPhoto
    > = z
        .object({
            id: z.string().optional(),
            src: z.string().optional(),
            altText: z.string().optional(),
            width: z.number().optional(),
            height: z.number().optional(),
            thumbnailSrc: z.string().optional(),
            caption: z.string().optional(),
            title: z.string().optional(),
            mimeType: PostTicketsTicketsResponse200ApplicationJSONResponseBodyMimeType$.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.src === undefined ? null : { src: v.src }),
                ...(v.altText === undefined ? null : { altText: v.altText }),
                ...(v.width === undefined ? null : { width: v.width }),
                ...(v.height === undefined ? null : { height: v.height }),
                ...(v.thumbnailSrc === undefined ? null : { thumbnailSrc: v.thumbnailSrc }),
                ...(v.caption === undefined ? null : { caption: v.caption }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.mimeType === undefined ? null : { mimeType: v.mimeType }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200Gender$ = z.nativeEnum(
    PostTicketsTicketsResponse200Gender
);

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType$ =
    z.nativeEnum(PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType);

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONResponseBodyGeoLocation$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyGeoLocation,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyGeoLocation
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterCustomFields$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterCustomFields
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONAddresses$ {
    export type Inbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType
            | undefined;
        geoLocation?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyGeoLocation$.Inbound
            | undefined;
        customFields?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterCustomFields$.Inbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONAddresses,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType$.optional(),
            geoLocation: z
                .lazy(
                    () =>
                        PostTicketsTicketsResponse200ApplicationJSONResponseBodyGeoLocation$.inboundSchema
                )
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterCustomFields$.inboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        contactId?: string | undefined;
        accountId?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        name?: string | undefined;
        companyName?: string | undefined;
        email?: string | undefined;
        phone?: string | undefined;
        street?: string | undefined;
        addressLine2?: string | undefined;
        city?: string | undefined;
        province?: string | undefined;
        region?: string | undefined;
        postalCode?: string | undefined;
        postalCodeExtension?: string | undefined;
        country?: string | undefined;
        countryCode?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType
            | undefined;
        geoLocation?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyGeoLocation$.Outbound
            | undefined;
        customFields?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterCustomFields$.Outbound>
            | undefined;
        subdivisionCode?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONAddresses
    > = z
        .object({
            id: z.string().optional(),
            contactId: z.string().optional(),
            accountId: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            name: z.string().optional(),
            companyName: z.string().optional(),
            email: z.string().optional(),
            phone: z.string().optional(),
            street: z.string().optional(),
            addressLine2: z.string().optional(),
            city: z.string().optional(),
            province: z.string().optional(),
            region: z.string().optional(),
            postalCode: z.string().optional(),
            postalCodeExtension: z.string().optional(),
            country: z.string().optional(),
            countryCode: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesType$.optional(),
            geoLocation: z
                .lazy(
                    () =>
                        PostTicketsTicketsResponse200ApplicationJSONResponseBodyGeoLocation$.outboundSchema
                )
                .optional(),
            customFields: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterCustomFields$.outboundSchema
                    )
                )
                .optional(),
            subdivisionCode: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.contactId === undefined ? null : { contactId: v.contactId }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.street === undefined ? null : { street: v.street }),
                ...(v.addressLine2 === undefined ? null : { addressLine2: v.addressLine2 }),
                ...(v.city === undefined ? null : { city: v.city }),
                ...(v.province === undefined ? null : { province: v.province }),
                ...(v.region === undefined ? null : { region: v.region }),
                ...(v.postalCode === undefined ? null : { postalCode: v.postalCode }),
                ...(v.postalCodeExtension === undefined
                    ? null
                    : { postalCodeExtension: v.postalCodeExtension }),
                ...(v.country === undefined ? null : { country: v.country }),
                ...(v.countryCode === undefined ? null : { countryCode: v.countryCode }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.geoLocation === undefined ? null : { geoLocation: v.geoLocation }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.subdivisionCode === undefined
                    ? null
                    : { subdivisionCode: v.subdivisionCode }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200Roles$ = z.nativeEnum(PostTicketsTicketsResponse200Roles);

/** @internal */
export const PostTicketsTicketsResponse200Communications$ = z.nativeEnum(
    PostTicketsTicketsResponse200Communications
);

/** @internal */
export namespace PostTicketsTicketsResponse200Preferences$ {
    export type Inbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostTicketsTicketsResponse200Communications | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200Preferences,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: PostTicketsTicketsResponse200Communications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        language?: string | undefined;
        currency?: string | undefined;
        timeZone?: string | undefined;
        communications?: PostTicketsTicketsResponse200Communications | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200Preferences
    > = z
        .object({
            id: z.string().optional(),
            language: z.string().optional(),
            currency: z.string().optional(),
            timeZone: z.string().optional(),
            communications: PostTicketsTicketsResponse200Communications$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.language === undefined ? null : { language: v.language }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.timeZone === undefined ? null : { timeZone: v.timeZone }),
                ...(v.communications === undefined ? null : { communications: v.communications }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType$ =
    z.nativeEnum(
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType
    );

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType$ =
    z.nativeEnum(
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType
    );

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONAdditionalInfo$ {
    export type Inbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONAdditionalInfo,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        key?: string | undefined;
        value?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        entityId?: string | undefined;
        entityType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONAdditionalInfo
    > = z
        .object({
            id: z.string().optional(),
            key: z.string().optional(),
            value: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorSocialLinksType$.optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            entityId: z.string().optional(),
            entityType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.entityId === undefined ? null : { entityId: v.entityId }),
                ...(v.entityType === undefined ? null : { entityType: v.entityType }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsResponse200SocialLinks$ {
    export type Inbound = {
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType
            | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?:
            | PostTicketsTicketsResponse200ApplicationJSONAdditionalInfo$.Inbound
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200SocialLinks,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(
                    () => PostTicketsTicketsResponse200ApplicationJSONAdditionalInfo$.inboundSchema
                )
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType
            | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?:
            | PostTicketsTicketsResponse200ApplicationJSONAdditionalInfo$.Outbound
            | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200SocialLinks
    > = z
        .object({
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(
                    () => PostTicketsTicketsResponse200ApplicationJSONAdditionalInfo$.outboundSchema
                )
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedStatus$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedStatus
);

/** @internal */
export const PostTicketsTicketsResponse200Provider$ = z.nativeEnum(
    PostTicketsTicketsResponse200Provider
);

/** @internal */
export namespace PostTicketsTicketsResponse200Sso$ {
    export type Inbound = {
        provider?: PostTicketsTicketsResponse200Provider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsResponse200Sso, z.ZodTypeDef, Inbound> =
        z
            .object({
                provider: PostTicketsTicketsResponse200Provider$.optional(),
                providerUserId: z.string().optional(),
                profileUrl: z.string().optional(),
                accessToken: z.string().optional(),
                refreshToken: z.string().optional(),
                expiresIn: z.number().optional(),
                expiryDate: z.number().optional(),
                scopes: z.array(z.string()).optional(),
                tokenType: z.string().optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                active: z.boolean().optional(),
                deleted: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.provider === undefined ? null : { provider: v.provider }),
                    ...(v.providerUserId === undefined
                        ? null
                        : { providerUserId: v.providerUserId }),
                    ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                    ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                    ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                    ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                    ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                    ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                    ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.active === undefined ? null : { active: v.active }),
                    ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                };
            });

    export type Outbound = {
        provider?: PostTicketsTicketsResponse200Provider | undefined;
        providerUserId?: string | undefined;
        profileUrl?: string | undefined;
        accessToken?: string | undefined;
        refreshToken?: string | undefined;
        expiresIn?: number | undefined;
        expiryDate?: number | undefined;
        scopes?: Array<string> | undefined;
        tokenType?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200Sso
    > = z
        .object({
            provider: PostTicketsTicketsResponse200Provider$.optional(),
            providerUserId: z.string().optional(),
            profileUrl: z.string().optional(),
            accessToken: z.string().optional(),
            refreshToken: z.string().optional(),
            expiresIn: z.number().optional(),
            expiryDate: z.number().optional(),
            scopes: z.array(z.string()).optional(),
            tokenType: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.provider === undefined ? null : { provider: v.provider }),
                ...(v.providerUserId === undefined ? null : { providerUserId: v.providerUserId }),
                ...(v.profileUrl === undefined ? null : { profileUrl: v.profileUrl }),
                ...(v.accessToken === undefined ? null : { accessToken: v.accessToken }),
                ...(v.refreshToken === undefined ? null : { refreshToken: v.refreshToken }),
                ...(v.expiresIn === undefined ? null : { expiresIn: v.expiresIn }),
                ...(v.expiryDate === undefined ? null : { expiryDate: v.expiryDate }),
                ...(v.scopes === undefined ? null : { scopes: v.scopes }),
                ...(v.tokenType === undefined ? null : { tokenType: v.tokenType }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType$ =
    z.nativeEnum(
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType
    );

/** @internal */
export namespace PostTicketsTicketsResponse200PaymentMethods$ {
    export type Inbound = {
        id?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType
            | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200PaymentMethods,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType
            | undefined;
        details?: string | undefined;
        isDefault?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200PaymentMethods
    > = z
        .object({
            id: z.string().optional(),
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterNotesAuthorPaymentMethodsType$.optional(),
            details: z.string().optional(),
            isDefault: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.details === undefined ? null : { details: v.details }),
                ...(v.isDefault === undefined ? null : { isDefault: v.isDefault }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONAuthor$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostTicketsTicketsResponse200ProfilePicture$.Inbound | undefined;
        coverPhoto?: PostTicketsTicketsResponse200CoverPhoto$.Inbound | undefined;
        gender?: PostTicketsTicketsResponse200Gender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONAddresses$.Inbound>
            | undefined;
        roles?: Array<PostTicketsTicketsResponse200Roles> | undefined;
        preferences?: PostTicketsTicketsResponse200Preferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsTicketsResponse200SocialLinks$.Inbound | undefined;
        status?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedStatus | undefined;
        sso?: Array<PostTicketsTicketsResponse200Sso$.Inbound> | undefined;
        paymentMethods?: PostTicketsTicketsResponse200PaymentMethods$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONAuthor,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => PostTicketsTicketsResponse200ProfilePicture$.inboundSchema)
                .optional(),
            coverPhoto: z
                .lazy(() => PostTicketsTicketsResponse200CoverPhoto$.inboundSchema)
                .optional(),
            gender: PostTicketsTicketsResponse200Gender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(
                    z.lazy(
                        () => PostTicketsTicketsResponse200ApplicationJSONAddresses$.inboundSchema
                    )
                )
                .optional(),
            roles: z.array(PostTicketsTicketsResponse200Roles$).optional(),
            preferences: z
                .lazy(() => PostTicketsTicketsResponse200Preferences$.inboundSchema)
                .optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z
                .lazy(() => PostTicketsTicketsResponse200SocialLinks$.inboundSchema)
                .optional(),
            status: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedStatus$.optional(),
            sso: z.array(z.lazy(() => PostTicketsTicketsResponse200Sso$.inboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => PostTicketsTicketsResponse200PaymentMethods$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: PostTicketsTicketsResponse200ProfilePicture$.Outbound | undefined;
        coverPhoto?: PostTicketsTicketsResponse200CoverPhoto$.Outbound | undefined;
        gender?: PostTicketsTicketsResponse200Gender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONAddresses$.Outbound>
            | undefined;
        roles?: Array<PostTicketsTicketsResponse200Roles> | undefined;
        preferences?: PostTicketsTicketsResponse200Preferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsTicketsResponse200SocialLinks$.Outbound | undefined;
        status?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedStatus | undefined;
        sso?: Array<PostTicketsTicketsResponse200Sso$.Outbound> | undefined;
        paymentMethods?: PostTicketsTicketsResponse200PaymentMethods$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONAuthor
    > = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(() => PostTicketsTicketsResponse200ProfilePicture$.outboundSchema)
                .optional(),
            coverPhoto: z
                .lazy(() => PostTicketsTicketsResponse200CoverPhoto$.outboundSchema)
                .optional(),
            gender: PostTicketsTicketsResponse200Gender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(
                    z.lazy(
                        () => PostTicketsTicketsResponse200ApplicationJSONAddresses$.outboundSchema
                    )
                )
                .optional(),
            roles: z.array(PostTicketsTicketsResponse200Roles$).optional(),
            preferences: z
                .lazy(() => PostTicketsTicketsResponse200Preferences$.outboundSchema)
                .optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z
                .lazy(() => PostTicketsTicketsResponse200SocialLinks$.outboundSchema)
                .optional(),
            status: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedStatus$.optional(),
            sso: z.array(z.lazy(() => PostTicketsTicketsResponse200Sso$.outboundSchema)).optional(),
            paymentMethods: z
                .lazy(() => PostTicketsTicketsResponse200PaymentMethods$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONMetadata$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONMetadata,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONMetadata
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200AssociatedWith$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200AssociatedWith,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200AssociatedWith
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200Permissions$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200Permissions,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200Permissions
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONAttachments$ {
    export type Inbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostTicketsTicketsResponse200ApplicationJSONMetadata$.Inbound | undefined;
        associatedWith?: PostTicketsTicketsResponse200AssociatedWith$.Inbound | undefined;
        permissions?: PostTicketsTicketsResponse200Permissions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONAttachments,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONMetadata$.inboundSchema)
                .optional(),
            associatedWith: z
                .lazy(() => PostTicketsTicketsResponse200AssociatedWith$.inboundSchema)
                .optional(),
            permissions: z
                .lazy(() => PostTicketsTicketsResponse200Permissions$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostTicketsTicketsResponse200ApplicationJSONMetadata$.Outbound | undefined;
        associatedWith?: PostTicketsTicketsResponse200AssociatedWith$.Outbound | undefined;
        permissions?: PostTicketsTicketsResponse200Permissions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONAttachments
    > = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONMetadata$.outboundSchema)
                .optional(),
            associatedWith: z
                .lazy(() => PostTicketsTicketsResponse200AssociatedWith$.outboundSchema)
                .optional(),
            permissions: z
                .lazy(() => PostTicketsTicketsResponse200Permissions$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONProfilePicture$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONProfilePicture,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONProfilePicture
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONCoverPhoto$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONCoverPhoto,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONCoverPhoto
    > = z.object({});
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONGender$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONGender
);

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONResponseBodyAddresses$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyAddresses,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyAddresses
    > = z.object({});
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONRoles$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONRoles
);

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONPreferences$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONPreferences,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONPreferences
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONSocialLinks$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONSocialLinks,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONSocialLinks
    > = z.object({});
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterStatus$ =
    z.nativeEnum(PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterStatus);

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONSso$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONSso,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONSso
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200ApplicationJSONPaymentMethods$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200ApplicationJSONPaymentMethods,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200ApplicationJSONPaymentMethods
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200SharedWith$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?:
            | PostTicketsTicketsResponse200ApplicationJSONProfilePicture$.Inbound
            | undefined;
        coverPhoto?: PostTicketsTicketsResponse200ApplicationJSONCoverPhoto$.Inbound | undefined;
        gender?: PostTicketsTicketsResponse200ApplicationJSONGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyAddresses$.Inbound>
            | undefined;
        roles?: Array<PostTicketsTicketsResponse200ApplicationJSONRoles> | undefined;
        preferences?: PostTicketsTicketsResponse200ApplicationJSONPreferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsTicketsResponse200ApplicationJSONSocialLinks$.Inbound | undefined;
        status?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterStatus
            | undefined;
        sso?: Array<PostTicketsTicketsResponse200ApplicationJSONSso$.Inbound> | undefined;
        paymentMethods?:
            | PostTicketsTicketsResponse200ApplicationJSONPaymentMethods$.Inbound
            | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200SharedWith,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(
                    () => PostTicketsTicketsResponse200ApplicationJSONProfilePicture$.inboundSchema
                )
                .optional(),
            coverPhoto: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONCoverPhoto$.inboundSchema)
                .optional(),
            gender: PostTicketsTicketsResponse200ApplicationJSONGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsResponse200ApplicationJSONResponseBodyAddresses$.inboundSchema
                    )
                )
                .optional(),
            roles: z.array(PostTicketsTicketsResponse200ApplicationJSONRoles$).optional(),
            preferences: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONPreferences$.inboundSchema)
                .optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONSocialLinks$.inboundSchema)
                .optional(),
            status: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterStatus$.optional(),
            sso: z
                .array(z.lazy(() => PostTicketsTicketsResponse200ApplicationJSONSso$.inboundSchema))
                .optional(),
            paymentMethods: z
                .lazy(
                    () => PostTicketsTicketsResponse200ApplicationJSONPaymentMethods$.inboundSchema
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?:
            | PostTicketsTicketsResponse200ApplicationJSONProfilePicture$.Outbound
            | undefined;
        coverPhoto?: PostTicketsTicketsResponse200ApplicationJSONCoverPhoto$.Outbound | undefined;
        gender?: PostTicketsTicketsResponse200ApplicationJSONGender | undefined;
        dateOfBirth?: number | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: number | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        addresses?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONResponseBodyAddresses$.Outbound>
            | undefined;
        roles?: Array<PostTicketsTicketsResponse200ApplicationJSONRoles> | undefined;
        preferences?: PostTicketsTicketsResponse200ApplicationJSONPreferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialLinks?: PostTicketsTicketsResponse200ApplicationJSONSocialLinks$.Outbound | undefined;
        status?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterStatus
            | undefined;
        sso?: Array<PostTicketsTicketsResponse200ApplicationJSONSso$.Outbound> | undefined;
        paymentMethods?:
            | PostTicketsTicketsResponse200ApplicationJSONPaymentMethods$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200SharedWith
    > = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: z
                .lazy(
                    () => PostTicketsTicketsResponse200ApplicationJSONProfilePicture$.outboundSchema
                )
                .optional(),
            coverPhoto: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONCoverPhoto$.outboundSchema)
                .optional(),
            gender: PostTicketsTicketsResponse200ApplicationJSONGender$.optional(),
            dateOfBirth: z.number().optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z.number().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            addresses: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsResponse200ApplicationJSONResponseBodyAddresses$.outboundSchema
                    )
                )
                .optional(),
            roles: z.array(PostTicketsTicketsResponse200ApplicationJSONRoles$).optional(),
            preferences: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONPreferences$.outboundSchema)
                .optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialLinks: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONSocialLinks$.outboundSchema)
                .optional(),
            status: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterStatus$.optional(),
            sso: z
                .array(
                    z.lazy(() => PostTicketsTicketsResponse200ApplicationJSONSso$.outboundSchema)
                )
                .optional(),
            paymentMethods: z
                .lazy(
                    () => PostTicketsTicketsResponse200ApplicationJSONPaymentMethods$.outboundSchema
                )
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialLinks === undefined ? null : { socialLinks: v.socialLinks }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200Visibility$ = z.nativeEnum(
    PostTicketsTicketsResponse200Visibility
);

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyStatus$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONResponseBodyStatus
);

/** @internal */
export namespace PostTicketsTicketsResponse200Notes$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: PostTicketsTicketsResponse200ApplicationJSONPriority | undefined;
        author?: PostTicketsTicketsResponse200ApplicationJSONAuthor$.Inbound | undefined;
        tags?: Array<string> | undefined;
        attachments?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONAttachments$.Inbound>
            | undefined;
        sharedWith?: Array<PostTicketsTicketsResponse200SharedWith$.Inbound> | undefined;
        visibility?: PostTicketsTicketsResponse200Visibility | undefined;
        status?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyStatus | undefined;
        metadata?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200Notes,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            lastAccessed: z.number().optional(),
            reminder: z.number().optional(),
            color: z.string().optional(),
            priority: PostTicketsTicketsResponse200ApplicationJSONPriority$.optional(),
            author: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONAuthor$.inboundSchema)
                .optional(),
            tags: z.array(z.string()).optional(),
            attachments: z
                .array(
                    z.lazy(
                        () => PostTicketsTicketsResponse200ApplicationJSONAttachments$.inboundSchema
                    )
                )
                .optional(),
            sharedWith: z
                .array(z.lazy(() => PostTicketsTicketsResponse200SharedWith$.inboundSchema))
                .optional(),
            visibility: PostTicketsTicketsResponse200Visibility$.optional(),
            status: PostTicketsTicketsResponse200ApplicationJSONResponseBodyStatus$.optional(),
            metadata: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: PostTicketsTicketsResponse200ApplicationJSONPriority | undefined;
        author?: PostTicketsTicketsResponse200ApplicationJSONAuthor$.Outbound | undefined;
        tags?: Array<string> | undefined;
        attachments?:
            | Array<PostTicketsTicketsResponse200ApplicationJSONAttachments$.Outbound>
            | undefined;
        sharedWith?: Array<PostTicketsTicketsResponse200SharedWith$.Outbound> | undefined;
        visibility?: PostTicketsTicketsResponse200Visibility | undefined;
        status?: PostTicketsTicketsResponse200ApplicationJSONResponseBodyStatus | undefined;
        metadata?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200Notes
    > = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            lastAccessed: z.number().optional(),
            reminder: z.number().optional(),
            color: z.string().optional(),
            priority: PostTicketsTicketsResponse200ApplicationJSONPriority$.optional(),
            author: z
                .lazy(() => PostTicketsTicketsResponse200ApplicationJSONAuthor$.outboundSchema)
                .optional(),
            tags: z.array(z.string()).optional(),
            attachments: z
                .array(
                    z.lazy(
                        () =>
                            PostTicketsTicketsResponse200ApplicationJSONAttachments$.outboundSchema
                    )
                )
                .optional(),
            sharedWith: z
                .array(z.lazy(() => PostTicketsTicketsResponse200SharedWith$.outboundSchema))
                .optional(),
            visibility: PostTicketsTicketsResponse200Visibility$.optional(),
            status: PostTicketsTicketsResponse200ApplicationJSONResponseBodyStatus$.optional(),
            metadata: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType$ =
    z.nativeEnum(
        PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType
    );

/** @internal */
export namespace PostTicketsTicketsResponse200AdditionalInfo$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200AdditionalInfo,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200AdditionalInfo
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsSocialProfiles$ {
    export type Inbound = {
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType
            | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostTicketsTicketsResponse200AdditionalInfo$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsSocialProfiles, z.ZodTypeDef, Inbound> =
        z
            .object({
                type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType$.optional(),
                username: z.string().optional(),
                displayName: z.string().optional(),
                url: z.string().optional(),
                avatarUrl: z.string().optional(),
                email: z.string().optional(),
                additionalInfo: z
                    .lazy(() => PostTicketsTicketsResponse200AdditionalInfo$.inboundSchema)
                    .optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                active: z.boolean().optional(),
                deleted: z.boolean().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.type === undefined ? null : { type: v.type }),
                    ...(v.username === undefined ? null : { username: v.username }),
                    ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                    ...(v.url === undefined ? null : { url: v.url }),
                    ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                    ...(v.email === undefined ? null : { email: v.email }),
                    ...(v.additionalInfo === undefined
                        ? null
                        : { additionalInfo: v.additionalInfo }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.active === undefined ? null : { active: v.active }),
                    ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                };
            });

    export type Outbound = {
        type?:
            | PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType
            | undefined;
        username?: string | undefined;
        displayName?: string | undefined;
        url?: string | undefined;
        avatarUrl?: string | undefined;
        email?: string | undefined;
        additionalInfo?: PostTicketsTicketsResponse200AdditionalInfo$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsSocialProfiles
    > = z
        .object({
            type: PostTicketsTicketsResponse200ApplicationJSONResponseBodyUnifiedReporterSocialProfilesType$.optional(),
            username: z.string().optional(),
            displayName: z.string().optional(),
            url: z.string().optional(),
            avatarUrl: z.string().optional(),
            email: z.string().optional(),
            additionalInfo: z
                .lazy(() => PostTicketsTicketsResponse200AdditionalInfo$.outboundSchema)
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.avatarUrl === undefined ? null : { avatarUrl: v.avatarUrl }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.additionalInfo === undefined ? null : { additionalInfo: v.additionalInfo }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200FieldType$ = z.nativeEnum(
    PostTicketsTicketsResponse200FieldType
);

/** @internal */
export namespace PostTicketsTicketsResponse200CustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsTicketsResponse200FieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200CustomFields,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostTicketsTicketsResponse200FieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsTicketsResponse200FieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200CustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostTicketsTicketsResponse200FieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsReporter$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        leadId?: string | undefined;
        company?: string | undefined;
        defaultEmail?: string | undefined;
        emails?: Array<PostTicketsTicketsEmails$.Inbound> | undefined;
        defaultPhone?: string | undefined;
        phones?: Array<PostTicketsTicketsPhones$.Inbound> | undefined;
        address?: PostTicketsTicketsAddress$.Inbound | undefined;
        addresses?: Array<PostTicketsTicketsResponse200Addresses$.Inbound> | undefined;
        birthday?: number | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: PostTicketsTicketsResponse200Notes$.Inbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<PostTicketsTicketsSocialProfiles$.Inbound> | undefined;
        isActive?: boolean | undefined;
        customFields?: Array<PostTicketsTicketsResponse200CustomFields$.Inbound> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsReporter, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            leadId: z.string().optional(),
            company: z.string().optional(),
            defaultEmail: z.string().optional(),
            emails: z.array(z.lazy(() => PostTicketsTicketsEmails$.inboundSchema)).optional(),
            defaultPhone: z.string().optional(),
            phones: z.array(z.lazy(() => PostTicketsTicketsPhones$.inboundSchema)).optional(),
            address: z.lazy(() => PostTicketsTicketsAddress$.inboundSchema).optional(),
            addresses: z
                .array(z.lazy(() => PostTicketsTicketsResponse200Addresses$.inboundSchema))
                .optional(),
            birthday: z.number().optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: z.lazy(() => PostTicketsTicketsResponse200Notes$.inboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z
                .array(z.lazy(() => PostTicketsTicketsSocialProfiles$.inboundSchema))
                .optional(),
            isActive: z.boolean().optional(),
            customFields: z
                .array(z.lazy(() => PostTicketsTicketsResponse200CustomFields$.inboundSchema))
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.leadId === undefined ? null : { leadId: v.leadId }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.defaultEmail === undefined ? null : { defaultEmail: v.defaultEmail }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.defaultPhone === undefined ? null : { defaultPhone: v.defaultPhone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        leadId?: string | undefined;
        company?: string | undefined;
        defaultEmail?: string | undefined;
        emails?: Array<PostTicketsTicketsEmails$.Outbound> | undefined;
        defaultPhone?: string | undefined;
        phones?: Array<PostTicketsTicketsPhones$.Outbound> | undefined;
        address?: PostTicketsTicketsAddress$.Outbound | undefined;
        addresses?: Array<PostTicketsTicketsResponse200Addresses$.Outbound> | undefined;
        birthday?: number | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: PostTicketsTicketsResponse200Notes$.Outbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<PostTicketsTicketsSocialProfiles$.Outbound> | undefined;
        isActive?: boolean | undefined;
        customFields?: Array<PostTicketsTicketsResponse200CustomFields$.Outbound> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsReporter> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            leadId: z.string().optional(),
            company: z.string().optional(),
            defaultEmail: z.string().optional(),
            emails: z.array(z.lazy(() => PostTicketsTicketsEmails$.outboundSchema)).optional(),
            defaultPhone: z.string().optional(),
            phones: z.array(z.lazy(() => PostTicketsTicketsPhones$.outboundSchema)).optional(),
            address: z.lazy(() => PostTicketsTicketsAddress$.outboundSchema).optional(),
            addresses: z
                .array(z.lazy(() => PostTicketsTicketsResponse200Addresses$.outboundSchema))
                .optional(),
            birthday: z.number().optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: z.lazy(() => PostTicketsTicketsResponse200Notes$.outboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z
                .array(z.lazy(() => PostTicketsTicketsSocialProfiles$.outboundSchema))
                .optional(),
            isActive: z.boolean().optional(),
            customFields: z
                .array(z.lazy(() => PostTicketsTicketsResponse200CustomFields$.outboundSchema))
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.leadId === undefined ? null : { leadId: v.leadId }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.defaultEmail === undefined ? null : { defaultEmail: v.defaultEmail }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.defaultPhone === undefined ? null : { defaultPhone: v.defaultPhone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsResponseMetadata$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponseMetadata,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseMetadata
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponseAssociatedWith$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponseAssociatedWith,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseAssociatedWith
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponsePermissions$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponsePermissions,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponsePermissions
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponseAttachments$ {
    export type Inbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostTicketsTicketsResponseMetadata$.Inbound | undefined;
        associatedWith?: PostTicketsTicketsResponseAssociatedWith$.Inbound | undefined;
        permissions?: PostTicketsTicketsResponsePermissions$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponseAttachments,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z.lazy(() => PostTicketsTicketsResponseMetadata$.inboundSchema).optional(),
            associatedWith: z
                .lazy(() => PostTicketsTicketsResponseAssociatedWith$.inboundSchema)
                .optional(),
            permissions: z
                .lazy(() => PostTicketsTicketsResponsePermissions$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fileName?: string | undefined;
        fileSize?: number | undefined;
        fileType?: string | undefined;
        url?: string | undefined;
        thumbnailUrl?: string | undefined;
        previewUrl?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        metadata?: PostTicketsTicketsResponseMetadata$.Outbound | undefined;
        associatedWith?: PostTicketsTicketsResponseAssociatedWith$.Outbound | undefined;
        permissions?: PostTicketsTicketsResponsePermissions$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseAttachments
    > = z
        .object({
            id: z.string().optional(),
            fileName: z.string().optional(),
            fileSize: z.number().optional(),
            fileType: z.string().optional(),
            url: z.string().optional(),
            thumbnailUrl: z.string().optional(),
            previewUrl: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            metadata: z.lazy(() => PostTicketsTicketsResponseMetadata$.outboundSchema).optional(),
            associatedWith: z
                .lazy(() => PostTicketsTicketsResponseAssociatedWith$.outboundSchema)
                .optional(),
            permissions: z
                .lazy(() => PostTicketsTicketsResponsePermissions$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fileName === undefined ? null : { fileName: v.fileName }),
                ...(v.fileSize === undefined ? null : { fileSize: v.fileSize }),
                ...(v.fileType === undefined ? null : { fileType: v.fileType }),
                ...(v.url === undefined ? null : { url: v.url }),
                ...(v.thumbnailUrl === undefined ? null : { thumbnailUrl: v.thumbnailUrl }),
                ...(v.previewUrl === undefined ? null : { previewUrl: v.previewUrl }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.associatedWith === undefined ? null : { associatedWith: v.associatedWith }),
                ...(v.permissions === undefined ? null : { permissions: v.permissions }),
            };
        });
}

/** @internal */
export namespace PostTicketsTicketsResponseAuthor$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsTicketsResponseAuthor, z.ZodTypeDef, Inbound> =
        z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseAuthor
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200Metadata$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200Metadata,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200Metadata
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsComments$ {
    export type Inbound = {
        commentId?: string | undefined;
        author?: PostTicketsTicketsResponseAuthor$.Inbound | undefined;
        text?: string | undefined;
        parentId?: string | undefined;
        likes?: number | undefined;
        flagged?: boolean | undefined;
        metadata?: Array<PostTicketsTicketsResponse200Metadata$.Inbound> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsComments, z.ZodTypeDef, Inbound> = z
        .object({
            commentId: z.string().optional(),
            author: z.lazy(() => PostTicketsTicketsResponseAuthor$.inboundSchema).optional(),
            text: z.string().optional(),
            parentId: z.string().optional(),
            likes: z.number().optional(),
            flagged: z.boolean().optional(),
            metadata: z
                .array(z.lazy(() => PostTicketsTicketsResponse200Metadata$.inboundSchema))
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.commentId === undefined ? null : { commentId: v.commentId }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.text === undefined ? null : { text: v.text }),
                ...(v.parentId === undefined ? null : { parentId: v.parentId }),
                ...(v.likes === undefined ? null : { likes: v.likes }),
                ...(v.flagged === undefined ? null : { flagged: v.flagged }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        commentId?: string | undefined;
        author?: PostTicketsTicketsResponseAuthor$.Outbound | undefined;
        text?: string | undefined;
        parentId?: string | undefined;
        likes?: number | undefined;
        flagged?: boolean | undefined;
        metadata?: Array<PostTicketsTicketsResponse200Metadata$.Outbound> | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsTicketsComments> = z
        .object({
            commentId: z.string().optional(),
            author: z.lazy(() => PostTicketsTicketsResponseAuthor$.outboundSchema).optional(),
            text: z.string().optional(),
            parentId: z.string().optional(),
            likes: z.number().optional(),
            flagged: z.boolean().optional(),
            metadata: z
                .array(z.lazy(() => PostTicketsTicketsResponse200Metadata$.outboundSchema))
                .optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.commentId === undefined ? null : { commentId: v.commentId }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.text === undefined ? null : { text: v.text }),
                ...(v.parentId === undefined ? null : { parentId: v.parentId }),
                ...(v.likes === undefined ? null : { likes: v.likes }),
                ...(v.flagged === undefined ? null : { flagged: v.flagged }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponse200Priority$ = z.nativeEnum(
    PostTicketsTicketsResponse200Priority
);

/** @internal */
export namespace PostTicketsTicketsResponse200Author$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200Author,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200Author
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponse200Attachments$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponse200Attachments,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponse200Attachments
    > = z.object({});
}

/** @internal */
export namespace PostTicketsTicketsResponseSharedWith$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponseSharedWith,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseSharedWith
    > = z.object({});
}

/** @internal */
export const PostTicketsTicketsResponseVisibility$ = z.nativeEnum(
    PostTicketsTicketsResponseVisibility
);

/** @internal */
export const PostTicketsTicketsResponse200ApplicationJSONStatus$ = z.nativeEnum(
    PostTicketsTicketsResponse200ApplicationJSONStatus
);

/** @internal */
export namespace PostTicketsTicketsResponseNotes$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: PostTicketsTicketsResponse200Priority | undefined;
        author?: PostTicketsTicketsResponse200Author$.Inbound | undefined;
        tags?: Array<string> | undefined;
        attachments?: Array<PostTicketsTicketsResponse200Attachments$.Inbound> | undefined;
        sharedWith?: Array<PostTicketsTicketsResponseSharedWith$.Inbound> | undefined;
        visibility?: PostTicketsTicketsResponseVisibility | undefined;
        status?: PostTicketsTicketsResponse200ApplicationJSONStatus | undefined;
        metadata?: Array<string> | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsTicketsResponseNotes, z.ZodTypeDef, Inbound> =
        z
            .object({
                id: z.string().optional(),
                title: z.string().optional(),
                content: z.string().optional(),
                createdAt: z.number().optional(),
                updatedAt: z.number().optional(),
                lastAccessed: z.number().optional(),
                reminder: z.number().optional(),
                color: z.string().optional(),
                priority: PostTicketsTicketsResponse200Priority$.optional(),
                author: z.lazy(() => PostTicketsTicketsResponse200Author$.inboundSchema).optional(),
                tags: z.array(z.string()).optional(),
                attachments: z
                    .array(z.lazy(() => PostTicketsTicketsResponse200Attachments$.inboundSchema))
                    .optional(),
                sharedWith: z
                    .array(z.lazy(() => PostTicketsTicketsResponseSharedWith$.inboundSchema))
                    .optional(),
                visibility: PostTicketsTicketsResponseVisibility$.optional(),
                status: PostTicketsTicketsResponse200ApplicationJSONStatus$.optional(),
                metadata: z.array(z.string()).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.id === undefined ? null : { id: v.id }),
                    ...(v.title === undefined ? null : { title: v.title }),
                    ...(v.content === undefined ? null : { content: v.content }),
                    ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                    ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                    ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                    ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                    ...(v.color === undefined ? null : { color: v.color }),
                    ...(v.priority === undefined ? null : { priority: v.priority }),
                    ...(v.author === undefined ? null : { author: v.author }),
                    ...(v.tags === undefined ? null : { tags: v.tags }),
                    ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                    ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                    ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                    ...(v.status === undefined ? null : { status: v.status }),
                    ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                };
            });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        content?: string | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        lastAccessed?: number | undefined;
        reminder?: number | undefined;
        color?: string | undefined;
        priority?: PostTicketsTicketsResponse200Priority | undefined;
        author?: PostTicketsTicketsResponse200Author$.Outbound | undefined;
        tags?: Array<string> | undefined;
        attachments?: Array<PostTicketsTicketsResponse200Attachments$.Outbound> | undefined;
        sharedWith?: Array<PostTicketsTicketsResponseSharedWith$.Outbound> | undefined;
        visibility?: PostTicketsTicketsResponseVisibility | undefined;
        status?: PostTicketsTicketsResponse200ApplicationJSONStatus | undefined;
        metadata?: Array<string> | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseNotes
    > = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            content: z.string().optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            lastAccessed: z.number().optional(),
            reminder: z.number().optional(),
            color: z.string().optional(),
            priority: PostTicketsTicketsResponse200Priority$.optional(),
            author: z.lazy(() => PostTicketsTicketsResponse200Author$.outboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            attachments: z
                .array(z.lazy(() => PostTicketsTicketsResponse200Attachments$.outboundSchema))
                .optional(),
            sharedWith: z
                .array(z.lazy(() => PostTicketsTicketsResponseSharedWith$.outboundSchema))
                .optional(),
            visibility: PostTicketsTicketsResponseVisibility$.optional(),
            status: PostTicketsTicketsResponse200ApplicationJSONStatus$.optional(),
            metadata: z.array(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.lastAccessed === undefined ? null : { lastAccessed: v.lastAccessed }),
                ...(v.reminder === undefined ? null : { reminder: v.reminder }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.author === undefined ? null : { author: v.author }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.sharedWith === undefined ? null : { sharedWith: v.sharedWith }),
                ...(v.visibility === undefined ? null : { visibility: v.visibility }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });
}

/** @internal */
export const PostTicketsTicketsResponseFieldType$ = z.nativeEnum(
    PostTicketsTicketsResponseFieldType
);

/** @internal */
export namespace PostTicketsTicketsResponseCustomFields$ {
    export type Inbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsTicketsResponseFieldType | undefined;
    };

    export const inboundSchema: z.ZodType<
        PostTicketsTicketsResponseCustomFields,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostTicketsTicketsResponseFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        fieldName?: string | undefined;
        fieldValue?: string | undefined;
        fieldType?: PostTicketsTicketsResponseFieldType | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        PostTicketsTicketsResponseCustomFields
    > = z
        .object({
            id: z.string().optional(),
            fieldName: z.string().optional(),
            fieldValue: z.string().optional(),
            fieldType: PostTicketsTicketsResponseFieldType$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.fieldName === undefined ? null : { fieldName: v.fieldName }),
                ...(v.fieldValue === undefined ? null : { fieldValue: v.fieldValue }),
                ...(v.fieldType === undefined ? null : { fieldType: v.fieldType }),
            };
        });
}

/** @internal */
export namespace PostTicketsUnified$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        status?: PostTicketsTicketsResponseStatus | undefined;
        priority?: PostTicketsTicketsResponsePriority | undefined;
        type?: PostTicketsTicketsResponseType | undefined;
        assignee?: PostTicketsTicketsAssignee$.Inbound | undefined;
        reporter?: PostTicketsTicketsReporter$.Inbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        dueDate?: number | undefined;
        attachments?: Array<PostTicketsTicketsResponseAttachments$.Inbound> | undefined;
        comments?: Array<PostTicketsTicketsComments$.Inbound> | undefined;
        notes?: Array<PostTicketsTicketsResponseNotes$.Inbound> | undefined;
        tags?: Array<string> | undefined;
        customFields?: Array<PostTicketsTicketsResponseCustomFields$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsUnified, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            status: PostTicketsTicketsResponseStatus$.optional(),
            priority: PostTicketsTicketsResponsePriority$.optional(),
            type: PostTicketsTicketsResponseType$.optional(),
            assignee: z.lazy(() => PostTicketsTicketsAssignee$.inboundSchema).optional(),
            reporter: z.lazy(() => PostTicketsTicketsReporter$.inboundSchema).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            dueDate: z.number().optional(),
            attachments: z
                .array(z.lazy(() => PostTicketsTicketsResponseAttachments$.inboundSchema))
                .optional(),
            comments: z.array(z.lazy(() => PostTicketsTicketsComments$.inboundSchema)).optional(),
            notes: z.array(z.lazy(() => PostTicketsTicketsResponseNotes$.inboundSchema)).optional(),
            tags: z.array(z.string()).optional(),
            customFields: z
                .array(z.lazy(() => PostTicketsTicketsResponseCustomFields$.inboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.assignee === undefined ? null : { assignee: v.assignee }),
                ...(v.reporter === undefined ? null : { reporter: v.reporter }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.comments === undefined ? null : { comments: v.comments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        status?: PostTicketsTicketsResponseStatus | undefined;
        priority?: PostTicketsTicketsResponsePriority | undefined;
        type?: PostTicketsTicketsResponseType | undefined;
        assignee?: PostTicketsTicketsAssignee$.Outbound | undefined;
        reporter?: PostTicketsTicketsReporter$.Outbound | undefined;
        createdAt?: number | undefined;
        updatedAt?: number | undefined;
        dueDate?: number | undefined;
        attachments?: Array<PostTicketsTicketsResponseAttachments$.Outbound> | undefined;
        comments?: Array<PostTicketsTicketsComments$.Outbound> | undefined;
        notes?: Array<PostTicketsTicketsResponseNotes$.Outbound> | undefined;
        tags?: Array<string> | undefined;
        customFields?: Array<PostTicketsTicketsResponseCustomFields$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsUnified> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            status: PostTicketsTicketsResponseStatus$.optional(),
            priority: PostTicketsTicketsResponsePriority$.optional(),
            type: PostTicketsTicketsResponseType$.optional(),
            assignee: z.lazy(() => PostTicketsTicketsAssignee$.outboundSchema).optional(),
            reporter: z.lazy(() => PostTicketsTicketsReporter$.outboundSchema).optional(),
            createdAt: z.number().optional(),
            updatedAt: z.number().optional(),
            dueDate: z.number().optional(),
            attachments: z
                .array(z.lazy(() => PostTicketsTicketsResponseAttachments$.outboundSchema))
                .optional(),
            comments: z.array(z.lazy(() => PostTicketsTicketsComments$.outboundSchema)).optional(),
            notes: z
                .array(z.lazy(() => PostTicketsTicketsResponseNotes$.outboundSchema))
                .optional(),
            tags: z.array(z.string()).optional(),
            customFields: z
                .array(z.lazy(() => PostTicketsTicketsResponseCustomFields$.outboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.assignee === undefined ? null : { assignee: v.assignee }),
                ...(v.reporter === undefined ? null : { reporter: v.reporter }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.comments === undefined ? null : { comments: v.comments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
            };
        });
}

/** @internal */
export namespace PostTicketsPassthrough$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<PostTicketsPassthrough, z.ZodTypeDef, Inbound> = z.object(
        {}
    );

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsPassthrough> =
        z.object({});
}

/** @internal */
export namespace PostTicketsCache$ {
    export type Inbound = {
        hit?: boolean | undefined;
        ttl?: number | undefined;
        key?: string | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsCache, z.ZodTypeDef, Inbound> = z
        .object({
            hit: z.boolean().optional(),
            ttl: z.number().int().optional(),
            key: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.hit === undefined ? null : { hit: v.hit }),
                ...(v.ttl === undefined ? null : { ttl: v.ttl }),
                ...(v.key === undefined ? null : { key: v.key }),
            };
        });

    export type Outbound = {
        hit?: boolean | undefined;
        ttl?: number | undefined;
        key?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsCache> = z
        .object({
            hit: z.boolean().optional(),
            ttl: z.number().int().optional(),
            key: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.hit === undefined ? null : { hit: v.hit }),
                ...(v.ttl === undefined ? null : { ttl: v.ttl }),
                ...(v.key === undefined ? null : { key: v.key }),
            };
        });
}

/** @internal */
export namespace PostTicketsMeta$ {
    export type Inbound = {
        timestamp?: number | undefined;
        latency?: number | undefined;
        platformRateLimitRemaining?: number | undefined;
        rateLimitRemaining?: number | undefined;
        cache?: PostTicketsCache$.Inbound | undefined;
        transactionKey?: string | undefined;
        txn?: string | undefined;
        platform?: string | undefined;
        platformVersion?: string | undefined;
        connectionDefinitionKey?: string | undefined;
        action?: string | undefined;
        commonModel?: string | undefined;
        commonModelVersion?: string | undefined;
        connectionKey?: string | undefined;
        hash?: string | undefined;
        heartbeats?: Array<string> | undefined;
        totalTransactions?: number | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsMeta, z.ZodTypeDef, Inbound> = z
        .object({
            timestamp: z.number().int().optional(),
            latency: z.number().int().optional(),
            platformRateLimitRemaining: z.number().int().optional(),
            rateLimitRemaining: z.number().int().optional(),
            cache: z.lazy(() => PostTicketsCache$.inboundSchema).optional(),
            transactionKey: z.string().optional(),
            txn: z.string().optional(),
            platform: z.string().optional(),
            platformVersion: z.string().optional(),
            connectionDefinitionKey: z.string().optional(),
            action: z.string().optional(),
            commonModel: z.string().optional(),
            commonModelVersion: z.string().optional(),
            connectionKey: z.string().optional(),
            hash: z.string().optional(),
            heartbeats: z.array(z.string()).optional(),
            totalTransactions: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
                ...(v.latency === undefined ? null : { latency: v.latency }),
                ...(v.platformRateLimitRemaining === undefined
                    ? null
                    : { platformRateLimitRemaining: v.platformRateLimitRemaining }),
                ...(v.rateLimitRemaining === undefined
                    ? null
                    : { rateLimitRemaining: v.rateLimitRemaining }),
                ...(v.cache === undefined ? null : { cache: v.cache }),
                ...(v.transactionKey === undefined ? null : { transactionKey: v.transactionKey }),
                ...(v.txn === undefined ? null : { txn: v.txn }),
                ...(v.platform === undefined ? null : { platform: v.platform }),
                ...(v.platformVersion === undefined
                    ? null
                    : { platformVersion: v.platformVersion }),
                ...(v.connectionDefinitionKey === undefined
                    ? null
                    : { connectionDefinitionKey: v.connectionDefinitionKey }),
                ...(v.action === undefined ? null : { action: v.action }),
                ...(v.commonModel === undefined ? null : { commonModel: v.commonModel }),
                ...(v.commonModelVersion === undefined
                    ? null
                    : { commonModelVersion: v.commonModelVersion }),
                ...(v.connectionKey === undefined ? null : { connectionKey: v.connectionKey }),
                ...(v.hash === undefined ? null : { hash: v.hash }),
                ...(v.heartbeats === undefined ? null : { heartbeats: v.heartbeats }),
                ...(v.totalTransactions === undefined
                    ? null
                    : { totalTransactions: v.totalTransactions }),
            };
        });

    export type Outbound = {
        timestamp?: number | undefined;
        latency?: number | undefined;
        platformRateLimitRemaining?: number | undefined;
        rateLimitRemaining?: number | undefined;
        cache?: PostTicketsCache$.Outbound | undefined;
        transactionKey?: string | undefined;
        txn?: string | undefined;
        platform?: string | undefined;
        platformVersion?: string | undefined;
        connectionDefinitionKey?: string | undefined;
        action?: string | undefined;
        commonModel?: string | undefined;
        commonModelVersion?: string | undefined;
        connectionKey?: string | undefined;
        hash?: string | undefined;
        heartbeats?: Array<string> | undefined;
        totalTransactions?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsMeta> = z
        .object({
            timestamp: z.number().int().optional(),
            latency: z.number().int().optional(),
            platformRateLimitRemaining: z.number().int().optional(),
            rateLimitRemaining: z.number().int().optional(),
            cache: z.lazy(() => PostTicketsCache$.outboundSchema).optional(),
            transactionKey: z.string().optional(),
            txn: z.string().optional(),
            platform: z.string().optional(),
            platformVersion: z.string().optional(),
            connectionDefinitionKey: z.string().optional(),
            action: z.string().optional(),
            commonModel: z.string().optional(),
            commonModelVersion: z.string().optional(),
            connectionKey: z.string().optional(),
            hash: z.string().optional(),
            heartbeats: z.array(z.string()).optional(),
            totalTransactions: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
                ...(v.latency === undefined ? null : { latency: v.latency }),
                ...(v.platformRateLimitRemaining === undefined
                    ? null
                    : { platformRateLimitRemaining: v.platformRateLimitRemaining }),
                ...(v.rateLimitRemaining === undefined
                    ? null
                    : { rateLimitRemaining: v.rateLimitRemaining }),
                ...(v.cache === undefined ? null : { cache: v.cache }),
                ...(v.transactionKey === undefined ? null : { transactionKey: v.transactionKey }),
                ...(v.txn === undefined ? null : { txn: v.txn }),
                ...(v.platform === undefined ? null : { platform: v.platform }),
                ...(v.platformVersion === undefined
                    ? null
                    : { platformVersion: v.platformVersion }),
                ...(v.connectionDefinitionKey === undefined
                    ? null
                    : { connectionDefinitionKey: v.connectionDefinitionKey }),
                ...(v.action === undefined ? null : { action: v.action }),
                ...(v.commonModel === undefined ? null : { commonModel: v.commonModel }),
                ...(v.commonModelVersion === undefined
                    ? null
                    : { commonModelVersion: v.commonModelVersion }),
                ...(v.connectionKey === undefined ? null : { connectionKey: v.connectionKey }),
                ...(v.hash === undefined ? null : { hash: v.hash }),
                ...(v.heartbeats === undefined ? null : { heartbeats: v.heartbeats }),
                ...(v.totalTransactions === undefined
                    ? null
                    : { totalTransactions: v.totalTransactions }),
            };
        });
}

/** @internal */
export namespace PostTicketsResponseBody$ {
    export type Inbound = {
        status?: string | undefined;
        statusCode?: PostTicketsStatusCode | undefined;
        unified?: PostTicketsUnified$.Inbound | undefined;
        passthrough?: PostTicketsPassthrough$.Inbound | undefined;
        meta?: PostTicketsMeta$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsResponseBody, z.ZodTypeDef, Inbound> = z
        .object({
            status: z.string().optional(),
            statusCode: PostTicketsStatusCode$.optional(),
            unified: z.lazy(() => PostTicketsUnified$.inboundSchema).optional(),
            passthrough: z.lazy(() => PostTicketsPassthrough$.inboundSchema).optional(),
            meta: z.lazy(() => PostTicketsMeta$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.statusCode === undefined ? null : { statusCode: v.statusCode }),
                ...(v.unified === undefined ? null : { unified: v.unified }),
                ...(v.passthrough === undefined ? null : { passthrough: v.passthrough }),
                ...(v.meta === undefined ? null : { meta: v.meta }),
            };
        });

    export type Outbound = {
        status?: string | undefined;
        statusCode?: PostTicketsStatusCode | undefined;
        unified?: PostTicketsUnified$.Outbound | undefined;
        passthrough?: PostTicketsPassthrough$.Outbound | undefined;
        meta?: PostTicketsMeta$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsResponseBody> = z
        .object({
            status: z.string().optional(),
            statusCode: PostTicketsStatusCode$.optional(),
            unified: z.lazy(() => PostTicketsUnified$.outboundSchema).optional(),
            passthrough: z.lazy(() => PostTicketsPassthrough$.outboundSchema).optional(),
            meta: z.lazy(() => PostTicketsMeta$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.statusCode === undefined ? null : { statusCode: v.statusCode }),
                ...(v.unified === undefined ? null : { unified: v.unified }),
                ...(v.passthrough === undefined ? null : { passthrough: v.passthrough }),
                ...(v.meta === undefined ? null : { meta: v.meta }),
            };
        });
}

/** @internal */
export namespace PostTicketsResponse$ {
    export type Inbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
        object?: PostTicketsResponseBody$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<PostTicketsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
            object: z.lazy(() => PostTicketsResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
        object?: PostTicketsResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PostTicketsResponse> = z
        .object({
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
            object: z.lazy(() => PostTicketsResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });
}
