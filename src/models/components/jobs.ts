/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Addresses, Addresses$ } from "./addresses";
import { Companies, Companies$ } from "./companies";
import { EmploymentType, EmploymentType$ } from "./employmenttype";
import { EmploymentUnits, EmploymentUnits$ } from "./employmentunits";
import { Salaries, Salaries$ } from "./salaries";
import { z } from "zod";

export type Jobs = {
    id?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    employmentType?: EmploymentType | undefined;
    location?: Addresses | undefined;
    remote?: boolean | undefined;
    validUntil?: Date | undefined;
    company?: Companies | undefined;
    baseSalary?: Salaries | undefined;
    qualifications?: string | undefined;
    responsibilities?: string | undefined;
    skills?: Array<string> | undefined;
    benefits?: Array<string> | undefined;
    educationRequirements?: string | undefined;
    experienceRequirements?: string | undefined;
    workHours?: string | undefined;
    industry?: string | undefined;
    jobLocationType?: string | undefined;
    occupationalCategory?: string | undefined;
    incentiveCompensation?: string | undefined;
    jobBenefits?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    employmentUnit?: EmploymentUnits | undefined;
    jobImmediateStart?: boolean | undefined;
    jobFlexibleHours?: boolean | undefined;
    jobShifts?: Array<string> | undefined;
    jobTrainingProvided?: boolean | undefined;
    jobTrialPeriod?: string | undefined;
    workFromHome?: boolean | undefined;
    languagesSpoken?: Array<string> | undefined;
    applicationDeadline?: Date | undefined;
    incentives?: string | undefined;
    jobStartDate?: Date | undefined;
    salaryCurrency?: string | undefined;
    modifyToken?: string | undefined;
};

/** @internal */
export namespace Jobs$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        employmentType?: EmploymentType | undefined;
        location?: Addresses$.Inbound | undefined;
        remote?: boolean | undefined;
        validUntil?: string | undefined;
        company?: Companies$.Inbound | undefined;
        baseSalary?: Salaries$.Inbound | undefined;
        qualifications?: string | undefined;
        responsibilities?: string | undefined;
        skills?: Array<string> | undefined;
        benefits?: Array<string> | undefined;
        educationRequirements?: string | undefined;
        experienceRequirements?: string | undefined;
        workHours?: string | undefined;
        industry?: string | undefined;
        jobLocationType?: string | undefined;
        occupationalCategory?: string | undefined;
        incentiveCompensation?: string | undefined;
        jobBenefits?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        employmentUnit?: EmploymentUnits$.Inbound | undefined;
        jobImmediateStart?: boolean | undefined;
        jobFlexibleHours?: boolean | undefined;
        jobShifts?: Array<string> | undefined;
        jobTrainingProvided?: boolean | undefined;
        jobTrialPeriod?: string | undefined;
        workFromHome?: boolean | undefined;
        languagesSpoken?: Array<string> | undefined;
        applicationDeadline?: string | undefined;
        incentives?: string | undefined;
        jobStartDate?: string | undefined;
        salaryCurrency?: string | undefined;
        modifyToken?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Jobs, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            employmentType: EmploymentType$.optional(),
            location: Addresses$?.inboundSchema.optional(),
            remote: z.boolean().optional(),
            validUntil: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            company: Companies$?.inboundSchema.optional(),
            baseSalary: Salaries$?.inboundSchema.optional(),
            qualifications: z.string().optional(),
            responsibilities: z.string().optional(),
            skills: z.array(z.string()).optional(),
            benefits: z.array(z.string()).optional(),
            educationRequirements: z.string().optional(),
            experienceRequirements: z.string().optional(),
            workHours: z.string().optional(),
            industry: z.string().optional(),
            jobLocationType: z.string().optional(),
            occupationalCategory: z.string().optional(),
            incentiveCompensation: z.string().optional(),
            jobBenefits: z.string().optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            employmentUnit: EmploymentUnits$?.inboundSchema.optional(),
            jobImmediateStart: z.boolean().optional(),
            jobFlexibleHours: z.boolean().optional(),
            jobShifts: z.array(z.string()).optional(),
            jobTrainingProvided: z.boolean().optional(),
            jobTrialPeriod: z.string().optional(),
            workFromHome: z.boolean().optional(),
            languagesSpoken: z.array(z.string()).optional(),
            applicationDeadline: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            incentives: z.string().optional(),
            jobStartDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            salaryCurrency: z.string().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.employmentType === undefined ? null : { employmentType: v.employmentType }),
                ...(v.location === undefined ? null : { location: v.location }),
                ...(v.remote === undefined ? null : { remote: v.remote }),
                ...(v.validUntil === undefined ? null : { validUntil: v.validUntil }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.baseSalary === undefined ? null : { baseSalary: v.baseSalary }),
                ...(v.qualifications === undefined ? null : { qualifications: v.qualifications }),
                ...(v.responsibilities === undefined
                    ? null
                    : { responsibilities: v.responsibilities }),
                ...(v.skills === undefined ? null : { skills: v.skills }),
                ...(v.benefits === undefined ? null : { benefits: v.benefits }),
                ...(v.educationRequirements === undefined
                    ? null
                    : { educationRequirements: v.educationRequirements }),
                ...(v.experienceRequirements === undefined
                    ? null
                    : { experienceRequirements: v.experienceRequirements }),
                ...(v.workHours === undefined ? null : { workHours: v.workHours }),
                ...(v.industry === undefined ? null : { industry: v.industry }),
                ...(v.jobLocationType === undefined
                    ? null
                    : { jobLocationType: v.jobLocationType }),
                ...(v.occupationalCategory === undefined
                    ? null
                    : { occupationalCategory: v.occupationalCategory }),
                ...(v.incentiveCompensation === undefined
                    ? null
                    : { incentiveCompensation: v.incentiveCompensation }),
                ...(v.jobBenefits === undefined ? null : { jobBenefits: v.jobBenefits }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.employmentUnit === undefined ? null : { employmentUnit: v.employmentUnit }),
                ...(v.jobImmediateStart === undefined
                    ? null
                    : { jobImmediateStart: v.jobImmediateStart }),
                ...(v.jobFlexibleHours === undefined
                    ? null
                    : { jobFlexibleHours: v.jobFlexibleHours }),
                ...(v.jobShifts === undefined ? null : { jobShifts: v.jobShifts }),
                ...(v.jobTrainingProvided === undefined
                    ? null
                    : { jobTrainingProvided: v.jobTrainingProvided }),
                ...(v.jobTrialPeriod === undefined ? null : { jobTrialPeriod: v.jobTrialPeriod }),
                ...(v.workFromHome === undefined ? null : { workFromHome: v.workFromHome }),
                ...(v.languagesSpoken === undefined
                    ? null
                    : { languagesSpoken: v.languagesSpoken }),
                ...(v.applicationDeadline === undefined
                    ? null
                    : { applicationDeadline: v.applicationDeadline }),
                ...(v.incentives === undefined ? null : { incentives: v.incentives }),
                ...(v.jobStartDate === undefined ? null : { jobStartDate: v.jobStartDate }),
                ...(v.salaryCurrency === undefined ? null : { salaryCurrency: v.salaryCurrency }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        employmentType?: EmploymentType | undefined;
        location?: Addresses$.Outbound | undefined;
        remote?: boolean | undefined;
        validUntil?: string | undefined;
        company?: Companies$.Outbound | undefined;
        baseSalary?: Salaries$.Outbound | undefined;
        qualifications?: string | undefined;
        responsibilities?: string | undefined;
        skills?: Array<string> | undefined;
        benefits?: Array<string> | undefined;
        educationRequirements?: string | undefined;
        experienceRequirements?: string | undefined;
        workHours?: string | undefined;
        industry?: string | undefined;
        jobLocationType?: string | undefined;
        occupationalCategory?: string | undefined;
        incentiveCompensation?: string | undefined;
        jobBenefits?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        employmentUnit?: EmploymentUnits$.Outbound | undefined;
        jobImmediateStart?: boolean | undefined;
        jobFlexibleHours?: boolean | undefined;
        jobShifts?: Array<string> | undefined;
        jobTrainingProvided?: boolean | undefined;
        jobTrialPeriod?: string | undefined;
        workFromHome?: boolean | undefined;
        languagesSpoken?: Array<string> | undefined;
        applicationDeadline?: string | undefined;
        incentives?: string | undefined;
        jobStartDate?: string | undefined;
        salaryCurrency?: string | undefined;
        modifyToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Jobs> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            employmentType: EmploymentType$.optional(),
            location: Addresses$?.outboundSchema.optional(),
            remote: z.boolean().optional(),
            validUntil: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            company: Companies$?.outboundSchema.optional(),
            baseSalary: Salaries$?.outboundSchema.optional(),
            qualifications: z.string().optional(),
            responsibilities: z.string().optional(),
            skills: z.array(z.string()).optional(),
            benefits: z.array(z.string()).optional(),
            educationRequirements: z.string().optional(),
            experienceRequirements: z.string().optional(),
            workHours: z.string().optional(),
            industry: z.string().optional(),
            jobLocationType: z.string().optional(),
            occupationalCategory: z.string().optional(),
            incentiveCompensation: z.string().optional(),
            jobBenefits: z.string().optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            employmentUnit: EmploymentUnits$?.outboundSchema.optional(),
            jobImmediateStart: z.boolean().optional(),
            jobFlexibleHours: z.boolean().optional(),
            jobShifts: z.array(z.string()).optional(),
            jobTrainingProvided: z.boolean().optional(),
            jobTrialPeriod: z.string().optional(),
            workFromHome: z.boolean().optional(),
            languagesSpoken: z.array(z.string()).optional(),
            applicationDeadline: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            incentives: z.string().optional(),
            jobStartDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            salaryCurrency: z.string().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.employmentType === undefined ? null : { employmentType: v.employmentType }),
                ...(v.location === undefined ? null : { location: v.location }),
                ...(v.remote === undefined ? null : { remote: v.remote }),
                ...(v.validUntil === undefined ? null : { validUntil: v.validUntil }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.baseSalary === undefined ? null : { baseSalary: v.baseSalary }),
                ...(v.qualifications === undefined ? null : { qualifications: v.qualifications }),
                ...(v.responsibilities === undefined
                    ? null
                    : { responsibilities: v.responsibilities }),
                ...(v.skills === undefined ? null : { skills: v.skills }),
                ...(v.benefits === undefined ? null : { benefits: v.benefits }),
                ...(v.educationRequirements === undefined
                    ? null
                    : { educationRequirements: v.educationRequirements }),
                ...(v.experienceRequirements === undefined
                    ? null
                    : { experienceRequirements: v.experienceRequirements }),
                ...(v.workHours === undefined ? null : { workHours: v.workHours }),
                ...(v.industry === undefined ? null : { industry: v.industry }),
                ...(v.jobLocationType === undefined
                    ? null
                    : { jobLocationType: v.jobLocationType }),
                ...(v.occupationalCategory === undefined
                    ? null
                    : { occupationalCategory: v.occupationalCategory }),
                ...(v.incentiveCompensation === undefined
                    ? null
                    : { incentiveCompensation: v.incentiveCompensation }),
                ...(v.jobBenefits === undefined ? null : { jobBenefits: v.jobBenefits }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.employmentUnit === undefined ? null : { employmentUnit: v.employmentUnit }),
                ...(v.jobImmediateStart === undefined
                    ? null
                    : { jobImmediateStart: v.jobImmediateStart }),
                ...(v.jobFlexibleHours === undefined
                    ? null
                    : { jobFlexibleHours: v.jobFlexibleHours }),
                ...(v.jobShifts === undefined ? null : { jobShifts: v.jobShifts }),
                ...(v.jobTrainingProvided === undefined
                    ? null
                    : { jobTrainingProvided: v.jobTrainingProvided }),
                ...(v.jobTrialPeriod === undefined ? null : { jobTrialPeriod: v.jobTrialPeriod }),
                ...(v.workFromHome === undefined ? null : { workFromHome: v.workFromHome }),
                ...(v.languagesSpoken === undefined
                    ? null
                    : { languagesSpoken: v.languagesSpoken }),
                ...(v.applicationDeadline === undefined
                    ? null
                    : { applicationDeadline: v.applicationDeadline }),
                ...(v.incentives === undefined ? null : { incentives: v.incentives }),
                ...(v.jobStartDate === undefined ? null : { jobStartDate: v.jobStartDate }),
                ...(v.salaryCurrency === undefined ? null : { salaryCurrency: v.salaryCurrency }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });
}
