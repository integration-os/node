/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Addresses, Addresses$ } from "./addresses";
import { Attachments, Attachments$ } from "./attachments";
import { Customers, Customers$ } from "./customers";
import { InvoiceAdjustments, InvoiceAdjustments$ } from "./invoiceadjustments";
import { InvoiceItems, InvoiceItems$ } from "./invoiceitems";
import { Payments, Payments$ } from "./payments";
import { PaymentTerms, PaymentTerms$ } from "./paymentterms";
import { z } from "zod";

export enum InvoicesStatus {
    Draft = "draft",
    Sent = "sent",
    Paid = "paid",
    Partial = "partial",
    Cancelled = "cancelled",
    Refunded = "refunded",
    Disputed = "disputed",
    Overdue = "overdue",
}

export enum InvoicesCurrency {
    Aed = "AED",
    Afn = "AFN",
    All = "ALL",
    Amd = "AMD",
    Ang = "ANG",
    Aoa = "AOA",
    Ars = "ARS",
    Aud = "AUD",
    Awg = "AWG",
    Azn = "AZN",
    Bam = "BAM",
    Bbd = "BBD",
    Bdt = "BDT",
    Bgn = "BGN",
    Bhd = "BHD",
    Bif = "BIF",
    Bmd = "BMD",
    Bnd = "BND",
    Bob = "BOB",
    Brl = "BRL",
    Bsd = "BSD",
    Btn = "BTN",
    Bwp = "BWP",
    Byn = "BYN",
    Bzd = "BZD",
    Cad = "CAD",
    Cdf = "CDF",
    Chf = "CHF",
    Clp = "CLP",
    Cny = "CNY",
    Cop = "COP",
    Crc = "CRC",
    Cuc = "CUC",
    Cup = "CUP",
    Cve = "CVE",
    Czk = "CZK",
    Djf = "DJF",
    Dkk = "DKK",
    Dop = "DOP",
    Dzd = "DZD",
    Egp = "EGP",
    Ern = "ERN",
    Etb = "ETB",
    Eur = "EUR",
    Fjd = "FJD",
    Fkp = "FKP",
    Fok = "FOK",
    Gbp = "GBP",
    Gel = "GEL",
    Ggp = "GGP",
    Ghs = "GHS",
    Gip = "GIP",
    Gmd = "GMD",
    Gnf = "GNF",
    Gtq = "GTQ",
    Gyd = "GYD",
    Hkd = "HKD",
    Hnl = "HNL",
    Hrk = "HRK",
    Htg = "HTG",
    Huf = "HUF",
    Idr = "IDR",
    Ils = "ILS",
    Imp = "IMP",
    Inr = "INR",
    Iqd = "IQD",
    Irr = "IRR",
    Isk = "ISK",
    Jep = "JEP",
    Jmd = "JMD",
    Jod = "JOD",
    Jpy = "JPY",
    Kes = "KES",
    Kgs = "KGS",
    Khr = "KHR",
    Kid = "KID",
    Kmf = "KMF",
    Kpw = "KPW",
    Krw = "KRW",
    Kwd = "KWD",
    Kyd = "KYD",
    Kzt = "KZT",
    Lak = "LAK",
    Lbp = "LBP",
    Lkr = "LKR",
    Lrd = "LRD",
    Lsl = "LSL",
    Lyd = "LYD",
    Mad = "MAD",
    Mdl = "MDL",
    Mga = "MGA",
    Mkd = "MKD",
    Mmk = "MMK",
    Mnt = "MNT",
    Mop = "MOP",
    Mru = "MRU",
    Mur = "MUR",
    Mvr = "MVR",
    Mwk = "MWK",
    Mxn = "MXN",
    Myr = "MYR",
    Mzn = "MZN",
    Nad = "NAD",
    Ngn = "NGN",
    Nio = "NIO",
    Nok = "NOK",
    Npr = "NPR",
    Nzd = "NZD",
    Omr = "OMR",
    Pab = "PAB",
    Pen = "PEN",
    Pgk = "PGK",
    Php = "PHP",
    Pkr = "PKR",
    Pln = "PLN",
    Pyg = "PYG",
    Qar = "QAR",
    Ron = "RON",
    Rsd = "RSD",
    Rub = "RUB",
    Rwf = "RWF",
    Sar = "SAR",
    Sbd = "SBD",
    Scr = "SCR",
    Sdg = "SDG",
    Sek = "SEK",
    Sgd = "SGD",
    Shp = "SHP",
    Sll = "SLL",
    Sos = "SOS",
    Srd = "SRD",
    Ssp = "SSP",
    Stn = "STN",
    Syp = "SYP",
    Szl = "SZL",
    Thb = "THB",
    Tjs = "TJS",
    Tmt = "TMT",
    Tnd = "TND",
    Top = "TOP",
    Try = "TRY",
    Ttd = "TTD",
    Tvd = "TVD",
    Twd = "TWD",
    Tzs = "TZS",
    Uah = "UAH",
    Ugx = "UGX",
    Usd = "USD",
    Uyu = "UYU",
    Uzs = "UZS",
    Ves = "VES",
    Vnd = "VND",
    Vuv = "VUV",
    Wst = "WST",
    Xaf = "XAF",
    Xcd = "XCD",
    Xdr = "XDR",
    Xof = "XOF",
    Xpf = "XPF",
    Yer = "YER",
    Zar = "ZAR",
    Zmw = "ZMW",
    Zwl = "ZWL",
}

export type Invoices = {
    id?: string | undefined;
    invoiceNumber?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    dueDate?: Date | undefined;
    status?: InvoicesStatus | undefined;
    issuedDate?: Date | undefined;
    currency?: InvoicesCurrency | undefined;
    subtotal?: number | undefined;
    taxTotal?: number | undefined;
    total?: number | undefined;
    notes?: string | undefined;
    terms?: string | undefined;
    customer?: Customers | undefined;
    items?: Array<InvoiceItems> | undefined;
    adjustments?: Array<InvoiceAdjustments> | undefined;
    billingAddress?: Addresses | undefined;
    shippingAddress?: Addresses | undefined;
    payments?: Array<Payments> | undefined;
    paymentTerms?: PaymentTerms | undefined;
    discountTotal?: number | undefined;
    discountPercentage?: number | undefined;
    paidAmount?: number | undefined;
    balanceDue?: number | undefined;
    attachments?: Array<Attachments> | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
    exchangeRate?: number | undefined;
    header?: string | undefined;
    footer?: string | undefined;
    modifyToken?: string | undefined;
};

/** @internal */
export const InvoicesStatus$ = z.nativeEnum(InvoicesStatus);

/** @internal */
export const InvoicesCurrency$ = z.nativeEnum(InvoicesCurrency);

/** @internal */
export namespace Invoices$ {
    export type Inbound = {
        id?: string | undefined;
        invoiceNumber?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        dueDate?: string | undefined;
        status?: InvoicesStatus | undefined;
        issuedDate?: string | undefined;
        currency?: InvoicesCurrency | undefined;
        subtotal?: number | undefined;
        taxTotal?: number | undefined;
        total?: number | undefined;
        notes?: string | undefined;
        terms?: string | undefined;
        customer?: Customers$.Inbound | undefined;
        items?: Array<InvoiceItems$.Inbound> | undefined;
        adjustments?: Array<InvoiceAdjustments$.Inbound> | undefined;
        billingAddress?: Addresses$.Inbound | undefined;
        shippingAddress?: Addresses$.Inbound | undefined;
        payments?: Array<Payments$.Inbound> | undefined;
        paymentTerms?: PaymentTerms$.Inbound | undefined;
        discountTotal?: number | undefined;
        discountPercentage?: number | undefined;
        paidAmount?: number | undefined;
        balanceDue?: number | undefined;
        attachments?: Array<Attachments$.Inbound> | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        exchangeRate?: number | undefined;
        header?: string | undefined;
        footer?: string | undefined;
        modifyToken?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Invoices, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            invoiceNumber: z.string().optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            dueDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            status: InvoicesStatus$.optional(),
            issuedDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            currency: InvoicesCurrency$.optional(),
            subtotal: z.number().optional(),
            taxTotal: z.number().optional(),
            total: z.number().optional(),
            notes: z.string().optional(),
            terms: z.string().optional(),
            customer: Customers$?.inboundSchema.optional(),
            items: z.array(InvoiceItems$?.inboundSchema).optional(),
            adjustments: z.array(InvoiceAdjustments$?.inboundSchema).optional(),
            billingAddress: Addresses$?.inboundSchema.optional(),
            shippingAddress: Addresses$?.inboundSchema.optional(),
            payments: z.array(Payments$?.inboundSchema).optional(),
            paymentTerms: PaymentTerms$?.inboundSchema.optional(),
            discountTotal: z.number().optional(),
            discountPercentage: z.number().optional(),
            paidAmount: z.number().optional(),
            balanceDue: z.number().optional(),
            attachments: z.array(Attachments$?.inboundSchema).optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            exchangeRate: z.number().optional(),
            header: z.string().optional(),
            footer: z.string().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.invoiceNumber === undefined ? null : { invoiceNumber: v.invoiceNumber }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.issuedDate === undefined ? null : { issuedDate: v.issuedDate }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.subtotal === undefined ? null : { subtotal: v.subtotal }),
                ...(v.taxTotal === undefined ? null : { taxTotal: v.taxTotal }),
                ...(v.total === undefined ? null : { total: v.total }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.terms === undefined ? null : { terms: v.terms }),
                ...(v.customer === undefined ? null : { customer: v.customer }),
                ...(v.items === undefined ? null : { items: v.items }),
                ...(v.adjustments === undefined ? null : { adjustments: v.adjustments }),
                ...(v.billingAddress === undefined ? null : { billingAddress: v.billingAddress }),
                ...(v.shippingAddress === undefined
                    ? null
                    : { shippingAddress: v.shippingAddress }),
                ...(v.payments === undefined ? null : { payments: v.payments }),
                ...(v.paymentTerms === undefined ? null : { paymentTerms: v.paymentTerms }),
                ...(v.discountTotal === undefined ? null : { discountTotal: v.discountTotal }),
                ...(v.discountPercentage === undefined
                    ? null
                    : { discountPercentage: v.discountPercentage }),
                ...(v.paidAmount === undefined ? null : { paidAmount: v.paidAmount }),
                ...(v.balanceDue === undefined ? null : { balanceDue: v.balanceDue }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.exchangeRate === undefined ? null : { exchangeRate: v.exchangeRate }),
                ...(v.header === undefined ? null : { header: v.header }),
                ...(v.footer === undefined ? null : { footer: v.footer }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        invoiceNumber?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        dueDate?: string | undefined;
        status?: InvoicesStatus | undefined;
        issuedDate?: string | undefined;
        currency?: InvoicesCurrency | undefined;
        subtotal?: number | undefined;
        taxTotal?: number | undefined;
        total?: number | undefined;
        notes?: string | undefined;
        terms?: string | undefined;
        customer?: Customers$.Outbound | undefined;
        items?: Array<InvoiceItems$.Outbound> | undefined;
        adjustments?: Array<InvoiceAdjustments$.Outbound> | undefined;
        billingAddress?: Addresses$.Outbound | undefined;
        shippingAddress?: Addresses$.Outbound | undefined;
        payments?: Array<Payments$.Outbound> | undefined;
        paymentTerms?: PaymentTerms$.Outbound | undefined;
        discountTotal?: number | undefined;
        discountPercentage?: number | undefined;
        paidAmount?: number | undefined;
        balanceDue?: number | undefined;
        attachments?: Array<Attachments$.Outbound> | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        exchangeRate?: number | undefined;
        header?: string | undefined;
        footer?: string | undefined;
        modifyToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Invoices> = z
        .object({
            id: z.string().optional(),
            invoiceNumber: z.string().optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            dueDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            status: InvoicesStatus$.optional(),
            issuedDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            currency: InvoicesCurrency$.optional(),
            subtotal: z.number().optional(),
            taxTotal: z.number().optional(),
            total: z.number().optional(),
            notes: z.string().optional(),
            terms: z.string().optional(),
            customer: Customers$?.outboundSchema.optional(),
            items: z.array(InvoiceItems$?.outboundSchema).optional(),
            adjustments: z.array(InvoiceAdjustments$?.outboundSchema).optional(),
            billingAddress: Addresses$?.outboundSchema.optional(),
            shippingAddress: Addresses$?.outboundSchema.optional(),
            payments: z.array(Payments$?.outboundSchema).optional(),
            paymentTerms: PaymentTerms$?.outboundSchema.optional(),
            discountTotal: z.number().optional(),
            discountPercentage: z.number().optional(),
            paidAmount: z.number().optional(),
            balanceDue: z.number().optional(),
            attachments: z.array(Attachments$?.outboundSchema).optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            exchangeRate: z.number().optional(),
            header: z.string().optional(),
            footer: z.string().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.invoiceNumber === undefined ? null : { invoiceNumber: v.invoiceNumber }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.issuedDate === undefined ? null : { issuedDate: v.issuedDate }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.subtotal === undefined ? null : { subtotal: v.subtotal }),
                ...(v.taxTotal === undefined ? null : { taxTotal: v.taxTotal }),
                ...(v.total === undefined ? null : { total: v.total }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.terms === undefined ? null : { terms: v.terms }),
                ...(v.customer === undefined ? null : { customer: v.customer }),
                ...(v.items === undefined ? null : { items: v.items }),
                ...(v.adjustments === undefined ? null : { adjustments: v.adjustments }),
                ...(v.billingAddress === undefined ? null : { billingAddress: v.billingAddress }),
                ...(v.shippingAddress === undefined
                    ? null
                    : { shippingAddress: v.shippingAddress }),
                ...(v.payments === undefined ? null : { payments: v.payments }),
                ...(v.paymentTerms === undefined ? null : { paymentTerms: v.paymentTerms }),
                ...(v.discountTotal === undefined ? null : { discountTotal: v.discountTotal }),
                ...(v.discountPercentage === undefined
                    ? null
                    : { discountPercentage: v.discountPercentage }),
                ...(v.paidAmount === undefined ? null : { paidAmount: v.paidAmount }),
                ...(v.balanceDue === undefined ? null : { balanceDue: v.balanceDue }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.exchangeRate === undefined ? null : { exchangeRate: v.exchangeRate }),
                ...(v.header === undefined ? null : { header: v.header }),
                ...(v.footer === undefined ? null : { footer: v.footer }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });
}
