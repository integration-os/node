/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Attachments, Attachments$ } from "./attachments";
import { CustomAttributes, CustomAttributes$ } from "./customattributes";
import { Users, Users$ } from "./users";
import { z } from "zod";

export enum NotificationsPriority {
    High = "HIGH",
    Medium = "MEDIUM",
    Low = "LOW",
}

export type Notifications = {
    notificationId?: string | undefined;
    type?: string | undefined;
    title?: string | undefined;
    message?: string | undefined;
    recipient?: Users | undefined;
    status?: string | undefined;
    priority?: NotificationsPriority | undefined;
    channel?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
    customFields?: Array<CustomAttributes> | undefined;
    attachments?: Array<Attachments> | undefined;
    modifyToken?: string | undefined;
};

/** @internal */
export const NotificationsPriority$ = z.nativeEnum(NotificationsPriority);

/** @internal */
export namespace Notifications$ {
    export type Inbound = {
        notificationId?: string | undefined;
        type?: string | undefined;
        title?: string | undefined;
        message?: string | undefined;
        recipient?: Users$.Inbound | undefined;
        status?: string | undefined;
        priority?: NotificationsPriority | undefined;
        channel?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        customFields?: Array<CustomAttributes$.Inbound> | undefined;
        attachments?: Array<Attachments$.Inbound> | undefined;
        modifyToken?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Notifications, z.ZodTypeDef, Inbound> = z
        .object({
            notificationId: z.string().optional(),
            type: z.string().optional(),
            title: z.string().optional(),
            message: z.string().optional(),
            recipient: Users$?.inboundSchema.optional(),
            status: z.string().optional(),
            priority: NotificationsPriority$.optional(),
            channel: z.string().optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            customFields: z.array(CustomAttributes$?.inboundSchema).optional(),
            attachments: z.array(Attachments$?.inboundSchema).optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.notificationId === undefined ? null : { notificationId: v.notificationId }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.message === undefined ? null : { message: v.message }),
                ...(v.recipient === undefined ? null : { recipient: v.recipient }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.channel === undefined ? null : { channel: v.channel }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });

    export type Outbound = {
        notificationId?: string | undefined;
        type?: string | undefined;
        title?: string | undefined;
        message?: string | undefined;
        recipient?: Users$.Outbound | undefined;
        status?: string | undefined;
        priority?: NotificationsPriority | undefined;
        channel?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        customFields?: Array<CustomAttributes$.Outbound> | undefined;
        attachments?: Array<Attachments$.Outbound> | undefined;
        modifyToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Notifications> = z
        .object({
            notificationId: z.string().optional(),
            type: z.string().optional(),
            title: z.string().optional(),
            message: z.string().optional(),
            recipient: Users$?.outboundSchema.optional(),
            status: z.string().optional(),
            priority: NotificationsPriority$.optional(),
            channel: z.string().optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            customFields: z.array(CustomAttributes$?.outboundSchema).optional(),
            attachments: z.array(Attachments$?.outboundSchema).optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.notificationId === undefined ? null : { notificationId: v.notificationId }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.message === undefined ? null : { message: v.message }),
                ...(v.recipient === undefined ? null : { recipient: v.recipient }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.channel === undefined ? null : { channel: v.channel }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });
}
