/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { BillingDetails, BillingDetails$ } from "./billingdetails";
import { Customers, Customers$ } from "./customers";
import { Invoices, Invoices$ } from "./invoices";
import { Metadata, Metadata$ } from "./metadata";
import { PaymentMethods, PaymentMethods$ } from "./paymentmethods";
import { Refunds, Refunds$ } from "./refunds";
import { ShippingDetails, ShippingDetails$ } from "./shippingdetails";
import { z } from "zod";

export enum PaymentsCurrency {
    Aed = "AED",
    Afn = "AFN",
    All = "ALL",
    Amd = "AMD",
    Ang = "ANG",
    Aoa = "AOA",
    Ars = "ARS",
    Aud = "AUD",
    Awg = "AWG",
    Azn = "AZN",
    Bam = "BAM",
    Bbd = "BBD",
    Bdt = "BDT",
    Bgn = "BGN",
    Bhd = "BHD",
    Bif = "BIF",
    Bmd = "BMD",
    Bnd = "BND",
    Bob = "BOB",
    Brl = "BRL",
    Bsd = "BSD",
    Btn = "BTN",
    Bwp = "BWP",
    Byn = "BYN",
    Bzd = "BZD",
    Cad = "CAD",
    Cdf = "CDF",
    Chf = "CHF",
    Clp = "CLP",
    Cny = "CNY",
    Cop = "COP",
    Crc = "CRC",
    Cuc = "CUC",
    Cup = "CUP",
    Cve = "CVE",
    Czk = "CZK",
    Djf = "DJF",
    Dkk = "DKK",
    Dop = "DOP",
    Dzd = "DZD",
    Egp = "EGP",
    Ern = "ERN",
    Etb = "ETB",
    Eur = "EUR",
    Fjd = "FJD",
    Fkp = "FKP",
    Fok = "FOK",
    Gbp = "GBP",
    Gel = "GEL",
    Ggp = "GGP",
    Ghs = "GHS",
    Gip = "GIP",
    Gmd = "GMD",
    Gnf = "GNF",
    Gtq = "GTQ",
    Gyd = "GYD",
    Hkd = "HKD",
    Hnl = "HNL",
    Hrk = "HRK",
    Htg = "HTG",
    Huf = "HUF",
    Idr = "IDR",
    Ils = "ILS",
    Imp = "IMP",
    Inr = "INR",
    Iqd = "IQD",
    Irr = "IRR",
    Isk = "ISK",
    Jep = "JEP",
    Jmd = "JMD",
    Jod = "JOD",
    Jpy = "JPY",
    Kes = "KES",
    Kgs = "KGS",
    Khr = "KHR",
    Kid = "KID",
    Kmf = "KMF",
    Kpw = "KPW",
    Krw = "KRW",
    Kwd = "KWD",
    Kyd = "KYD",
    Kzt = "KZT",
    Lak = "LAK",
    Lbp = "LBP",
    Lkr = "LKR",
    Lrd = "LRD",
    Lsl = "LSL",
    Lyd = "LYD",
    Mad = "MAD",
    Mdl = "MDL",
    Mga = "MGA",
    Mkd = "MKD",
    Mmk = "MMK",
    Mnt = "MNT",
    Mop = "MOP",
    Mru = "MRU",
    Mur = "MUR",
    Mvr = "MVR",
    Mwk = "MWK",
    Mxn = "MXN",
    Myr = "MYR",
    Mzn = "MZN",
    Nad = "NAD",
    Ngn = "NGN",
    Nio = "NIO",
    Nok = "NOK",
    Npr = "NPR",
    Nzd = "NZD",
    Omr = "OMR",
    Pab = "PAB",
    Pen = "PEN",
    Pgk = "PGK",
    Php = "PHP",
    Pkr = "PKR",
    Pln = "PLN",
    Pyg = "PYG",
    Qar = "QAR",
    Ron = "RON",
    Rsd = "RSD",
    Rub = "RUB",
    Rwf = "RWF",
    Sar = "SAR",
    Sbd = "SBD",
    Scr = "SCR",
    Sdg = "SDG",
    Sek = "SEK",
    Sgd = "SGD",
    Shp = "SHP",
    Sll = "SLL",
    Sos = "SOS",
    Srd = "SRD",
    Ssp = "SSP",
    Stn = "STN",
    Syp = "SYP",
    Szl = "SZL",
    Thb = "THB",
    Tjs = "TJS",
    Tmt = "TMT",
    Tnd = "TND",
    Top = "TOP",
    Try = "TRY",
    Ttd = "TTD",
    Tvd = "TVD",
    Twd = "TWD",
    Tzs = "TZS",
    Uah = "UAH",
    Ugx = "UGX",
    Usd = "USD",
    Uyu = "UYU",
    Uzs = "UZS",
    Ves = "VES",
    Vnd = "VND",
    Vuv = "VUV",
    Wst = "WST",
    Xaf = "XAF",
    Xcd = "XCD",
    Xdr = "XDR",
    Xof = "XOF",
    Xpf = "XPF",
    Yer = "YER",
    Zar = "ZAR",
    Zmw = "ZMW",
    Zwl = "ZWL",
}

export enum PaymentsStatus {
    Pending = "pending",
    Succeeded = "succeeded",
    Failed = "failed",
}

export type Payments = {
    id?: string | undefined;
    amount?: number | undefined;
    currency?: PaymentsCurrency | undefined;
    status?: PaymentsStatus | undefined;
    description?: string | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
    paymentMethod?: PaymentMethods | undefined;
    customer?: Customers | undefined;
    receiptEmail?: string | undefined;
    invoice?: Invoices | undefined;
    metadata?: Metadata | undefined;
    shippingDetails?: ShippingDetails | undefined;
    billingDetails?: BillingDetails | undefined;
    paymentIntent?: string | undefined;
    paymentCaptureMethod?: string | undefined;
    refund?: Refunds | undefined;
    paymentProcessor?: string | undefined;
    webhookUrl?: string | undefined;
};

/** @internal */
export const PaymentsCurrency$ = z.nativeEnum(PaymentsCurrency);

/** @internal */
export const PaymentsStatus$ = z.nativeEnum(PaymentsStatus);

/** @internal */
export namespace Payments$ {
    export type Inbound = {
        id?: string | undefined;
        amount?: number | undefined;
        currency?: PaymentsCurrency | undefined;
        status?: PaymentsStatus | undefined;
        description?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        paymentMethod?: PaymentMethods$.Inbound | undefined;
        customer?: Customers$.Inbound | undefined;
        receiptEmail?: string | undefined;
        invoice?: Invoices$.Inbound | undefined;
        metadata?: Metadata$.Inbound | undefined;
        shippingDetails?: ShippingDetails$.Inbound | undefined;
        billingDetails?: BillingDetails$.Inbound | undefined;
        paymentIntent?: string | undefined;
        paymentCaptureMethod?: string | undefined;
        refund?: Refunds$.Inbound | undefined;
        paymentProcessor?: string | undefined;
        webhookUrl?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Payments, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            amount: z.number().optional(),
            currency: PaymentsCurrency$.optional(),
            status: PaymentsStatus$.optional(),
            description: z.string().optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            paymentMethod: PaymentMethods$?.inboundSchema.optional(),
            customer: Customers$?.inboundSchema.optional(),
            receiptEmail: z.string().optional(),
            invoice: Invoices$?.inboundSchema.optional(),
            metadata: Metadata$?.inboundSchema.optional(),
            shippingDetails: ShippingDetails$?.inboundSchema.optional(),
            billingDetails: BillingDetails$?.inboundSchema.optional(),
            paymentIntent: z.string().optional(),
            paymentCaptureMethod: z.string().optional(),
            refund: Refunds$?.inboundSchema.optional(),
            paymentProcessor: z.string().optional(),
            webhookUrl: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.paymentMethod === undefined ? null : { paymentMethod: v.paymentMethod }),
                ...(v.customer === undefined ? null : { customer: v.customer }),
                ...(v.receiptEmail === undefined ? null : { receiptEmail: v.receiptEmail }),
                ...(v.invoice === undefined ? null : { invoice: v.invoice }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.shippingDetails === undefined
                    ? null
                    : { shippingDetails: v.shippingDetails }),
                ...(v.billingDetails === undefined ? null : { billingDetails: v.billingDetails }),
                ...(v.paymentIntent === undefined ? null : { paymentIntent: v.paymentIntent }),
                ...(v.paymentCaptureMethod === undefined
                    ? null
                    : { paymentCaptureMethod: v.paymentCaptureMethod }),
                ...(v.refund === undefined ? null : { refund: v.refund }),
                ...(v.paymentProcessor === undefined
                    ? null
                    : { paymentProcessor: v.paymentProcessor }),
                ...(v.webhookUrl === undefined ? null : { webhookUrl: v.webhookUrl }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        amount?: number | undefined;
        currency?: PaymentsCurrency | undefined;
        status?: PaymentsStatus | undefined;
        description?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        paymentMethod?: PaymentMethods$.Outbound | undefined;
        customer?: Customers$.Outbound | undefined;
        receiptEmail?: string | undefined;
        invoice?: Invoices$.Outbound | undefined;
        metadata?: Metadata$.Outbound | undefined;
        shippingDetails?: ShippingDetails$.Outbound | undefined;
        billingDetails?: BillingDetails$.Outbound | undefined;
        paymentIntent?: string | undefined;
        paymentCaptureMethod?: string | undefined;
        refund?: Refunds$.Outbound | undefined;
        paymentProcessor?: string | undefined;
        webhookUrl?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Payments> = z
        .object({
            id: z.string().optional(),
            amount: z.number().optional(),
            currency: PaymentsCurrency$.optional(),
            status: PaymentsStatus$.optional(),
            description: z.string().optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            paymentMethod: PaymentMethods$?.outboundSchema.optional(),
            customer: Customers$?.outboundSchema.optional(),
            receiptEmail: z.string().optional(),
            invoice: Invoices$?.outboundSchema.optional(),
            metadata: Metadata$?.outboundSchema.optional(),
            shippingDetails: ShippingDetails$?.outboundSchema.optional(),
            billingDetails: BillingDetails$?.outboundSchema.optional(),
            paymentIntent: z.string().optional(),
            paymentCaptureMethod: z.string().optional(),
            refund: Refunds$?.outboundSchema.optional(),
            paymentProcessor: z.string().optional(),
            webhookUrl: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.paymentMethod === undefined ? null : { paymentMethod: v.paymentMethod }),
                ...(v.customer === undefined ? null : { customer: v.customer }),
                ...(v.receiptEmail === undefined ? null : { receiptEmail: v.receiptEmail }),
                ...(v.invoice === undefined ? null : { invoice: v.invoice }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.shippingDetails === undefined
                    ? null
                    : { shippingDetails: v.shippingDetails }),
                ...(v.billingDetails === undefined ? null : { billingDetails: v.billingDetails }),
                ...(v.paymentIntent === undefined ? null : { paymentIntent: v.paymentIntent }),
                ...(v.paymentCaptureMethod === undefined
                    ? null
                    : { paymentCaptureMethod: v.paymentCaptureMethod }),
                ...(v.refund === undefined ? null : { refund: v.refund }),
                ...(v.paymentProcessor === undefined
                    ? null
                    : { paymentProcessor: v.paymentProcessor }),
                ...(v.webhookUrl === undefined ? null : { webhookUrl: v.webhookUrl }),
            };
        });
}
