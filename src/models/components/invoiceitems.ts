/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CustomAttributes, CustomAttributes$ } from "./customattributes";
import { Dimensions, Dimensions$ } from "./dimensions";
import { Images, Images$ } from "./images";
import { ProductOptions, ProductOptions$ } from "./productoptions";
import { RatingsReviews, RatingsReviews$ } from "./ratingsreviews";
import { Variants, Variants$ } from "./variants";
import { z } from "zod";

export enum InvoiceItemsCurrency {
    Aed = "AED",
    Afn = "AFN",
    All = "ALL",
    Amd = "AMD",
    Ang = "ANG",
    Aoa = "AOA",
    Ars = "ARS",
    Aud = "AUD",
    Awg = "AWG",
    Azn = "AZN",
    Bam = "BAM",
    Bbd = "BBD",
    Bdt = "BDT",
    Bgn = "BGN",
    Bhd = "BHD",
    Bif = "BIF",
    Bmd = "BMD",
    Bnd = "BND",
    Bob = "BOB",
    Brl = "BRL",
    Bsd = "BSD",
    Btn = "BTN",
    Bwp = "BWP",
    Byn = "BYN",
    Bzd = "BZD",
    Cad = "CAD",
    Cdf = "CDF",
    Chf = "CHF",
    Clp = "CLP",
    Cny = "CNY",
    Cop = "COP",
    Crc = "CRC",
    Cuc = "CUC",
    Cup = "CUP",
    Cve = "CVE",
    Czk = "CZK",
    Djf = "DJF",
    Dkk = "DKK",
    Dop = "DOP",
    Dzd = "DZD",
    Egp = "EGP",
    Ern = "ERN",
    Etb = "ETB",
    Eur = "EUR",
    Fjd = "FJD",
    Fkp = "FKP",
    Fok = "FOK",
    Gbp = "GBP",
    Gel = "GEL",
    Ggp = "GGP",
    Ghs = "GHS",
    Gip = "GIP",
    Gmd = "GMD",
    Gnf = "GNF",
    Gtq = "GTQ",
    Gyd = "GYD",
    Hkd = "HKD",
    Hnl = "HNL",
    Hrk = "HRK",
    Htg = "HTG",
    Huf = "HUF",
    Idr = "IDR",
    Ils = "ILS",
    Imp = "IMP",
    Inr = "INR",
    Iqd = "IQD",
    Irr = "IRR",
    Isk = "ISK",
    Jep = "JEP",
    Jmd = "JMD",
    Jod = "JOD",
    Jpy = "JPY",
    Kes = "KES",
    Kgs = "KGS",
    Khr = "KHR",
    Kid = "KID",
    Kmf = "KMF",
    Kpw = "KPW",
    Krw = "KRW",
    Kwd = "KWD",
    Kyd = "KYD",
    Kzt = "KZT",
    Lak = "LAK",
    Lbp = "LBP",
    Lkr = "LKR",
    Lrd = "LRD",
    Lsl = "LSL",
    Lyd = "LYD",
    Mad = "MAD",
    Mdl = "MDL",
    Mga = "MGA",
    Mkd = "MKD",
    Mmk = "MMK",
    Mnt = "MNT",
    Mop = "MOP",
    Mru = "MRU",
    Mur = "MUR",
    Mvr = "MVR",
    Mwk = "MWK",
    Mxn = "MXN",
    Myr = "MYR",
    Mzn = "MZN",
    Nad = "NAD",
    Ngn = "NGN",
    Nio = "NIO",
    Nok = "NOK",
    Npr = "NPR",
    Nzd = "NZD",
    Omr = "OMR",
    Pab = "PAB",
    Pen = "PEN",
    Pgk = "PGK",
    Php = "PHP",
    Pkr = "PKR",
    Pln = "PLN",
    Pyg = "PYG",
    Qar = "QAR",
    Ron = "RON",
    Rsd = "RSD",
    Rub = "RUB",
    Rwf = "RWF",
    Sar = "SAR",
    Sbd = "SBD",
    Scr = "SCR",
    Sdg = "SDG",
    Sek = "SEK",
    Sgd = "SGD",
    Shp = "SHP",
    Sll = "SLL",
    Sos = "SOS",
    Srd = "SRD",
    Ssp = "SSP",
    Stn = "STN",
    Syp = "SYP",
    Szl = "SZL",
    Thb = "THB",
    Tjs = "TJS",
    Tmt = "TMT",
    Tnd = "TND",
    Top = "TOP",
    Try = "TRY",
    Ttd = "TTD",
    Tvd = "TVD",
    Twd = "TWD",
    Tzs = "TZS",
    Uah = "UAH",
    Ugx = "UGX",
    Usd = "USD",
    Uyu = "UYU",
    Uzs = "UZS",
    Ves = "VES",
    Vnd = "VND",
    Vuv = "VUV",
    Wst = "WST",
    Xaf = "XAF",
    Xcd = "XCD",
    Xdr = "XDR",
    Xof = "XOF",
    Xpf = "XPF",
    Yer = "YER",
    Zar = "ZAR",
    Zmw = "ZMW",
    Zwl = "ZWL",
}

export enum Condition {
    New = "new",
    Refurbished = "refurbished",
    Used = "used",
}

export enum InventoryStatus {
    InStock = "in-stock",
    OutOfStock = "out-of-stock",
    BackOrder = "back-order",
    PreOrder = "pre-order",
    Discontinued = "discontinued",
}

export type InvoiceItems = {
    id?: string | undefined;
    name?: string | undefined;
    description?: string | undefined;
    price?: number | undefined;
    currency?: InvoiceItemsCurrency | undefined;
    isAvailable?: boolean | undefined;
    availabilityDate?: Date | undefined;
    tags?: Array<string> | undefined;
    imageUrl?: string | undefined;
    gallery?: Array<Images> | undefined;
    brand?: string | undefined;
    condition?: Condition | undefined;
    dimensions?: Dimensions | undefined;
    weight?: number | undefined;
    inventoryQuantity?: number | undefined;
    inventoryStatus?: InventoryStatus | undefined;
    onSale?: boolean | undefined;
    discount?: number | undefined;
    sku?: string | undefined;
    upc?: string | undefined;
    ean?: string | undefined;
    isbn?: string | undefined;
    mpn?: string | undefined;
    variants?: Array<Variants> | undefined;
    options?: Array<ProductOptions> | undefined;
    reviews?: Array<RatingsReviews> | undefined;
    rating?: number | undefined;
    ratingCount?: number | undefined;
    customFields?: Array<CustomAttributes> | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    deletedAt?: Date | undefined;
    active?: boolean | undefined;
};

/** @internal */
export const InvoiceItemsCurrency$ = z.nativeEnum(InvoiceItemsCurrency);

/** @internal */
export const Condition$ = z.nativeEnum(Condition);

/** @internal */
export const InventoryStatus$ = z.nativeEnum(InventoryStatus);

/** @internal */
export namespace InvoiceItems$ {
    export type Inbound = {
        id?: string | undefined;
        name?: string | undefined;
        description?: string | undefined;
        price?: number | undefined;
        currency?: InvoiceItemsCurrency | undefined;
        isAvailable?: boolean | undefined;
        availabilityDate?: string | undefined;
        tags?: Array<string> | undefined;
        imageUrl?: string | undefined;
        gallery?: Array<Images$.Inbound> | undefined;
        brand?: string | undefined;
        condition?: Condition | undefined;
        dimensions?: Dimensions$.Inbound | undefined;
        weight?: number | undefined;
        inventoryQuantity?: number | undefined;
        inventoryStatus?: InventoryStatus | undefined;
        onSale?: boolean | undefined;
        discount?: number | undefined;
        sku?: string | undefined;
        upc?: string | undefined;
        ean?: string | undefined;
        isbn?: string | undefined;
        mpn?: string | undefined;
        variants?: Array<Variants$.Inbound> | undefined;
        options?: Array<ProductOptions$.Inbound> | undefined;
        reviews?: Array<RatingsReviews$.Inbound> | undefined;
        rating?: number | undefined;
        ratingCount?: number | undefined;
        customFields?: Array<CustomAttributes$.Inbound> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        deletedAt?: string | undefined;
        active?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<InvoiceItems, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            description: z.string().optional(),
            price: z.number().optional(),
            currency: InvoiceItemsCurrency$.optional(),
            isAvailable: z.boolean().optional(),
            availabilityDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            tags: z.array(z.string()).optional(),
            imageUrl: z.string().optional(),
            gallery: z.array(Images$?.inboundSchema).optional(),
            brand: z.string().optional(),
            condition: Condition$.optional(),
            dimensions: Dimensions$?.inboundSchema.optional(),
            weight: z.number().optional(),
            inventoryQuantity: z.number().optional(),
            inventoryStatus: InventoryStatus$.optional(),
            onSale: z.boolean().optional(),
            discount: z.number().optional(),
            sku: z.string().optional(),
            upc: z.string().optional(),
            ean: z.string().optional(),
            isbn: z.string().optional(),
            mpn: z.string().optional(),
            variants: z.array(Variants$?.inboundSchema).optional(),
            options: z.array(ProductOptions$?.inboundSchema).optional(),
            reviews: z.array(RatingsReviews$?.inboundSchema).optional(),
            rating: z.number().optional(),
            ratingCount: z.number().optional(),
            customFields: z.array(CustomAttributes$?.inboundSchema).optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            deletedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            active: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.price === undefined ? null : { price: v.price }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.isAvailable === undefined ? null : { isAvailable: v.isAvailable }),
                ...(v.availabilityDate === undefined
                    ? null
                    : { availabilityDate: v.availabilityDate }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.imageUrl === undefined ? null : { imageUrl: v.imageUrl }),
                ...(v.gallery === undefined ? null : { gallery: v.gallery }),
                ...(v.brand === undefined ? null : { brand: v.brand }),
                ...(v.condition === undefined ? null : { condition: v.condition }),
                ...(v.dimensions === undefined ? null : { dimensions: v.dimensions }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
                ...(v.inventoryQuantity === undefined
                    ? null
                    : { inventoryQuantity: v.inventoryQuantity }),
                ...(v.inventoryStatus === undefined
                    ? null
                    : { inventoryStatus: v.inventoryStatus }),
                ...(v.onSale === undefined ? null : { onSale: v.onSale }),
                ...(v.discount === undefined ? null : { discount: v.discount }),
                ...(v.sku === undefined ? null : { sku: v.sku }),
                ...(v.upc === undefined ? null : { upc: v.upc }),
                ...(v.ean === undefined ? null : { ean: v.ean }),
                ...(v.isbn === undefined ? null : { isbn: v.isbn }),
                ...(v.mpn === undefined ? null : { mpn: v.mpn }),
                ...(v.variants === undefined ? null : { variants: v.variants }),
                ...(v.options === undefined ? null : { options: v.options }),
                ...(v.reviews === undefined ? null : { reviews: v.reviews }),
                ...(v.rating === undefined ? null : { rating: v.rating }),
                ...(v.ratingCount === undefined ? null : { ratingCount: v.ratingCount }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.deletedAt === undefined ? null : { deletedAt: v.deletedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        name?: string | undefined;
        description?: string | undefined;
        price?: number | undefined;
        currency?: InvoiceItemsCurrency | undefined;
        isAvailable?: boolean | undefined;
        availabilityDate?: string | undefined;
        tags?: Array<string> | undefined;
        imageUrl?: string | undefined;
        gallery?: Array<Images$.Outbound> | undefined;
        brand?: string | undefined;
        condition?: Condition | undefined;
        dimensions?: Dimensions$.Outbound | undefined;
        weight?: number | undefined;
        inventoryQuantity?: number | undefined;
        inventoryStatus?: InventoryStatus | undefined;
        onSale?: boolean | undefined;
        discount?: number | undefined;
        sku?: string | undefined;
        upc?: string | undefined;
        ean?: string | undefined;
        isbn?: string | undefined;
        mpn?: string | undefined;
        variants?: Array<Variants$.Outbound> | undefined;
        options?: Array<ProductOptions$.Outbound> | undefined;
        reviews?: Array<RatingsReviews$.Outbound> | undefined;
        rating?: number | undefined;
        ratingCount?: number | undefined;
        customFields?: Array<CustomAttributes$.Outbound> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        deletedAt?: string | undefined;
        active?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InvoiceItems> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            description: z.string().optional(),
            price: z.number().optional(),
            currency: InvoiceItemsCurrency$.optional(),
            isAvailable: z.boolean().optional(),
            availabilityDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            tags: z.array(z.string()).optional(),
            imageUrl: z.string().optional(),
            gallery: z.array(Images$?.outboundSchema).optional(),
            brand: z.string().optional(),
            condition: Condition$.optional(),
            dimensions: Dimensions$?.outboundSchema.optional(),
            weight: z.number().optional(),
            inventoryQuantity: z.number().optional(),
            inventoryStatus: InventoryStatus$.optional(),
            onSale: z.boolean().optional(),
            discount: z.number().optional(),
            sku: z.string().optional(),
            upc: z.string().optional(),
            ean: z.string().optional(),
            isbn: z.string().optional(),
            mpn: z.string().optional(),
            variants: z.array(Variants$?.outboundSchema).optional(),
            options: z.array(ProductOptions$?.outboundSchema).optional(),
            reviews: z.array(RatingsReviews$?.outboundSchema).optional(),
            rating: z.number().optional(),
            ratingCount: z.number().optional(),
            customFields: z.array(CustomAttributes$?.outboundSchema).optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            deletedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            active: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.price === undefined ? null : { price: v.price }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.isAvailable === undefined ? null : { isAvailable: v.isAvailable }),
                ...(v.availabilityDate === undefined
                    ? null
                    : { availabilityDate: v.availabilityDate }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.imageUrl === undefined ? null : { imageUrl: v.imageUrl }),
                ...(v.gallery === undefined ? null : { gallery: v.gallery }),
                ...(v.brand === undefined ? null : { brand: v.brand }),
                ...(v.condition === undefined ? null : { condition: v.condition }),
                ...(v.dimensions === undefined ? null : { dimensions: v.dimensions }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
                ...(v.inventoryQuantity === undefined
                    ? null
                    : { inventoryQuantity: v.inventoryQuantity }),
                ...(v.inventoryStatus === undefined
                    ? null
                    : { inventoryStatus: v.inventoryStatus }),
                ...(v.onSale === undefined ? null : { onSale: v.onSale }),
                ...(v.discount === undefined ? null : { discount: v.discount }),
                ...(v.sku === undefined ? null : { sku: v.sku }),
                ...(v.upc === undefined ? null : { upc: v.upc }),
                ...(v.ean === undefined ? null : { ean: v.ean }),
                ...(v.isbn === undefined ? null : { isbn: v.isbn }),
                ...(v.mpn === undefined ? null : { mpn: v.mpn }),
                ...(v.variants === undefined ? null : { variants: v.variants }),
                ...(v.options === undefined ? null : { options: v.options }),
                ...(v.reviews === undefined ? null : { reviews: v.reviews }),
                ...(v.rating === undefined ? null : { rating: v.rating }),
                ...(v.ratingCount === undefined ? null : { ratingCount: v.ratingCount }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.deletedAt === undefined ? null : { deletedAt: v.deletedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
            };
        });
}
