/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Addresses, Addresses$ } from "./addresses";
import { CustomAttributes, CustomAttributes$ } from "./customattributes";
import { Emails, Emails$ } from "./emails";
import { Notes, Notes$ } from "./notes";
import { Phones, Phones$ } from "./phones";
import { SocialProfiles, SocialProfiles$ } from "./socialprofiles";
import { z } from "zod";

export type Contacts = {
    id?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
    leadId?: string | undefined;
    company?: string | undefined;
    defaultEmail?: string | undefined;
    emails?: Array<Emails> | undefined;
    defaultPhone?: string | undefined;
    phones?: Array<Phones> | undefined;
    address?: Addresses | undefined;
    addresses?: Array<Addresses> | undefined;
    birthday?: Date | undefined;
    relationship?: string | undefined;
    note?: string | undefined;
    notes?: Notes | undefined;
    tags?: Array<string> | undefined;
    websites?: Array<string> | undefined;
    socialProfiles?: Array<SocialProfiles> | undefined;
    isActive?: boolean | undefined;
    customFields?: Array<CustomAttributes> | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    modifyToken?: string | undefined;
};

/** @internal */
export namespace Contacts$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        leadId?: string | undefined;
        company?: string | undefined;
        defaultEmail?: string | undefined;
        emails?: Array<Emails$.Inbound> | undefined;
        defaultPhone?: string | undefined;
        phones?: Array<Phones$.Inbound> | undefined;
        address?: Addresses$.Inbound | undefined;
        addresses?: Array<Addresses$.Inbound> | undefined;
        birthday?: string | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: Notes$.Inbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<SocialProfiles$.Inbound> | undefined;
        isActive?: boolean | undefined;
        customFields?: Array<CustomAttributes$.Inbound> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        modifyToken?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Contacts, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            leadId: z.string().optional(),
            company: z.string().optional(),
            defaultEmail: z.string().optional(),
            emails: z.array(Emails$?.inboundSchema).optional(),
            defaultPhone: z.string().optional(),
            phones: z.array(Phones$?.inboundSchema).optional(),
            address: Addresses$?.inboundSchema.optional(),
            addresses: z.array(Addresses$?.inboundSchema).optional(),
            birthday: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: Notes$?.inboundSchema.optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z.array(SocialProfiles$?.inboundSchema).optional(),
            isActive: z.boolean().optional(),
            customFields: z.array(CustomAttributes$?.inboundSchema).optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.leadId === undefined ? null : { leadId: v.leadId }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.defaultEmail === undefined ? null : { defaultEmail: v.defaultEmail }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.defaultPhone === undefined ? null : { defaultPhone: v.defaultPhone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        lastName?: string | undefined;
        leadId?: string | undefined;
        company?: string | undefined;
        defaultEmail?: string | undefined;
        emails?: Array<Emails$.Outbound> | undefined;
        defaultPhone?: string | undefined;
        phones?: Array<Phones$.Outbound> | undefined;
        address?: Addresses$.Outbound | undefined;
        addresses?: Array<Addresses$.Outbound> | undefined;
        birthday?: string | undefined;
        relationship?: string | undefined;
        note?: string | undefined;
        notes?: Notes$.Outbound | undefined;
        tags?: Array<string> | undefined;
        websites?: Array<string> | undefined;
        socialProfiles?: Array<SocialProfiles$.Outbound> | undefined;
        isActive?: boolean | undefined;
        customFields?: Array<CustomAttributes$.Outbound> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        modifyToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Contacts> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            lastName: z.string().optional(),
            leadId: z.string().optional(),
            company: z.string().optional(),
            defaultEmail: z.string().optional(),
            emails: z.array(Emails$?.outboundSchema).optional(),
            defaultPhone: z.string().optional(),
            phones: z.array(Phones$?.outboundSchema).optional(),
            address: Addresses$?.outboundSchema.optional(),
            addresses: z.array(Addresses$?.outboundSchema).optional(),
            birthday: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            relationship: z.string().optional(),
            note: z.string().optional(),
            notes: Notes$?.outboundSchema.optional(),
            tags: z.array(z.string()).optional(),
            websites: z.array(z.string()).optional(),
            socialProfiles: z.array(SocialProfiles$?.outboundSchema).optional(),
            isActive: z.boolean().optional(),
            customFields: z.array(CustomAttributes$?.outboundSchema).optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.leadId === undefined ? null : { leadId: v.leadId }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.defaultEmail === undefined ? null : { defaultEmail: v.defaultEmail }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.defaultPhone === undefined ? null : { defaultPhone: v.defaultPhone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.birthday === undefined ? null : { birthday: v.birthday }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.note === undefined ? null : { note: v.note }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.websites === undefined ? null : { websites: v.websites }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });
}
