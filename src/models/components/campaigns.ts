/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Attachments, Attachments$ } from "./attachments";
import { PerformanceMetrics, PerformanceMetrics$ } from "./performancemetrics";
import { z } from "zod";

export enum CampaignsType {
    Email = "Email",
    SocialMedia = "Social Media",
    SearchEngine = "Search Engine",
    Display = "Display",
    Other = "Other",
}

export enum CampaignsStatus {
    Planned = "Planned",
    Active = "Active",
    Paused = "Paused",
    Completed = "Completed",
    Cancelled = "Cancelled",
}

export type Campaigns = {
    id?: string | undefined;
    name?: string | undefined;
    type?: CampaignsType | undefined;
    status?: CampaignsStatus | undefined;
    startDate?: Date | undefined;
    endDate?: Date | undefined;
    budget?: number | undefined;
    targetAudience?: string | undefined;
    channels?: Array<string> | undefined;
    performanceMetrics?: PerformanceMetrics | undefined;
    creativeAssets?: Attachments | undefined;
    tags?: Array<string> | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
    modifyToken?: string | undefined;
};

/** @internal */
export const CampaignsType$ = z.nativeEnum(CampaignsType);

/** @internal */
export const CampaignsStatus$ = z.nativeEnum(CampaignsStatus);

/** @internal */
export namespace Campaigns$ {
    export type Inbound = {
        id?: string | undefined;
        name?: string | undefined;
        type?: CampaignsType | undefined;
        status?: CampaignsStatus | undefined;
        startDate?: string | undefined;
        endDate?: string | undefined;
        budget?: number | undefined;
        targetAudience?: string | undefined;
        channels?: Array<string> | undefined;
        performanceMetrics?: PerformanceMetrics$.Inbound | undefined;
        creativeAssets?: Attachments$.Inbound | undefined;
        tags?: Array<string> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        modifyToken?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Campaigns, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            type: CampaignsType$.optional(),
            status: CampaignsStatus$.optional(),
            startDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            endDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            budget: z.number().optional(),
            targetAudience: z.string().optional(),
            channels: z.array(z.string()).optional(),
            performanceMetrics: PerformanceMetrics$?.inboundSchema.optional(),
            creativeAssets: Attachments$?.inboundSchema.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.startDate === undefined ? null : { startDate: v.startDate }),
                ...(v.endDate === undefined ? null : { endDate: v.endDate }),
                ...(v.budget === undefined ? null : { budget: v.budget }),
                ...(v.targetAudience === undefined ? null : { targetAudience: v.targetAudience }),
                ...(v.channels === undefined ? null : { channels: v.channels }),
                ...(v.performanceMetrics === undefined
                    ? null
                    : { performanceMetrics: v.performanceMetrics }),
                ...(v.creativeAssets === undefined ? null : { creativeAssets: v.creativeAssets }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        name?: string | undefined;
        type?: CampaignsType | undefined;
        status?: CampaignsStatus | undefined;
        startDate?: string | undefined;
        endDate?: string | undefined;
        budget?: number | undefined;
        targetAudience?: string | undefined;
        channels?: Array<string> | undefined;
        performanceMetrics?: PerformanceMetrics$.Outbound | undefined;
        creativeAssets?: Attachments$.Outbound | undefined;
        tags?: Array<string> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        modifyToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Campaigns> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            type: CampaignsType$.optional(),
            status: CampaignsStatus$.optional(),
            startDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            endDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            budget: z.number().optional(),
            targetAudience: z.string().optional(),
            channels: z.array(z.string()).optional(),
            performanceMetrics: PerformanceMetrics$?.outboundSchema.optional(),
            creativeAssets: Attachments$?.outboundSchema.optional(),
            tags: z.array(z.string()).optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.startDate === undefined ? null : { startDate: v.startDate }),
                ...(v.endDate === undefined ? null : { endDate: v.endDate }),
                ...(v.budget === undefined ? null : { budget: v.budget }),
                ...(v.targetAudience === undefined ? null : { targetAudience: v.targetAudience }),
                ...(v.channels === undefined ? null : { channels: v.channels }),
                ...(v.performanceMetrics === undefined
                    ? null
                    : { performanceMetrics: v.performanceMetrics }),
                ...(v.creativeAssets === undefined ? null : { creativeAssets: v.creativeAssets }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });
}
