/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Images, Images$ } from "./images";
import { TaxLines, TaxLines$ } from "./taxlines";
import { z } from "zod";

export type Items = {
    id?: string | undefined;
    accountId?: string | undefined;
    accountName?: string | undefined;
    parentId?: string | undefined;
    productId?: string | undefined;
    variantId?: string | undefined;
    quantity?: number | undefined;
    sku?: string | undefined;
    price?: number | undefined;
    currency?: string | undefined;
    linePrice?: number | undefined;
    originalPrice?: number | undefined;
    discountedPrice?: number | undefined;
    title?: string | undefined;
    variantTitle?: string | undefined;
    image?: Images | undefined;
    weight?: number | undefined;
    weightUnit?: string | undefined;
    requiresShipping?: boolean | undefined;
    taxable?: boolean | undefined;
    taxLines?: Array<TaxLines> | undefined;
    fulfillableQuantity?: number | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
    modifyToken?: string | undefined;
};

/** @internal */
export namespace Items$ {
    export type Inbound = {
        id?: string | undefined;
        accountId?: string | undefined;
        accountName?: string | undefined;
        parentId?: string | undefined;
        productId?: string | undefined;
        variantId?: string | undefined;
        quantity?: number | undefined;
        sku?: string | undefined;
        price?: number | undefined;
        currency?: string | undefined;
        linePrice?: number | undefined;
        originalPrice?: number | undefined;
        discountedPrice?: number | undefined;
        title?: string | undefined;
        variantTitle?: string | undefined;
        image?: Images$.Inbound | undefined;
        weight?: number | undefined;
        weightUnit?: string | undefined;
        requiresShipping?: boolean | undefined;
        taxable?: boolean | undefined;
        taxLines?: Array<TaxLines$.Inbound> | undefined;
        fulfillableQuantity?: number | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        modifyToken?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Items, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            accountId: z.string().optional(),
            accountName: z.string().optional(),
            parentId: z.string().optional(),
            productId: z.string().optional(),
            variantId: z.string().optional(),
            quantity: z.number().optional(),
            sku: z.string().optional(),
            price: z.number().optional(),
            currency: z.string().optional(),
            linePrice: z.number().optional(),
            originalPrice: z.number().optional(),
            discountedPrice: z.number().optional(),
            title: z.string().optional(),
            variantTitle: z.string().optional(),
            image: Images$?.inboundSchema.optional(),
            weight: z.number().optional(),
            weightUnit: z.string().optional(),
            requiresShipping: z.boolean().optional(),
            taxable: z.boolean().optional(),
            taxLines: z.array(TaxLines$?.inboundSchema).optional(),
            fulfillableQuantity: z.number().optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.accountName === undefined ? null : { accountName: v.accountName }),
                ...(v.parentId === undefined ? null : { parentId: v.parentId }),
                ...(v.productId === undefined ? null : { productId: v.productId }),
                ...(v.variantId === undefined ? null : { variantId: v.variantId }),
                ...(v.quantity === undefined ? null : { quantity: v.quantity }),
                ...(v.sku === undefined ? null : { sku: v.sku }),
                ...(v.price === undefined ? null : { price: v.price }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.linePrice === undefined ? null : { linePrice: v.linePrice }),
                ...(v.originalPrice === undefined ? null : { originalPrice: v.originalPrice }),
                ...(v.discountedPrice === undefined
                    ? null
                    : { discountedPrice: v.discountedPrice }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.variantTitle === undefined ? null : { variantTitle: v.variantTitle }),
                ...(v.image === undefined ? null : { image: v.image }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
                ...(v.weightUnit === undefined ? null : { weightUnit: v.weightUnit }),
                ...(v.requiresShipping === undefined
                    ? null
                    : { requiresShipping: v.requiresShipping }),
                ...(v.taxable === undefined ? null : { taxable: v.taxable }),
                ...(v.taxLines === undefined ? null : { taxLines: v.taxLines }),
                ...(v.fulfillableQuantity === undefined
                    ? null
                    : { fulfillableQuantity: v.fulfillableQuantity }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        accountId?: string | undefined;
        accountName?: string | undefined;
        parentId?: string | undefined;
        productId?: string | undefined;
        variantId?: string | undefined;
        quantity?: number | undefined;
        sku?: string | undefined;
        price?: number | undefined;
        currency?: string | undefined;
        linePrice?: number | undefined;
        originalPrice?: number | undefined;
        discountedPrice?: number | undefined;
        title?: string | undefined;
        variantTitle?: string | undefined;
        image?: Images$.Outbound | undefined;
        weight?: number | undefined;
        weightUnit?: string | undefined;
        requiresShipping?: boolean | undefined;
        taxable?: boolean | undefined;
        taxLines?: Array<TaxLines$.Outbound> | undefined;
        fulfillableQuantity?: number | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        modifyToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Items> = z
        .object({
            id: z.string().optional(),
            accountId: z.string().optional(),
            accountName: z.string().optional(),
            parentId: z.string().optional(),
            productId: z.string().optional(),
            variantId: z.string().optional(),
            quantity: z.number().optional(),
            sku: z.string().optional(),
            price: z.number().optional(),
            currency: z.string().optional(),
            linePrice: z.number().optional(),
            originalPrice: z.number().optional(),
            discountedPrice: z.number().optional(),
            title: z.string().optional(),
            variantTitle: z.string().optional(),
            image: Images$?.outboundSchema.optional(),
            weight: z.number().optional(),
            weightUnit: z.string().optional(),
            requiresShipping: z.boolean().optional(),
            taxable: z.boolean().optional(),
            taxLines: z.array(TaxLines$?.outboundSchema).optional(),
            fulfillableQuantity: z.number().optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.accountName === undefined ? null : { accountName: v.accountName }),
                ...(v.parentId === undefined ? null : { parentId: v.parentId }),
                ...(v.productId === undefined ? null : { productId: v.productId }),
                ...(v.variantId === undefined ? null : { variantId: v.variantId }),
                ...(v.quantity === undefined ? null : { quantity: v.quantity }),
                ...(v.sku === undefined ? null : { sku: v.sku }),
                ...(v.price === undefined ? null : { price: v.price }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.linePrice === undefined ? null : { linePrice: v.linePrice }),
                ...(v.originalPrice === undefined ? null : { originalPrice: v.originalPrice }),
                ...(v.discountedPrice === undefined
                    ? null
                    : { discountedPrice: v.discountedPrice }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.variantTitle === undefined ? null : { variantTitle: v.variantTitle }),
                ...(v.image === undefined ? null : { image: v.image }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
                ...(v.weightUnit === undefined ? null : { weightUnit: v.weightUnit }),
                ...(v.requiresShipping === undefined
                    ? null
                    : { requiresShipping: v.requiresShipping }),
                ...(v.taxable === undefined ? null : { taxable: v.taxable }),
                ...(v.taxLines === undefined ? null : { taxLines: v.taxLines }),
                ...(v.fulfillableQuantity === undefined
                    ? null
                    : { fulfillableQuantity: v.fulfillableQuantity }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });
}
