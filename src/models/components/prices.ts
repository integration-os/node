/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Currency, Currency$ } from "./currency";
import { z } from "zod";

export type Prices = {
    amount?: number | undefined;
    currency?: Currency | undefined;
};

/** @internal */
export namespace Prices$ {
    export type Inbound = {
        amount?: number | undefined;
        currency?: Currency | undefined;
    };

    export const inboundSchema: z.ZodType<Prices, z.ZodTypeDef, Inbound> = z
        .object({
            amount: z.number().optional(),
            currency: Currency$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
            };
        });

    export type Outbound = {
        amount?: number | undefined;
        currency?: Currency | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Prices> = z
        .object({
            amount: z.number().optional(),
            currency: Currency$.optional(),
        })
        .transform((v) => {
            return {
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
            };
        });
}
