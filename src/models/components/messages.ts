/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Attachments, Attachments$ } from "./attachments";
import { Metadata, Metadata$ } from "./metadata";
import { Reactions, Reactions$ } from "./reactions";
import { z } from "zod";

export enum ReadStatus {
    Sent = "sent",
    Delivered = "delivered",
    Read = "read",
}

export enum MessagesType {
    Text = "text",
    Image = "image",
    Video = "video",
    File = "file",
    Location = "location",
    Sticker = "sticker",
    Contact = "contact",
}

export enum DeliveryStatus {
    Sent = "sent",
    Delivered = "delivered",
    Read = "read",
    Failed = "failed",
}

export enum MessagesPriority {
    Normal = "normal",
    High = "high",
    Urgent = "urgent",
}

export type Messages = {
    id?: string | undefined;
    senderId?: string | undefined;
    receiverId?: string | undefined;
    content?: string | undefined;
    timestamp?: Date | undefined;
    readStatus?: ReadStatus | undefined;
    attachments?: Array<Attachments> | undefined;
    replyToMessageId?: string | undefined;
    type?: MessagesType | undefined;
    threadId?: string | undefined;
    chatId?: string | undefined;
    metadata?: Array<Metadata> | undefined;
    deliveryStatus?: DeliveryStatus | undefined;
    priority?: MessagesPriority | undefined;
    reactions?: Array<Reactions> | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

/** @internal */
export const ReadStatus$ = z.nativeEnum(ReadStatus);

/** @internal */
export const MessagesType$ = z.nativeEnum(MessagesType);

/** @internal */
export const DeliveryStatus$ = z.nativeEnum(DeliveryStatus);

/** @internal */
export const MessagesPriority$ = z.nativeEnum(MessagesPriority);

/** @internal */
export namespace Messages$ {
    export type Inbound = {
        id?: string | undefined;
        senderId?: string | undefined;
        receiverId?: string | undefined;
        content?: string | undefined;
        timestamp?: string | undefined;
        readStatus?: ReadStatus | undefined;
        attachments?: Array<Attachments$.Inbound> | undefined;
        replyToMessageId?: string | undefined;
        type?: MessagesType | undefined;
        threadId?: string | undefined;
        chatId?: string | undefined;
        metadata?: Array<Metadata$.Inbound> | undefined;
        deliveryStatus?: DeliveryStatus | undefined;
        priority?: MessagesPriority | undefined;
        reactions?: Array<Reactions$.Inbound> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<Messages, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            senderId: z.string().optional(),
            receiverId: z.string().optional(),
            content: z.string().optional(),
            timestamp: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            readStatus: ReadStatus$.optional(),
            attachments: z.array(Attachments$?.inboundSchema).optional(),
            replyToMessageId: z.string().optional(),
            type: MessagesType$.optional(),
            threadId: z.string().optional(),
            chatId: z.string().optional(),
            metadata: z.array(Metadata$?.inboundSchema).optional(),
            deliveryStatus: DeliveryStatus$.optional(),
            priority: MessagesPriority$.optional(),
            reactions: z.array(Reactions$?.inboundSchema).optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.senderId === undefined ? null : { senderId: v.senderId }),
                ...(v.receiverId === undefined ? null : { receiverId: v.receiverId }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
                ...(v.readStatus === undefined ? null : { readStatus: v.readStatus }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.replyToMessageId === undefined
                    ? null
                    : { replyToMessageId: v.replyToMessageId }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.threadId === undefined ? null : { threadId: v.threadId }),
                ...(v.chatId === undefined ? null : { chatId: v.chatId }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.deliveryStatus === undefined ? null : { deliveryStatus: v.deliveryStatus }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.reactions === undefined ? null : { reactions: v.reactions }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        senderId?: string | undefined;
        receiverId?: string | undefined;
        content?: string | undefined;
        timestamp?: string | undefined;
        readStatus?: ReadStatus | undefined;
        attachments?: Array<Attachments$.Outbound> | undefined;
        replyToMessageId?: string | undefined;
        type?: MessagesType | undefined;
        threadId?: string | undefined;
        chatId?: string | undefined;
        metadata?: Array<Metadata$.Outbound> | undefined;
        deliveryStatus?: DeliveryStatus | undefined;
        priority?: MessagesPriority | undefined;
        reactions?: Array<Reactions$.Outbound> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Messages> = z
        .object({
            id: z.string().optional(),
            senderId: z.string().optional(),
            receiverId: z.string().optional(),
            content: z.string().optional(),
            timestamp: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            readStatus: ReadStatus$.optional(),
            attachments: z.array(Attachments$?.outboundSchema).optional(),
            replyToMessageId: z.string().optional(),
            type: MessagesType$.optional(),
            threadId: z.string().optional(),
            chatId: z.string().optional(),
            metadata: z.array(Metadata$?.outboundSchema).optional(),
            deliveryStatus: DeliveryStatus$.optional(),
            priority: MessagesPriority$.optional(),
            reactions: z.array(Reactions$?.outboundSchema).optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.senderId === undefined ? null : { senderId: v.senderId }),
                ...(v.receiverId === undefined ? null : { receiverId: v.receiverId }),
                ...(v.content === undefined ? null : { content: v.content }),
                ...(v.timestamp === undefined ? null : { timestamp: v.timestamp }),
                ...(v.readStatus === undefined ? null : { readStatus: v.readStatus }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.replyToMessageId === undefined
                    ? null
                    : { replyToMessageId: v.replyToMessageId }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.threadId === undefined ? null : { threadId: v.threadId }),
                ...(v.chatId === undefined ? null : { chatId: v.chatId }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.deliveryStatus === undefined ? null : { deliveryStatus: v.deliveryStatus }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.reactions === undefined ? null : { reactions: v.reactions }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}
