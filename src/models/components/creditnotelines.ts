/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Products, Products$ } from "./products";
import { z } from "zod";

export type CreditNoteLines = {
    id?: string | undefined;
    description?: string | undefined;
    quantity?: number | undefined;
    unitPrice?: number | undefined;
    total?: number | undefined;
    taxRate?: number | undefined;
    product?: Products | undefined;
    account?: string | undefined;
};

/** @internal */
export namespace CreditNoteLines$ {
    export type Inbound = {
        id?: string | undefined;
        description?: string | undefined;
        quantity?: number | undefined;
        unitPrice?: number | undefined;
        total?: number | undefined;
        taxRate?: number | undefined;
        product?: Products$.Inbound | undefined;
        account?: string | undefined;
    };

    export const inboundSchema: z.ZodType<CreditNoteLines, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            description: z.string().optional(),
            quantity: z.number().optional(),
            unitPrice: z.number().optional(),
            total: z.number().optional(),
            taxRate: z.number().optional(),
            product: Products$?.inboundSchema.optional(),
            account: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.quantity === undefined ? null : { quantity: v.quantity }),
                ...(v.unitPrice === undefined ? null : { unitPrice: v.unitPrice }),
                ...(v.total === undefined ? null : { total: v.total }),
                ...(v.taxRate === undefined ? null : { taxRate: v.taxRate }),
                ...(v.product === undefined ? null : { product: v.product }),
                ...(v.account === undefined ? null : { account: v.account }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        description?: string | undefined;
        quantity?: number | undefined;
        unitPrice?: number | undefined;
        total?: number | undefined;
        taxRate?: number | undefined;
        product?: Products$.Outbound | undefined;
        account?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreditNoteLines> = z
        .object({
            id: z.string().optional(),
            description: z.string().optional(),
            quantity: z.number().optional(),
            unitPrice: z.number().optional(),
            total: z.number().optional(),
            taxRate: z.number().optional(),
            product: Products$?.outboundSchema.optional(),
            account: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.quantity === undefined ? null : { quantity: v.quantity }),
                ...(v.unitPrice === undefined ? null : { unitPrice: v.unitPrice }),
                ...(v.total === undefined ? null : { total: v.total }),
                ...(v.taxRate === undefined ? null : { taxRate: v.taxRate }),
                ...(v.product === undefined ? null : { product: v.product }),
                ...(v.account === undefined ? null : { account: v.account }),
            };
        });
}
