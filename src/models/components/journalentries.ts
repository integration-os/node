/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Attachments, Attachments$ } from "./attachments";
import { Currency, Currency$ } from "./currency";
import { JournalEntryLines, JournalEntryLines$ } from "./journalentrylines";
import { JournalEntryStatus, JournalEntryStatus$ } from "./journalentrystatus";
import { z } from "zod";

export type JournalEntries = {
    id?: string | undefined;
    name?: string | undefined;
    type?: string | undefined;
    description?: string | undefined;
    date?: Date | undefined;
    entryNumber?: string | undefined;
    reference?: string | undefined;
    memo?: string | undefined;
    status?: JournalEntryStatus | undefined;
    attachments?: Array<Attachments> | undefined;
    currency?: Currency | undefined;
    exchangeRate?: number | undefined;
    totalAmount?: number | undefined;
    isReconciled?: boolean | undefined;
    lineItems?: Array<JournalEntryLines> | undefined;
    createdBy?: string | undefined;
    createdAt?: Date | undefined;
    updatedBy?: string | undefined;
    updatedAt?: Date | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
    modifyToken?: string | undefined;
};

/** @internal */
export namespace JournalEntries$ {
    export type Inbound = {
        id?: string | undefined;
        name?: string | undefined;
        type?: string | undefined;
        description?: string | undefined;
        date?: string | undefined;
        entryNumber?: string | undefined;
        reference?: string | undefined;
        memo?: string | undefined;
        status?: JournalEntryStatus | undefined;
        attachments?: Array<Attachments$.Inbound> | undefined;
        currency?: Currency | undefined;
        exchangeRate?: number | undefined;
        totalAmount?: number | undefined;
        isReconciled?: boolean | undefined;
        lineItems?: Array<JournalEntryLines$.Inbound> | undefined;
        createdBy?: string | undefined;
        createdAt?: string | undefined;
        updatedBy?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        modifyToken?: string | undefined;
    };

    export const inboundSchema: z.ZodType<JournalEntries, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            type: z.string().optional(),
            description: z.string().optional(),
            date: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            entryNumber: z.string().optional(),
            reference: z.string().optional(),
            memo: z.string().optional(),
            status: JournalEntryStatus$.optional(),
            attachments: z.array(Attachments$?.inboundSchema).optional(),
            currency: Currency$.optional(),
            exchangeRate: z.number().optional(),
            totalAmount: z.number().optional(),
            isReconciled: z.boolean().optional(),
            lineItems: z.array(JournalEntryLines$?.inboundSchema).optional(),
            createdBy: z.string().optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedBy: z.string().optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.date === undefined ? null : { date: v.date }),
                ...(v.entryNumber === undefined ? null : { entryNumber: v.entryNumber }),
                ...(v.reference === undefined ? null : { reference: v.reference }),
                ...(v.memo === undefined ? null : { memo: v.memo }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.exchangeRate === undefined ? null : { exchangeRate: v.exchangeRate }),
                ...(v.totalAmount === undefined ? null : { totalAmount: v.totalAmount }),
                ...(v.isReconciled === undefined ? null : { isReconciled: v.isReconciled }),
                ...(v.lineItems === undefined ? null : { lineItems: v.lineItems }),
                ...(v.createdBy === undefined ? null : { createdBy: v.createdBy }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedBy === undefined ? null : { updatedBy: v.updatedBy }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        name?: string | undefined;
        type?: string | undefined;
        description?: string | undefined;
        date?: string | undefined;
        entryNumber?: string | undefined;
        reference?: string | undefined;
        memo?: string | undefined;
        status?: JournalEntryStatus | undefined;
        attachments?: Array<Attachments$.Outbound> | undefined;
        currency?: Currency | undefined;
        exchangeRate?: number | undefined;
        totalAmount?: number | undefined;
        isReconciled?: boolean | undefined;
        lineItems?: Array<JournalEntryLines$.Outbound> | undefined;
        createdBy?: string | undefined;
        createdAt?: string | undefined;
        updatedBy?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        modifyToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, JournalEntries> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            type: z.string().optional(),
            description: z.string().optional(),
            date: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            entryNumber: z.string().optional(),
            reference: z.string().optional(),
            memo: z.string().optional(),
            status: JournalEntryStatus$.optional(),
            attachments: z.array(Attachments$?.outboundSchema).optional(),
            currency: Currency$.optional(),
            exchangeRate: z.number().optional(),
            totalAmount: z.number().optional(),
            isReconciled: z.boolean().optional(),
            lineItems: z.array(JournalEntryLines$?.outboundSchema).optional(),
            createdBy: z.string().optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedBy: z.string().optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.date === undefined ? null : { date: v.date }),
                ...(v.entryNumber === undefined ? null : { entryNumber: v.entryNumber }),
                ...(v.reference === undefined ? null : { reference: v.reference }),
                ...(v.memo === undefined ? null : { memo: v.memo }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.exchangeRate === undefined ? null : { exchangeRate: v.exchangeRate }),
                ...(v.totalAmount === undefined ? null : { totalAmount: v.totalAmount }),
                ...(v.isReconciled === undefined ? null : { isReconciled: v.isReconciled }),
                ...(v.lineItems === undefined ? null : { lineItems: v.lineItems }),
                ...(v.createdBy === undefined ? null : { createdBy: v.createdBy }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedBy === undefined ? null : { updatedBy: v.updatedBy }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });
}
