/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Addresses, Addresses$ } from "./addresses";
import { Images, Images$ } from "./images";
import { PaymentMethods, PaymentMethods$ } from "./paymentmethods";
import { Preferences, Preferences$ } from "./preferences";
import { SocialProfiles, SocialProfiles$ } from "./socialprofiles";
import { Sso, Sso$ } from "./sso";
import { z } from "zod";

export enum Gender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
    PreferNotToSay = "Prefer not to say",
}

export enum Roles {
    User = "User",
    Admin = "Admin",
    Moderator = "Moderator",
}

export enum UsersStatus {
    Pending = "Pending",
    Verified = "Verified",
    Suspended = "Suspended",
    Inactive = "Inactive",
}

export type Users = {
    id?: string | undefined;
    firstName?: string | undefined;
    middleName?: string | undefined;
    lastName?: string | undefined;
    email?: string | undefined;
    username?: string | undefined;
    password?: string | undefined;
    profilePicture?: Images | undefined;
    coverPhoto?: Images | undefined;
    gender?: Gender | undefined;
    dateOfBirth?: Date | undefined;
    phoneNumber?: string | undefined;
    isActive?: boolean | undefined;
    lastLogin?: Date | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    addresses?: Array<Addresses> | undefined;
    roles?: Array<Roles> | undefined;
    preferences?: Preferences | undefined;
    bio?: string | undefined;
    website?: string | undefined;
    socialProfiles?: Array<SocialProfiles> | undefined;
    status?: UsersStatus | undefined;
    sso?: Array<Sso> | undefined;
    paymentMethods?: PaymentMethods | undefined;
};

/** @internal */
export const Gender$ = z.nativeEnum(Gender);

/** @internal */
export const Roles$ = z.nativeEnum(Roles);

/** @internal */
export const UsersStatus$ = z.nativeEnum(UsersStatus);

/** @internal */
export namespace Users$ {
    export type Inbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: Images$.Inbound | undefined;
        coverPhoto?: Images$.Inbound | undefined;
        gender?: Gender | undefined;
        dateOfBirth?: string | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        addresses?: Array<Addresses$.Inbound> | undefined;
        roles?: Array<Roles> | undefined;
        preferences?: Preferences$.Inbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialProfiles?: Array<SocialProfiles$.Inbound> | undefined;
        status?: UsersStatus | undefined;
        sso?: Array<Sso$.Inbound> | undefined;
        paymentMethods?: PaymentMethods$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<Users, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: Images$?.inboundSchema.optional(),
            coverPhoto: Images$?.inboundSchema.optional(),
            gender: Gender$.optional(),
            dateOfBirth: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            addresses: z.array(Addresses$?.inboundSchema).optional(),
            roles: z.array(Roles$).optional(),
            preferences: Preferences$?.inboundSchema.optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialProfiles: z.array(SocialProfiles$?.inboundSchema).optional(),
            status: UsersStatus$.optional(),
            sso: z.array(Sso$?.inboundSchema).optional(),
            paymentMethods: PaymentMethods$?.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        firstName?: string | undefined;
        middleName?: string | undefined;
        lastName?: string | undefined;
        email?: string | undefined;
        username?: string | undefined;
        password?: string | undefined;
        profilePicture?: Images$.Outbound | undefined;
        coverPhoto?: Images$.Outbound | undefined;
        gender?: Gender | undefined;
        dateOfBirth?: string | undefined;
        phoneNumber?: string | undefined;
        isActive?: boolean | undefined;
        lastLogin?: string | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        addresses?: Array<Addresses$.Outbound> | undefined;
        roles?: Array<Roles> | undefined;
        preferences?: Preferences$.Outbound | undefined;
        bio?: string | undefined;
        website?: string | undefined;
        socialProfiles?: Array<SocialProfiles$.Outbound> | undefined;
        status?: UsersStatus | undefined;
        sso?: Array<Sso$.Outbound> | undefined;
        paymentMethods?: PaymentMethods$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Users> = z
        .object({
            id: z.string().optional(),
            firstName: z.string().optional(),
            middleName: z.string().optional(),
            lastName: z.string().optional(),
            email: z.string().optional(),
            username: z.string().optional(),
            password: z.string().optional(),
            profilePicture: Images$?.outboundSchema.optional(),
            coverPhoto: Images$?.outboundSchema.optional(),
            gender: Gender$.optional(),
            dateOfBirth: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            phoneNumber: z.string().optional(),
            isActive: z.boolean().optional(),
            lastLogin: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            addresses: z.array(Addresses$?.outboundSchema).optional(),
            roles: z.array(Roles$).optional(),
            preferences: Preferences$?.outboundSchema.optional(),
            bio: z.string().optional(),
            website: z.string().optional(),
            socialProfiles: z.array(SocialProfiles$?.outboundSchema).optional(),
            status: UsersStatus$.optional(),
            sso: z.array(Sso$?.outboundSchema).optional(),
            paymentMethods: PaymentMethods$?.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.middleName === undefined ? null : { middleName: v.middleName }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.username === undefined ? null : { username: v.username }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profilePicture === undefined ? null : { profilePicture: v.profilePicture }),
                ...(v.coverPhoto === undefined ? null : { coverPhoto: v.coverPhoto }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.dateOfBirth === undefined ? null : { dateOfBirth: v.dateOfBirth }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.isActive === undefined ? null : { isActive: v.isActive }),
                ...(v.lastLogin === undefined ? null : { lastLogin: v.lastLogin }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.roles === undefined ? null : { roles: v.roles }),
                ...(v.preferences === undefined ? null : { preferences: v.preferences }),
                ...(v.bio === undefined ? null : { bio: v.bio }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.sso === undefined ? null : { sso: v.sso }),
                ...(v.paymentMethods === undefined ? null : { paymentMethods: v.paymentMethods }),
            };
        });
}
