/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type OperatingExpensesDetails = {
    researchAndDevelopmentExpenses?: number | undefined;
    salesGeneralAndAdministrativeExpenses?: number | undefined;
    otherOperatingExpenses?: number | undefined;
};

/** @internal */
export namespace OperatingExpensesDetails$ {
    export type Inbound = {
        researchAndDevelopmentExpenses?: number | undefined;
        salesGeneralAndAdministrativeExpenses?: number | undefined;
        otherOperatingExpenses?: number | undefined;
    };

    export const inboundSchema: z.ZodType<OperatingExpensesDetails, z.ZodTypeDef, Inbound> = z
        .object({
            researchAndDevelopmentExpenses: z.number().optional(),
            salesGeneralAndAdministrativeExpenses: z.number().optional(),
            otherOperatingExpenses: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.researchAndDevelopmentExpenses === undefined
                    ? null
                    : { researchAndDevelopmentExpenses: v.researchAndDevelopmentExpenses }),
                ...(v.salesGeneralAndAdministrativeExpenses === undefined
                    ? null
                    : {
                          salesGeneralAndAdministrativeExpenses:
                              v.salesGeneralAndAdministrativeExpenses,
                      }),
                ...(v.otherOperatingExpenses === undefined
                    ? null
                    : { otherOperatingExpenses: v.otherOperatingExpenses }),
            };
        });

    export type Outbound = {
        researchAndDevelopmentExpenses?: number | undefined;
        salesGeneralAndAdministrativeExpenses?: number | undefined;
        otherOperatingExpenses?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OperatingExpensesDetails> = z
        .object({
            researchAndDevelopmentExpenses: z.number().optional(),
            salesGeneralAndAdministrativeExpenses: z.number().optional(),
            otherOperatingExpenses: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.researchAndDevelopmentExpenses === undefined
                    ? null
                    : { researchAndDevelopmentExpenses: v.researchAndDevelopmentExpenses }),
                ...(v.salesGeneralAndAdministrativeExpenses === undefined
                    ? null
                    : {
                          salesGeneralAndAdministrativeExpenses:
                              v.salesGeneralAndAdministrativeExpenses,
                      }),
                ...(v.otherOperatingExpenses === undefined
                    ? null
                    : { otherOperatingExpenses: v.otherOperatingExpenses }),
            };
        });
}
