/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Attachments, Attachments$ } from "./attachments";
import { Comments, Comments$ } from "./comments";
import { Contacts, Contacts$ } from "./contacts";
import { CustomAttributes, CustomAttributes$ } from "./customattributes";
import { Notes, Notes$ } from "./notes";
import { Users, Users$ } from "./users";
import { z } from "zod";

export enum TicketsStatus {
    Open = "open",
    Pending = "pending",
    Closed = "closed",
    OnHold = "onHold",
    Resolved = "resolved",
    Cancelled = "cancelled",
    InProgress = "inProgress",
}

export enum TicketsPriority {
    Low = "low",
    Medium = "medium",
    High = "high",
    Urgent = "urgent",
}

export enum TicketsType {
    Question = "question",
    Incident = "incident",
    Problem = "problem",
    Task = "task",
    Bug = "bug",
    FeatureRequest = "featureRequest",
}

export type Tickets = {
    id?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    status?: TicketsStatus | undefined;
    priority?: TicketsPriority | undefined;
    type?: TicketsType | undefined;
    assignee?: Users | undefined;
    reporter?: Contacts | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    dueDate?: Date | undefined;
    attachments?: Array<Attachments> | undefined;
    comments?: Array<Comments> | undefined;
    notes?: Array<Notes> | undefined;
    tags?: Array<string> | undefined;
    customFields?: Array<CustomAttributes> | undefined;
    modifyToken?: string | undefined;
};

/** @internal */
export const TicketsStatus$ = z.nativeEnum(TicketsStatus);

/** @internal */
export const TicketsPriority$ = z.nativeEnum(TicketsPriority);

/** @internal */
export const TicketsType$ = z.nativeEnum(TicketsType);

/** @internal */
export namespace Tickets$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        status?: TicketsStatus | undefined;
        priority?: TicketsPriority | undefined;
        type?: TicketsType | undefined;
        assignee?: Users$.Inbound | undefined;
        reporter?: Contacts$.Inbound | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        dueDate?: string | undefined;
        attachments?: Array<Attachments$.Inbound> | undefined;
        comments?: Array<Comments$.Inbound> | undefined;
        notes?: Array<Notes$.Inbound> | undefined;
        tags?: Array<string> | undefined;
        customFields?: Array<CustomAttributes$.Inbound> | undefined;
        modifyToken?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Tickets, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            status: TicketsStatus$.optional(),
            priority: TicketsPriority$.optional(),
            type: TicketsType$.optional(),
            assignee: Users$?.inboundSchema.optional(),
            reporter: Contacts$?.inboundSchema.optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            dueDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            attachments: z.array(Attachments$?.inboundSchema).optional(),
            comments: z.array(Comments$?.inboundSchema).optional(),
            notes: z.array(Notes$?.inboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            customFields: z.array(CustomAttributes$?.inboundSchema).optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.assignee === undefined ? null : { assignee: v.assignee }),
                ...(v.reporter === undefined ? null : { reporter: v.reporter }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.comments === undefined ? null : { comments: v.comments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        status?: TicketsStatus | undefined;
        priority?: TicketsPriority | undefined;
        type?: TicketsType | undefined;
        assignee?: Users$.Outbound | undefined;
        reporter?: Contacts$.Outbound | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        dueDate?: string | undefined;
        attachments?: Array<Attachments$.Outbound> | undefined;
        comments?: Array<Comments$.Outbound> | undefined;
        notes?: Array<Notes$.Outbound> | undefined;
        tags?: Array<string> | undefined;
        customFields?: Array<CustomAttributes$.Outbound> | undefined;
        modifyToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Tickets> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            status: TicketsStatus$.optional(),
            priority: TicketsPriority$.optional(),
            type: TicketsType$.optional(),
            assignee: Users$?.outboundSchema.optional(),
            reporter: Contacts$?.outboundSchema.optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            dueDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            attachments: z.array(Attachments$?.outboundSchema).optional(),
            comments: z.array(Comments$?.outboundSchema).optional(),
            notes: z.array(Notes$?.outboundSchema).optional(),
            tags: z.array(z.string()).optional(),
            customFields: z.array(CustomAttributes$?.outboundSchema).optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.priority === undefined ? null : { priority: v.priority }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.assignee === undefined ? null : { assignee: v.assignee }),
                ...(v.reporter === undefined ? null : { reporter: v.reporter }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.comments === undefined ? null : { comments: v.comments }),
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });
}
