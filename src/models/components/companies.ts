/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Addresses, Addresses$ } from "./addresses";
import { Contacts, Contacts$ } from "./contacts";
import { CustomAttributes, CustomAttributes$ } from "./customattributes";
import { Emails, Emails$ } from "./emails";
import { Phones, Phones$ } from "./phones";
import { SocialProfiles, SocialProfiles$ } from "./socialprofiles";
import { z } from "zod";

export type Companies = {
    id?: string | undefined;
    name?: string | undefined;
    legalName?: string | undefined;
    type?: string | undefined;
    industry?: string | undefined;
    address?: Addresses | undefined;
    defaultEmail?: string | undefined;
    emails?: Array<Emails> | undefined;
    defaultPhone?: string | undefined;
    phones?: Array<Phones> | undefined;
    website?: string | undefined;
    foundedDate?: Date | undefined;
    numberOfEmployees?: number | undefined;
    revenue?: number | undefined;
    revenueCurrency?: string | undefined;
    tags?: Array<string> | undefined;
    socialProfiles?: Array<SocialProfiles> | undefined;
    logo?: string | undefined;
    description?: string | undefined;
    stockSymbol?: string | undefined;
    parentCompanyId?: string | undefined;
    additionalContacts?: Array<Contacts> | undefined;
    incorporationCountry?: string | undefined;
    incorporationDate?: Date | undefined;
    taxId?: string | undefined;
    regulatoryStatus?: string | undefined;
    dunsNumber?: string | undefined;
    customFields?: Array<CustomAttributes> | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
};

/** @internal */
export namespace Companies$ {
    export type Inbound = {
        id?: string | undefined;
        name?: string | undefined;
        legalName?: string | undefined;
        type?: string | undefined;
        industry?: string | undefined;
        address?: Addresses$.Inbound | undefined;
        defaultEmail?: string | undefined;
        emails?: Array<Emails$.Inbound> | undefined;
        defaultPhone?: string | undefined;
        phones?: Array<Phones$.Inbound> | undefined;
        website?: string | undefined;
        foundedDate?: string | undefined;
        numberOfEmployees?: number | undefined;
        revenue?: number | undefined;
        revenueCurrency?: string | undefined;
        tags?: Array<string> | undefined;
        socialProfiles?: Array<SocialProfiles$.Inbound> | undefined;
        logo?: string | undefined;
        description?: string | undefined;
        stockSymbol?: string | undefined;
        parentCompanyId?: string | undefined;
        additionalContacts?: Array<Contacts$.Inbound> | undefined;
        incorporationCountry?: string | undefined;
        incorporationDate?: string | undefined;
        taxId?: string | undefined;
        regulatoryStatus?: string | undefined;
        dunsNumber?: string | undefined;
        customFields?: Array<CustomAttributes$.Inbound> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Companies, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            legalName: z.string().optional(),
            type: z.string().optional(),
            industry: z.string().optional(),
            address: Addresses$?.inboundSchema.optional(),
            defaultEmail: z.string().optional(),
            emails: z.array(Emails$?.inboundSchema).optional(),
            defaultPhone: z.string().optional(),
            phones: z.array(Phones$?.inboundSchema).optional(),
            website: z.string().optional(),
            foundedDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            numberOfEmployees: z.number().optional(),
            revenue: z.number().optional(),
            revenueCurrency: z.string().optional(),
            tags: z.array(z.string()).optional(),
            socialProfiles: z.array(SocialProfiles$?.inboundSchema).optional(),
            logo: z.string().optional(),
            description: z.string().optional(),
            stockSymbol: z.string().optional(),
            parentCompanyId: z.string().optional(),
            additionalContacts: z.array(Contacts$?.inboundSchema).optional(),
            incorporationCountry: z.string().optional(),
            incorporationDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            taxId: z.string().optional(),
            regulatoryStatus: z.string().optional(),
            dunsNumber: z.string().optional(),
            customFields: z.array(CustomAttributes$?.inboundSchema).optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.legalName === undefined ? null : { legalName: v.legalName }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.industry === undefined ? null : { industry: v.industry }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.defaultEmail === undefined ? null : { defaultEmail: v.defaultEmail }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.defaultPhone === undefined ? null : { defaultPhone: v.defaultPhone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.foundedDate === undefined ? null : { foundedDate: v.foundedDate }),
                ...(v.numberOfEmployees === undefined
                    ? null
                    : { numberOfEmployees: v.numberOfEmployees }),
                ...(v.revenue === undefined ? null : { revenue: v.revenue }),
                ...(v.revenueCurrency === undefined
                    ? null
                    : { revenueCurrency: v.revenueCurrency }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.logo === undefined ? null : { logo: v.logo }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.stockSymbol === undefined ? null : { stockSymbol: v.stockSymbol }),
                ...(v.parentCompanyId === undefined
                    ? null
                    : { parentCompanyId: v.parentCompanyId }),
                ...(v.additionalContacts === undefined
                    ? null
                    : { additionalContacts: v.additionalContacts }),
                ...(v.incorporationCountry === undefined
                    ? null
                    : { incorporationCountry: v.incorporationCountry }),
                ...(v.incorporationDate === undefined
                    ? null
                    : { incorporationDate: v.incorporationDate }),
                ...(v.taxId === undefined ? null : { taxId: v.taxId }),
                ...(v.regulatoryStatus === undefined
                    ? null
                    : { regulatoryStatus: v.regulatoryStatus }),
                ...(v.dunsNumber === undefined ? null : { dunsNumber: v.dunsNumber }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        name?: string | undefined;
        legalName?: string | undefined;
        type?: string | undefined;
        industry?: string | undefined;
        address?: Addresses$.Outbound | undefined;
        defaultEmail?: string | undefined;
        emails?: Array<Emails$.Outbound> | undefined;
        defaultPhone?: string | undefined;
        phones?: Array<Phones$.Outbound> | undefined;
        website?: string | undefined;
        foundedDate?: string | undefined;
        numberOfEmployees?: number | undefined;
        revenue?: number | undefined;
        revenueCurrency?: string | undefined;
        tags?: Array<string> | undefined;
        socialProfiles?: Array<SocialProfiles$.Outbound> | undefined;
        logo?: string | undefined;
        description?: string | undefined;
        stockSymbol?: string | undefined;
        parentCompanyId?: string | undefined;
        additionalContacts?: Array<Contacts$.Outbound> | undefined;
        incorporationCountry?: string | undefined;
        incorporationDate?: string | undefined;
        taxId?: string | undefined;
        regulatoryStatus?: string | undefined;
        dunsNumber?: string | undefined;
        customFields?: Array<CustomAttributes$.Outbound> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Companies> = z
        .object({
            id: z.string().optional(),
            name: z.string().optional(),
            legalName: z.string().optional(),
            type: z.string().optional(),
            industry: z.string().optional(),
            address: Addresses$?.outboundSchema.optional(),
            defaultEmail: z.string().optional(),
            emails: z.array(Emails$?.outboundSchema).optional(),
            defaultPhone: z.string().optional(),
            phones: z.array(Phones$?.outboundSchema).optional(),
            website: z.string().optional(),
            foundedDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            numberOfEmployees: z.number().optional(),
            revenue: z.number().optional(),
            revenueCurrency: z.string().optional(),
            tags: z.array(z.string()).optional(),
            socialProfiles: z.array(SocialProfiles$?.outboundSchema).optional(),
            logo: z.string().optional(),
            description: z.string().optional(),
            stockSymbol: z.string().optional(),
            parentCompanyId: z.string().optional(),
            additionalContacts: z.array(Contacts$?.outboundSchema).optional(),
            incorporationCountry: z.string().optional(),
            incorporationDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            taxId: z.string().optional(),
            regulatoryStatus: z.string().optional(),
            dunsNumber: z.string().optional(),
            customFields: z.array(CustomAttributes$?.outboundSchema).optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.legalName === undefined ? null : { legalName: v.legalName }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.industry === undefined ? null : { industry: v.industry }),
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.defaultEmail === undefined ? null : { defaultEmail: v.defaultEmail }),
                ...(v.emails === undefined ? null : { emails: v.emails }),
                ...(v.defaultPhone === undefined ? null : { defaultPhone: v.defaultPhone }),
                ...(v.phones === undefined ? null : { phones: v.phones }),
                ...(v.website === undefined ? null : { website: v.website }),
                ...(v.foundedDate === undefined ? null : { foundedDate: v.foundedDate }),
                ...(v.numberOfEmployees === undefined
                    ? null
                    : { numberOfEmployees: v.numberOfEmployees }),
                ...(v.revenue === undefined ? null : { revenue: v.revenue }),
                ...(v.revenueCurrency === undefined
                    ? null
                    : { revenueCurrency: v.revenueCurrency }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.socialProfiles === undefined ? null : { socialProfiles: v.socialProfiles }),
                ...(v.logo === undefined ? null : { logo: v.logo }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.stockSymbol === undefined ? null : { stockSymbol: v.stockSymbol }),
                ...(v.parentCompanyId === undefined
                    ? null
                    : { parentCompanyId: v.parentCompanyId }),
                ...(v.additionalContacts === undefined
                    ? null
                    : { additionalContacts: v.additionalContacts }),
                ...(v.incorporationCountry === undefined
                    ? null
                    : { incorporationCountry: v.incorporationCountry }),
                ...(v.incorporationDate === undefined
                    ? null
                    : { incorporationDate: v.incorporationDate }),
                ...(v.taxId === undefined ? null : { taxId: v.taxId }),
                ...(v.regulatoryStatus === undefined
                    ? null
                    : { regulatoryStatus: v.regulatoryStatus }),
                ...(v.dunsNumber === undefined ? null : { dunsNumber: v.dunsNumber }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });
}
