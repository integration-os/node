/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type PurchaseOrderLineItems = {
    id?: string | undefined;
    productId?: string | undefined;
    quantity?: number | undefined;
    unitPrice?: number | undefined;
    totalPrice?: number | undefined;
    description?: string | undefined;
    deliveryDate?: Date | undefined;
    sku?: string | undefined;
    unitOfMeasure?: string | undefined;
    discount?: number | undefined;
};

/** @internal */
export namespace PurchaseOrderLineItems$ {
    export type Inbound = {
        id?: string | undefined;
        productId?: string | undefined;
        quantity?: number | undefined;
        unitPrice?: number | undefined;
        totalPrice?: number | undefined;
        description?: string | undefined;
        deliveryDate?: string | undefined;
        SKU?: string | undefined;
        unitOfMeasure?: string | undefined;
        discount?: number | undefined;
    };

    export const inboundSchema: z.ZodType<PurchaseOrderLineItems, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            productId: z.string().optional(),
            quantity: z.number().optional(),
            unitPrice: z.number().optional(),
            totalPrice: z.number().optional(),
            description: z.string().optional(),
            deliveryDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            SKU: z.string().optional(),
            unitOfMeasure: z.string().optional(),
            discount: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.productId === undefined ? null : { productId: v.productId }),
                ...(v.quantity === undefined ? null : { quantity: v.quantity }),
                ...(v.unitPrice === undefined ? null : { unitPrice: v.unitPrice }),
                ...(v.totalPrice === undefined ? null : { totalPrice: v.totalPrice }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.deliveryDate === undefined ? null : { deliveryDate: v.deliveryDate }),
                ...(v.SKU === undefined ? null : { sku: v.SKU }),
                ...(v.unitOfMeasure === undefined ? null : { unitOfMeasure: v.unitOfMeasure }),
                ...(v.discount === undefined ? null : { discount: v.discount }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        productId?: string | undefined;
        quantity?: number | undefined;
        unitPrice?: number | undefined;
        totalPrice?: number | undefined;
        description?: string | undefined;
        deliveryDate?: string | undefined;
        SKU?: string | undefined;
        unitOfMeasure?: string | undefined;
        discount?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PurchaseOrderLineItems> = z
        .object({
            id: z.string().optional(),
            productId: z.string().optional(),
            quantity: z.number().optional(),
            unitPrice: z.number().optional(),
            totalPrice: z.number().optional(),
            description: z.string().optional(),
            deliveryDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            sku: z.string().optional(),
            unitOfMeasure: z.string().optional(),
            discount: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.productId === undefined ? null : { productId: v.productId }),
                ...(v.quantity === undefined ? null : { quantity: v.quantity }),
                ...(v.unitPrice === undefined ? null : { unitPrice: v.unitPrice }),
                ...(v.totalPrice === undefined ? null : { totalPrice: v.totalPrice }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.deliveryDate === undefined ? null : { deliveryDate: v.deliveryDate }),
                ...(v.sku === undefined ? null : { SKU: v.sku }),
                ...(v.unitOfMeasure === undefined ? null : { unitOfMeasure: v.unitOfMeasure }),
                ...(v.discount === undefined ? null : { discount: v.discount }),
            };
        });
}
