/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Addresses, Addresses$ } from "./addresses";
import { Attachments, Attachments$ } from "./attachments";
import { CreditNoteLines, CreditNoteLines$ } from "./creditnotelines";
import { CreditNoteStatus, CreditNoteStatus$ } from "./creditnotestatus";
import { Currency, Currency$ } from "./currency";
import { Customers, Customers$ } from "./customers";
import { Metadata, Metadata$ } from "./metadata";
import { Payments, Payments$ } from "./payments";
import { z } from "zod";

export type CreditNotes = {
    id?: string | undefined;
    number?: string | undefined;
    amount?: number | undefined;
    currency?: Currency | undefined;
    issuedDate?: Date | undefined;
    status?: CreditNoteStatus | undefined;
    description?: string | undefined;
    memo?: string | undefined;
    adjustment?: number | undefined;
    reason?: string | undefined;
    customer?: Customers | undefined;
    lines?: Array<CreditNoteLines> | undefined;
    billingAddress?: Addresses | undefined;
    shippingAddress?: Addresses | undefined;
    taxAmount?: number | undefined;
    taxRate?: number | undefined;
    discounts?: Array<number> | undefined;
    payments?: Array<Payments> | undefined;
    attachments?: Array<Attachments> | undefined;
    metadata?: Metadata | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
    modifyToken?: string | undefined;
};

/** @internal */
export namespace CreditNotes$ {
    export type Inbound = {
        id?: string | undefined;
        number?: string | undefined;
        amount?: number | undefined;
        currency?: Currency | undefined;
        issuedDate?: string | undefined;
        status?: CreditNoteStatus | undefined;
        description?: string | undefined;
        memo?: string | undefined;
        adjustment?: number | undefined;
        reason?: string | undefined;
        customer?: Customers$.Inbound | undefined;
        lines?: Array<CreditNoteLines$.Inbound> | undefined;
        billingAddress?: Addresses$.Inbound | undefined;
        shippingAddress?: Addresses$.Inbound | undefined;
        taxAmount?: number | undefined;
        taxRate?: number | undefined;
        discounts?: Array<number> | undefined;
        payments?: Array<Payments$.Inbound> | undefined;
        attachments?: Array<Attachments$.Inbound> | undefined;
        metadata?: Metadata$.Inbound | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        modifyToken?: string | undefined;
    };

    export const inboundSchema: z.ZodType<CreditNotes, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            number: z.string().optional(),
            amount: z.number().optional(),
            currency: Currency$.optional(),
            issuedDate: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            status: CreditNoteStatus$.optional(),
            description: z.string().optional(),
            memo: z.string().optional(),
            adjustment: z.number().optional(),
            reason: z.string().optional(),
            customer: Customers$?.inboundSchema.optional(),
            lines: z.array(CreditNoteLines$?.inboundSchema).optional(),
            billingAddress: Addresses$?.inboundSchema.optional(),
            shippingAddress: Addresses$?.inboundSchema.optional(),
            taxAmount: z.number().optional(),
            taxRate: z.number().optional(),
            discounts: z.array(z.number()).optional(),
            payments: z.array(Payments$?.inboundSchema).optional(),
            attachments: z.array(Attachments$?.inboundSchema).optional(),
            metadata: Metadata$?.inboundSchema.optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.number === undefined ? null : { number: v.number }),
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.issuedDate === undefined ? null : { issuedDate: v.issuedDate }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.memo === undefined ? null : { memo: v.memo }),
                ...(v.adjustment === undefined ? null : { adjustment: v.adjustment }),
                ...(v.reason === undefined ? null : { reason: v.reason }),
                ...(v.customer === undefined ? null : { customer: v.customer }),
                ...(v.lines === undefined ? null : { lines: v.lines }),
                ...(v.billingAddress === undefined ? null : { billingAddress: v.billingAddress }),
                ...(v.shippingAddress === undefined
                    ? null
                    : { shippingAddress: v.shippingAddress }),
                ...(v.taxAmount === undefined ? null : { taxAmount: v.taxAmount }),
                ...(v.taxRate === undefined ? null : { taxRate: v.taxRate }),
                ...(v.discounts === undefined ? null : { discounts: v.discounts }),
                ...(v.payments === undefined ? null : { payments: v.payments }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        number?: string | undefined;
        amount?: number | undefined;
        currency?: Currency | undefined;
        issuedDate?: string | undefined;
        status?: CreditNoteStatus | undefined;
        description?: string | undefined;
        memo?: string | undefined;
        adjustment?: number | undefined;
        reason?: string | undefined;
        customer?: Customers$.Outbound | undefined;
        lines?: Array<CreditNoteLines$.Outbound> | undefined;
        billingAddress?: Addresses$.Outbound | undefined;
        shippingAddress?: Addresses$.Outbound | undefined;
        taxAmount?: number | undefined;
        taxRate?: number | undefined;
        discounts?: Array<number> | undefined;
        payments?: Array<Payments$.Outbound> | undefined;
        attachments?: Array<Attachments$.Outbound> | undefined;
        metadata?: Metadata$.Outbound | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
        modifyToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreditNotes> = z
        .object({
            id: z.string().optional(),
            number: z.string().optional(),
            amount: z.number().optional(),
            currency: Currency$.optional(),
            issuedDate: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            status: CreditNoteStatus$.optional(),
            description: z.string().optional(),
            memo: z.string().optional(),
            adjustment: z.number().optional(),
            reason: z.string().optional(),
            customer: Customers$?.outboundSchema.optional(),
            lines: z.array(CreditNoteLines$?.outboundSchema).optional(),
            billingAddress: Addresses$?.outboundSchema.optional(),
            shippingAddress: Addresses$?.outboundSchema.optional(),
            taxAmount: z.number().optional(),
            taxRate: z.number().optional(),
            discounts: z.array(z.number()).optional(),
            payments: z.array(Payments$?.outboundSchema).optional(),
            attachments: z.array(Attachments$?.outboundSchema).optional(),
            metadata: Metadata$?.outboundSchema.optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.number === undefined ? null : { number: v.number }),
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.issuedDate === undefined ? null : { issuedDate: v.issuedDate }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.memo === undefined ? null : { memo: v.memo }),
                ...(v.adjustment === undefined ? null : { adjustment: v.adjustment }),
                ...(v.reason === undefined ? null : { reason: v.reason }),
                ...(v.customer === undefined ? null : { customer: v.customer }),
                ...(v.lines === undefined ? null : { lines: v.lines }),
                ...(v.billingAddress === undefined ? null : { billingAddress: v.billingAddress }),
                ...(v.shippingAddress === undefined
                    ? null
                    : { shippingAddress: v.shippingAddress }),
                ...(v.taxAmount === undefined ? null : { taxAmount: v.taxAmount }),
                ...(v.taxRate === undefined ? null : { taxRate: v.taxRate }),
                ...(v.discounts === undefined ? null : { discounts: v.discounts }),
                ...(v.payments === undefined ? null : { payments: v.payments }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });
}
