/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type References = {
    name?: string | undefined;
    relationship?: string | undefined;
    company?: string | undefined;
    position?: string | undefined;
    email?: string | undefined;
    phoneNumber?: string | undefined;
    modifyToken?: string | undefined;
};

/** @internal */
export namespace References$ {
    export type Inbound = {
        name?: string | undefined;
        relationship?: string | undefined;
        company?: string | undefined;
        position?: string | undefined;
        email?: string | undefined;
        phoneNumber?: string | undefined;
        modifyToken?: string | undefined;
    };

    export const inboundSchema: z.ZodType<References, z.ZodTypeDef, Inbound> = z
        .object({
            name: z.string().optional(),
            relationship: z.string().optional(),
            company: z.string().optional(),
            position: z.string().optional(),
            email: z.string().optional(),
            phoneNumber: z.string().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.position === undefined ? null : { position: v.position }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });

    export type Outbound = {
        name?: string | undefined;
        relationship?: string | undefined;
        company?: string | undefined;
        position?: string | undefined;
        email?: string | undefined;
        phoneNumber?: string | undefined;
        modifyToken?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, References> = z
        .object({
            name: z.string().optional(),
            relationship: z.string().optional(),
            company: z.string().optional(),
            position: z.string().optional(),
            email: z.string().optional(),
            phoneNumber: z.string().optional(),
            modifyToken: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.relationship === undefined ? null : { relationship: v.relationship }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.position === undefined ? null : { position: v.position }),
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.phoneNumber === undefined ? null : { phoneNumber: v.phoneNumber }),
                ...(v.modifyToken === undefined ? null : { modifyToken: v.modifyToken }),
            };
        });
}
