/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Metadata, Metadata$ } from "./metadata";
import { z } from "zod";

export type TaxLines = {
    price?: number | undefined;
    rate?: number | undefined;
    title?: string | undefined;
    taxCode?: string | undefined;
    isInclusive?: boolean | undefined;
    metadata?: Metadata | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    active?: boolean | undefined;
    deleted?: boolean | undefined;
};

/** @internal */
export namespace TaxLines$ {
    export type Inbound = {
        price?: number | undefined;
        rate?: number | undefined;
        title?: string | undefined;
        taxCode?: string | undefined;
        isInclusive?: boolean | undefined;
        metadata?: Metadata$.Inbound | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<TaxLines, z.ZodTypeDef, Inbound> = z
        .object({
            price: z.number().optional(),
            rate: z.number().optional(),
            title: z.string().optional(),
            taxCode: z.string().optional(),
            isInclusive: z.boolean().optional(),
            metadata: Metadata$?.inboundSchema.optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.price === undefined ? null : { price: v.price }),
                ...(v.rate === undefined ? null : { rate: v.rate }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.taxCode === undefined ? null : { taxCode: v.taxCode }),
                ...(v.isInclusive === undefined ? null : { isInclusive: v.isInclusive }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });

    export type Outbound = {
        price?: number | undefined;
        rate?: number | undefined;
        title?: string | undefined;
        taxCode?: string | undefined;
        isInclusive?: boolean | undefined;
        metadata?: Metadata$.Outbound | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        active?: boolean | undefined;
        deleted?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaxLines> = z
        .object({
            price: z.number().optional(),
            rate: z.number().optional(),
            title: z.string().optional(),
            taxCode: z.string().optional(),
            isInclusive: z.boolean().optional(),
            metadata: Metadata$?.outboundSchema.optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            active: z.boolean().optional(),
            deleted: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.price === undefined ? null : { price: v.price }),
                ...(v.rate === undefined ? null : { rate: v.rate }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.taxCode === undefined ? null : { taxCode: v.taxCode }),
                ...(v.isInclusive === undefined ? null : { isInclusive: v.isInclusive }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.active === undefined ? null : { active: v.active }),
                ...(v.deleted === undefined ? null : { deleted: v.deleted }),
            };
        });
}
