/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Attachments, Attachments$ } from "./attachments";
import { Brands, Brands$ } from "./brands";
import { CustomAttributes, CustomAttributes$ } from "./customattributes";
import { Dimensions, Dimensions$ } from "./dimensions";
import { Images, Images$ } from "./images";
import { InventoryLocations, InventoryLocations$ } from "./inventorylocations";
import { KeyValues, KeyValues$ } from "./keyvalues";
import { Localizations, Localizations$ } from "./localizations";
import { Prices, Prices$ } from "./prices";
import { ProductOptions, ProductOptions$ } from "./productoptions";
import { Taxes, Taxes$ } from "./taxes";
import { Variants, Variants$ } from "./variants";
import { z } from "zod";

export enum SkuValidation {
    GlobalUnique = "global_unique",
    LocalUnique = "local_unique",
    None = "none",
}

export enum ProductsStatus {
    Active = "active",
    Archived = "archived",
    Preorder = "preorder",
    Draft = "draft",
    Deleted = "deleted",
}

export type Products = {
    id?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    prices?: Array<Prices> | undefined;
    sku?: string | undefined;
    skuValidation?: SkuValidation | undefined;
    images?: Array<Images> | undefined;
    variants?: Array<Variants> | undefined;
    options?: Array<ProductOptions> | undefined;
    categories?: Array<string> | undefined;
    tags?: Array<string> | undefined;
    vendor?: string | undefined;
    brand?: Brands | undefined;
    inventoryQuantity?: number | undefined;
    inventoryLocation?: InventoryLocations | undefined;
    availableForSale?: boolean | undefined;
    dimensions?: Dimensions | undefined;
    weight?: number | undefined;
    weightUnit?: string | undefined;
    type?: string | undefined;
    metaTitle?: string | undefined;
    metaDescription?: string | undefined;
    seoKeywords?: Array<string> | undefined;
    slug?: string | undefined;
    accountIds?: Array<KeyValues> | undefined;
    customFields?: Array<CustomAttributes> | undefined;
    isDownloadable?: boolean | undefined;
    downloadFiles?: Array<Attachments> | undefined;
    relatedProducts?: Array<string> | undefined;
    createdAt?: Date | undefined;
    updatedAt?: Date | undefined;
    publishedAt?: Date | undefined;
    status?: ProductsStatus | undefined;
    tax?: Taxes | undefined;
    localizations?: Array<Localizations> | undefined;
};

/** @internal */
export const SkuValidation$ = z.nativeEnum(SkuValidation);

/** @internal */
export const ProductsStatus$ = z.nativeEnum(ProductsStatus);

/** @internal */
export namespace Products$ {
    export type Inbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        prices?: Array<Prices$.Inbound> | undefined;
        sku?: string | undefined;
        skuValidation?: SkuValidation | undefined;
        images?: Array<Images$.Inbound> | undefined;
        variants?: Array<Variants$.Inbound> | undefined;
        options?: Array<ProductOptions$.Inbound> | undefined;
        categories?: Array<string> | undefined;
        tags?: Array<string> | undefined;
        vendor?: string | undefined;
        brand?: Brands$.Inbound | undefined;
        inventoryQuantity?: number | undefined;
        inventoryLocation?: InventoryLocations$.Inbound | undefined;
        availableForSale?: boolean | undefined;
        dimensions?: Dimensions$.Inbound | undefined;
        weight?: number | undefined;
        weightUnit?: string | undefined;
        type?: string | undefined;
        metaTitle?: string | undefined;
        metaDescription?: string | undefined;
        seoKeywords?: Array<string> | undefined;
        slug?: string | undefined;
        accountIds?: Array<KeyValues$.Inbound> | undefined;
        customFields?: Array<CustomAttributes$.Inbound> | undefined;
        isDownloadable?: boolean | undefined;
        downloadFiles?: Array<Attachments$.Inbound> | undefined;
        relatedProducts?: Array<string> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        publishedAt?: string | undefined;
        status?: ProductsStatus | undefined;
        tax?: Taxes$.Inbound | undefined;
        localizations?: Array<Localizations$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<Products, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            prices: z.array(Prices$?.inboundSchema).optional(),
            sku: z.string().optional(),
            skuValidation: SkuValidation$.optional(),
            images: z.array(Images$?.inboundSchema).optional(),
            variants: z.array(Variants$?.inboundSchema).optional(),
            options: z.array(ProductOptions$?.inboundSchema).optional(),
            categories: z.array(z.string()).optional(),
            tags: z.array(z.string()).optional(),
            vendor: z.string().optional(),
            brand: Brands$?.inboundSchema.optional(),
            inventoryQuantity: z.number().optional(),
            inventoryLocation: InventoryLocations$?.inboundSchema.optional(),
            availableForSale: z.boolean().optional(),
            dimensions: Dimensions$?.inboundSchema.optional(),
            weight: z.number().optional(),
            weightUnit: z.string().optional(),
            type: z.string().optional(),
            metaTitle: z.string().optional(),
            metaDescription: z.string().optional(),
            seoKeywords: z.array(z.string()).optional(),
            slug: z.string().optional(),
            accountIds: z.array(KeyValues$?.inboundSchema).optional(),
            customFields: z.array(CustomAttributes$?.inboundSchema).optional(),
            isDownloadable: z.boolean().optional(),
            downloadFiles: z.array(Attachments$?.inboundSchema).optional(),
            relatedProducts: z.array(z.string()).optional(),
            createdAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            updatedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            publishedAt: z
                .string()
                .datetime({ offset: true })
                .transform((v) => new Date(v))
                .optional(),
            status: ProductsStatus$.optional(),
            tax: Taxes$?.inboundSchema.optional(),
            localizations: z.array(Localizations$?.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.prices === undefined ? null : { prices: v.prices }),
                ...(v.sku === undefined ? null : { sku: v.sku }),
                ...(v.skuValidation === undefined ? null : { skuValidation: v.skuValidation }),
                ...(v.images === undefined ? null : { images: v.images }),
                ...(v.variants === undefined ? null : { variants: v.variants }),
                ...(v.options === undefined ? null : { options: v.options }),
                ...(v.categories === undefined ? null : { categories: v.categories }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.vendor === undefined ? null : { vendor: v.vendor }),
                ...(v.brand === undefined ? null : { brand: v.brand }),
                ...(v.inventoryQuantity === undefined
                    ? null
                    : { inventoryQuantity: v.inventoryQuantity }),
                ...(v.inventoryLocation === undefined
                    ? null
                    : { inventoryLocation: v.inventoryLocation }),
                ...(v.availableForSale === undefined
                    ? null
                    : { availableForSale: v.availableForSale }),
                ...(v.dimensions === undefined ? null : { dimensions: v.dimensions }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
                ...(v.weightUnit === undefined ? null : { weightUnit: v.weightUnit }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.metaTitle === undefined ? null : { metaTitle: v.metaTitle }),
                ...(v.metaDescription === undefined
                    ? null
                    : { metaDescription: v.metaDescription }),
                ...(v.seoKeywords === undefined ? null : { seoKeywords: v.seoKeywords }),
                ...(v.slug === undefined ? null : { slug: v.slug }),
                ...(v.accountIds === undefined ? null : { accountIds: v.accountIds }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.isDownloadable === undefined ? null : { isDownloadable: v.isDownloadable }),
                ...(v.downloadFiles === undefined ? null : { downloadFiles: v.downloadFiles }),
                ...(v.relatedProducts === undefined
                    ? null
                    : { relatedProducts: v.relatedProducts }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.publishedAt === undefined ? null : { publishedAt: v.publishedAt }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.tax === undefined ? null : { tax: v.tax }),
                ...(v.localizations === undefined ? null : { localizations: v.localizations }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        title?: string | undefined;
        description?: string | undefined;
        prices?: Array<Prices$.Outbound> | undefined;
        sku?: string | undefined;
        skuValidation?: SkuValidation | undefined;
        images?: Array<Images$.Outbound> | undefined;
        variants?: Array<Variants$.Outbound> | undefined;
        options?: Array<ProductOptions$.Outbound> | undefined;
        categories?: Array<string> | undefined;
        tags?: Array<string> | undefined;
        vendor?: string | undefined;
        brand?: Brands$.Outbound | undefined;
        inventoryQuantity?: number | undefined;
        inventoryLocation?: InventoryLocations$.Outbound | undefined;
        availableForSale?: boolean | undefined;
        dimensions?: Dimensions$.Outbound | undefined;
        weight?: number | undefined;
        weightUnit?: string | undefined;
        type?: string | undefined;
        metaTitle?: string | undefined;
        metaDescription?: string | undefined;
        seoKeywords?: Array<string> | undefined;
        slug?: string | undefined;
        accountIds?: Array<KeyValues$.Outbound> | undefined;
        customFields?: Array<CustomAttributes$.Outbound> | undefined;
        isDownloadable?: boolean | undefined;
        downloadFiles?: Array<Attachments$.Outbound> | undefined;
        relatedProducts?: Array<string> | undefined;
        createdAt?: string | undefined;
        updatedAt?: string | undefined;
        publishedAt?: string | undefined;
        status?: ProductsStatus | undefined;
        tax?: Taxes$.Outbound | undefined;
        localizations?: Array<Localizations$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Products> = z
        .object({
            id: z.string().optional(),
            title: z.string().optional(),
            description: z.string().optional(),
            prices: z.array(Prices$?.outboundSchema).optional(),
            sku: z.string().optional(),
            skuValidation: SkuValidation$.optional(),
            images: z.array(Images$?.outboundSchema).optional(),
            variants: z.array(Variants$?.outboundSchema).optional(),
            options: z.array(ProductOptions$?.outboundSchema).optional(),
            categories: z.array(z.string()).optional(),
            tags: z.array(z.string()).optional(),
            vendor: z.string().optional(),
            brand: Brands$?.outboundSchema.optional(),
            inventoryQuantity: z.number().optional(),
            inventoryLocation: InventoryLocations$?.outboundSchema.optional(),
            availableForSale: z.boolean().optional(),
            dimensions: Dimensions$?.outboundSchema.optional(),
            weight: z.number().optional(),
            weightUnit: z.string().optional(),
            type: z.string().optional(),
            metaTitle: z.string().optional(),
            metaDescription: z.string().optional(),
            seoKeywords: z.array(z.string()).optional(),
            slug: z.string().optional(),
            accountIds: z.array(KeyValues$?.outboundSchema).optional(),
            customFields: z.array(CustomAttributes$?.outboundSchema).optional(),
            isDownloadable: z.boolean().optional(),
            downloadFiles: z.array(Attachments$?.outboundSchema).optional(),
            relatedProducts: z.array(z.string()).optional(),
            createdAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            updatedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            publishedAt: z
                .date()
                .transform((v) => v.toISOString())
                .optional(),
            status: ProductsStatus$.optional(),
            tax: Taxes$?.outboundSchema.optional(),
            localizations: z.array(Localizations$?.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.prices === undefined ? null : { prices: v.prices }),
                ...(v.sku === undefined ? null : { sku: v.sku }),
                ...(v.skuValidation === undefined ? null : { skuValidation: v.skuValidation }),
                ...(v.images === undefined ? null : { images: v.images }),
                ...(v.variants === undefined ? null : { variants: v.variants }),
                ...(v.options === undefined ? null : { options: v.options }),
                ...(v.categories === undefined ? null : { categories: v.categories }),
                ...(v.tags === undefined ? null : { tags: v.tags }),
                ...(v.vendor === undefined ? null : { vendor: v.vendor }),
                ...(v.brand === undefined ? null : { brand: v.brand }),
                ...(v.inventoryQuantity === undefined
                    ? null
                    : { inventoryQuantity: v.inventoryQuantity }),
                ...(v.inventoryLocation === undefined
                    ? null
                    : { inventoryLocation: v.inventoryLocation }),
                ...(v.availableForSale === undefined
                    ? null
                    : { availableForSale: v.availableForSale }),
                ...(v.dimensions === undefined ? null : { dimensions: v.dimensions }),
                ...(v.weight === undefined ? null : { weight: v.weight }),
                ...(v.weightUnit === undefined ? null : { weightUnit: v.weightUnit }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.metaTitle === undefined ? null : { metaTitle: v.metaTitle }),
                ...(v.metaDescription === undefined
                    ? null
                    : { metaDescription: v.metaDescription }),
                ...(v.seoKeywords === undefined ? null : { seoKeywords: v.seoKeywords }),
                ...(v.slug === undefined ? null : { slug: v.slug }),
                ...(v.accountIds === undefined ? null : { accountIds: v.accountIds }),
                ...(v.customFields === undefined ? null : { customFields: v.customFields }),
                ...(v.isDownloadable === undefined ? null : { isDownloadable: v.isDownloadable }),
                ...(v.downloadFiles === undefined ? null : { downloadFiles: v.downloadFiles }),
                ...(v.relatedProducts === undefined
                    ? null
                    : { relatedProducts: v.relatedProducts }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
                ...(v.publishedAt === undefined ? null : { publishedAt: v.publishedAt }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.tax === undefined ? null : { tax: v.tax }),
                ...(v.localizations === undefined ? null : { localizations: v.localizations }),
            };
        });
}
